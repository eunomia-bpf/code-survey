--------------------
Processing Commit ID: b831f83e40a24f07c8dcba5be408d93beedc820f
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: b831f83e40a24f07c8dcba5be408d93beedc820f
  Author Name: Linus Torvalds
  Author Email: torvalds@linux-foundation.org
  Commit Date: 1725592253
  Commit Message:
    Merge tag 'bpf-6.11-rc7' of git://git.kernel.org/pub/scm/linux/kernel/git/bpf/bpf

Pull bpf fixes from Alexei Starovoitov:

 - Fix crash when btf_parse_base() returns an error (Martin Lau)

 - Fix out of bounds access in btf_name_valid_section() (Jeongjun Park)

* tag 'bpf-6.11-rc7' of git://git.kernel.org/pub/scm/linux/kernel/git/bpf/bpf:
  selftests/bpf: Add a selftest to check for incorrect names
  bpf: add check for invalid name in btf_name_valid_section()
  bpf: Fix a crash when btf_parse_base() returns an error pointer

  Parent Hashes: d759ee240d3c0c4a19f4d984eb21c36da76bc6ce 5390f315fc8c9b9f48105a0d88b56bc59fa2b3e0
  Refs: 

- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'This commit is a merge containing bug fixes related to BTF parsing in the eBPF subsystem.', 'keywords': 'BTF,crash,fix', 'commit_classification': "It's a bug fix.", 'commit_complexity': 'Moderate, requires some setup or understanding of the system. For example, a new map type or a new link type.', 'Major related component': 'The BPF Type Format (BTF)', 'program_types_related': ['It improves the overall eBPF infrastructure (e.g., verifier, runtime, etc.).']}
--------------------
--------------------
Processing Commit ID: d759ee240d3c0c4a19f4d984eb21c36da76bc6ce
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: d759ee240d3c0c4a19f4d984eb21c36da76bc6ce
  Author Name: Linus Torvalds
  Author Email: torvalds@linux-foundation.org
  Commit Date: 1725581281
  Commit Message:
    Merge tag 'net-6.11-rc7' of git://git.kernel.org/pub/scm/linux/kernel/git/netdev/net

Pull networking fixes from Jakub Kicinski:
 "Including fixes from can
  Parent Hashes: f95359996ac35206ff24e378052ce564d5bfdc94 031ae72825cef43e4650140b800ad58bf7a6a466
  Refs:  bluetooth and wireless.

  No known regressions at this point. Another calm week

- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'Merge networking fixes from Jakub Kicinski into Linux kernel by Linus Torvalds.', 'keywords': 'networking, fixes, merge', 'commit_classification': "It's other type of commit.", 'commit_complexity': 'Simple, can be used without much configuration. For example, a simple helper function.', 'Major related component': 'Other component related to eBPF but not listed above.', 'program_types_related': ["It's not related to any of the above."]}
--------------------
--------------------
Processing Commit ID: f0417c50fddd628e534c336d87932e7e1e883df3
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: f0417c50fddd628e534c336d87932e7e1e883df3
  Author Name: Jakub Kicinski
  Author Email: kuba@kernel.org
  Commit Date: 1725496657
  Commit Message:
    Merge branch '100GbE' of git://git.kernel.org/pub/scm/linux/kernel/git/tnguy/net-queue

Tony Nguyen says:

====================
ice: fix synchronization between .ndo_bpf() and reset

Larysa Zaremba says:

PF reset can be triggered asynchronously
  Parent Hashes: 2603d3152b1f646b0ef81a748fb703b799fcf9c3 04c7e14e5b0b6227e7b00d7a96ca2f2426ab9171
  Refs:  by tx_timeout or by a user. With some
unfortunate timings both ice_vsi_rebuild() and .ndo_bpf will try to access and
modify XDP rings at the same time

- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'Fix synchronization issue between .ndo_bpf() and reset in the ice driver due to async PF resets.', 'keywords': 'synchronization, reset, ice', 'commit_classification': "It's a bug fix.", 'commit_complexity': 'Moderate, requires some setup or understanding of the system. For example, a new map type or a new link type.', 'Major related component': 'Other component related to eBPF but not listed above.', 'program_types_related': ['xdp like programs']}
--------------------
--------------------
Processing Commit ID: 5390f315fc8c9b9f48105a0d88b56bc59fa2b3e0
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: 5390f315fc8c9b9f48105a0d88b56bc59fa2b3e0
  Author Name: Alexei Starovoitov
  Author Email: ast@kernel.org
  Commit Date: 1725478504
  Commit Message:
    Merge branch 'bpf-fix-incorrect-name-check-pass-logic-in-btf_name_valid_section'

Jeongjun Park says:

====================
bpf: fix incorrect name check pass logic in btf_name_valid_section

This patch was written to fix an issue where btf_name_valid_section() would
not properly check names with certain conditions and would throw an OOB vuln.
And selftest was added to verify this patch.
====================

Link: https://lore.kernel.org/r/20240831054525.364353-1-aha310510@gmail.com
Signed-off-by: Alexei Starovoitov <ast@kernel.org>

  Parent Hashes: b408473ea01b2e499d23503e2bf898416da9d7ac 743070894724bf5ee0b2c77a28f838f6244d19bd
  Refs: 

- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'Fixes incorrect name check logic in btf_name_valid_section and adds a selftest.', 'keywords': 'fix, name check, btf', 'commit_classification': "It's a bug fix.", 'commit_complexity': 'Moderate, requires some setup or understanding of the system. For example, a new map type or a new link type.', 'Major related component': 'The BPF Type Format (BTF)', 'program_types_related': ['It improves the overall eBPF infrastructure (e.g., verifier, runtime, etc.).']}
--------------------
--------------------
Processing Commit ID: 743070894724bf5ee0b2c77a28f838f6244d19bd
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: 743070894724bf5ee0b2c77a28f838f6244d19bd
  Author Name: Jeongjun Park
  Author Email: aha310510@gmail.com
  Commit Date: 1725478459
  Commit Message:
    selftests/bpf: Add a selftest to check for incorrect names

Add selftest for cases where btf_name_valid_section() does not properly
check for certain types of names.

Suggested-by: Eduard Zingerman <eddyz87@gmail.com>
Signed-off-by: Jeongjun Park <aha310510@gmail.com>
Link: https://lore.kernel.org/r/20240831054742.364585-1-aha310510@gmail.com
Signed-off-by: Alexei Starovoitov <ast@kernel.org>
Acked-by: Eduard Zingerman <eddyz87@gmail.com>

  Parent Hashes: bb6705c3f93bed2af03d43691743d4c43e3c8e6f
  Refs: 

- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'Added a selftest to verify btf_name_valid_section() function for incorrect names.', 'keywords': 'selftest, btf_name_valid_section, names', 'commit_classification': "It's a test case or test infrastructure change.", 'commit_complexity': 'Simple, can be used without much configuration. For example, a simple helper function.', 'Major related component': 'The test cases and makefiles', 'program_types_related': ['It improves the overall eBPF infrastructure (e.g., verifier, runtime, etc.).']}
--------------------
--------------------
Processing Commit ID: bb6705c3f93bed2af03d43691743d4c43e3c8e6f
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: bb6705c3f93bed2af03d43691743d4c43e3c8e6f
  Author Name: Jeongjun Park
  Author Email: aha310510@gmail.com
  Commit Date: 1725476194
  Commit Message:
    bpf: add check for invalid name in btf_name_valid_section()

If the length of the name string is 1 and the value of name[0] is NULL
byte
  Parent Hashes: b408473ea01b2e499d23503e2bf898416da9d7ac
  Refs:  an OOB vulnerability occurs in btf_name_valid_section() and the
return value is true

- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'The commit adds a check for invalid names in btf_name_valid_section to prevent an OOB vulnerability.', 'keywords': 'check, invalid, btf_name_valid_section', 'commit_classification': "It's a bug fix.", 'commit_complexity': 'Moderate, requires some setup or understanding of the system. For example, a new map type or a new link type.', 'Major related component': 'The BPF Type Format (BTF)', 'program_types_related': ['It improves the overall eBPF infrastructure (e.g., verifier, runtime, etc.).']}
--------------------
--------------------
Processing Commit ID: 33f339a1ba54e56bba57ee9a77c71e385ab4825c
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: 33f339a1ba54e56bba57ee9a77c71e385ab4825c
  Author Name: Tze-nan Wu
  Author Email: Tze-nan.Wu@mediatek.com
  Commit Date: 1725390384
  Commit Message:
    bpf
  Parent Hashes: 77461c10819103eaee7b33c744174b32a8c78b40
  Refs:  net: Fix a potential race in do_sock_getsockopt()

There's a potential race when `cgroup_bpf_enabled(CGROUP_GETSOCKOPT)` is
false during the execution of `BPF_CGROUP_GETSOCKOPT_MAX_OPTLEN`

- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'Fix potential race condition in do_sock_getsockopt when cgroup_bpf_enabled is false for CGROUP_GETSOCKOPT.', 'keywords': 'race condition,cgroup_bpf_enabled,sock_getsockopt', 'commit_classification': "It's a bug fix.", 'commit_complexity': 'Moderate, requires some setup or understanding of the system. For example, a new map type or a new link type.', 'Major related component': 'The attach events and bpf link. e.g. perf events, tracepoints, etc.', 'program_types_related': ['cgroup like programs']}
--------------------
--------------------
Processing Commit ID: 04c7e14e5b0b6227e7b00d7a96ca2f2426ab9171
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: 04c7e14e5b0b6227e7b00d7a96ca2f2426ab9171
  Author Name: Larysa Zaremba
  Author Email: larysa.zaremba@intel.com
  Commit Date: 1725379540
  Commit Message:
    ice: do not bring the VSI up
  Parent Hashes: 7e3b407ccbea3259b8583ccc34807622025e390f
  Refs:  if it was down before the XDP setup

After XDP configuration is completed

- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'Prevent bringing up VSI if it was down before XDP setup.', 'keywords': 'VSI,XDP,setup', 'commit_classification': "It's other type of commit.", 'commit_complexity': 'Moderate, requires some setup or understanding of the system. For example, a new map type or a new link type.', 'Major related component': 'The attach events and bpf link. e.g. perf events, tracepoints, etc.', 'program_types_related': ['xdp like programs']}
--------------------
--------------------
Processing Commit ID: d8c40b9d3a6cef61eb5a0c58c34a3090ea938d89
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: d8c40b9d3a6cef61eb5a0c58c34a3090ea938d89
  Author Name: Larysa Zaremba
  Author Email: larysa.zaremba@intel.com
  Commit Date: 1725379268
  Commit Message:
    ice: check ICE_VSI_DOWN under rtnl_lock when preparing for reset

Consider the following scenario:

.ndo_bpf()		| ice_prepare_for_reset()		|
________________________|_______________________________________|
rtnl_lock()		|					|
ice_down()		|					|
			| test_bit(ICE_VSI_DOWN) - true		|
			| ice_dis_vsi() returns			|
ice_up()		|					|
			| proceeds to rebuild a running VSI	|

.ndo_bpf() is not the only rtnl-locked callback that toggles the interface
to apply new configuration. Another example is .set_channels().

To avoid the race condition above
  Parent Hashes: f50c68763436bc8f805712a7c5ceaf58cfcf5f07
  Refs:  act only after reading ICE_VSI_DOWN
under rtnl_lock.

Fixes: 0f9d5027a749 ("ice: Refactor VSI allocation

- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'The commit resolves a race condition by ensuring ICE_VSI_DOWN is checked under rtnl_lock before proceeding with reset preparation.', 'keywords': 'race, rtnl_lock, ICE_VSI_DOWN', 'commit_classification': "It's a bug fix.", 'commit_complexity': 'Moderate, requires some setup or understanding of the system. For example, a new map type or a new link type.', 'Major related component': 'Other component related to eBPF but not listed above.', 'program_types_related': ['other']}
--------------------
--------------------
Processing Commit ID: f50c68763436bc8f805712a7c5ceaf58cfcf5f07
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: f50c68763436bc8f805712a7c5ceaf58cfcf5f07
  Author Name: Larysa Zaremba
  Author Email: larysa.zaremba@intel.com
  Commit Date: 1725379100
  Commit Message:
    ice: check for XDP rings instead of bpf program when unconfiguring

If VSI rebuild is pending
  Parent Hashes: 2504b8405768a57a71e660dbfd5abd59f679a03f
  Refs:  .ndo_bpf() can attach/detach the XDP program on
VSI without applying new ring configuration. When unconfiguring the VSI

- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'The commit checks XDP rings presence instead of bpf program during unconfiguration if VSI rebuild is pending.', 'keywords': 'XDP rings,VSI rebuild,unconfiguration', 'commit_classification': "It's a new feature.", 'commit_complexity': 'Moderate, requires some setup or understanding of the system. For example, a new map type or a new link type.', 'Major related component': 'The attach events and bpf link. e.g. perf events, tracepoints, etc.', 'program_types_related': ['xdp like programs']}
--------------------
--------------------
Processing Commit ID: 2a5dc090b92cfa5270e20056074241c6db5c9cdd
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: 2a5dc090b92cfa5270e20056074241c6db5c9cdd
  Author Name: Larysa Zaremba
  Author Email: larysa.zaremba@intel.com
  Commit Date: 1725378496
  Commit Message:
    ice: move netif_queue_set_napi to rtnl-protected sections

Currently
  Parent Hashes: cfd433cecef929b4d92685f570f1a480762ec260
  Refs:  netif_queue_set_napi() is called from ice_vsi_rebuild() that is
not rtnl-locked when called from the reset. This creates the need to take
the rtnl_lock just for a single function and complicates the
synchronization with .ndo_bpf. At the same time

- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'The commit moves netif_queue_set_napi to rtnl-protected sections for better synchronization.', 'keywords': 'netif_queue_set_napi,rtnl_lock,synchronization', 'commit_classification': "It's a cleanup or refactoring in the code.", 'commit_complexity': 'Moderate, requires some setup or understanding of the system. For example, a new map type or a new link type.', 'Major related component': 'Other component related to eBPF but not listed above.', 'program_types_related': ["It's not related to any of the above."]}
--------------------
--------------------
Processing Commit ID: 287bd5cf06e0f2c02293ce942777ad1f18059ed3
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: 287bd5cf06e0f2c02293ce942777ad1f18059ed3
  Author Name: Namhyung Kim
  Author Email: namhyung@kernel.org
  Commit Date: 1725303564
  Commit Message:
    perf lock contention: Fix spinlock and rwlock accounting

The spinlock and rwlock use a single-element per-cpu array to track
current locks due to performance reason.  But this means the key is
always available and it cannot simply account lock stats in the array
because some of them are invalid.

In fact
  Parent Hashes: 1c7fb536e899a2f66f9b1719a0234570dda2e634
  Refs:  the contention_end() program in the BPF invalidates the entry
by setting the 'lock' value to 0 instead of deleting the entry for the
hashmap.  So it should skip entries with the lock value of 0 in the
account_end_timestamp().

Otherwise

- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'Fixes accounting issues in spinlock and rwlock usage for perf lock contention related to BPF program.', 'keywords': 'spinlock rwlock accounting', 'commit_classification': "It's a bug fix.", 'commit_complexity': 'Moderate, requires some setup or understanding of the system. For example, a new map type or a new link type.', 'Major related component': 'The attach events and bpf link. e.g. perf events, tracepoints, etc.', 'program_types_related': ['tracepoints like programs']}
--------------------
--------------------
Processing Commit ID: fe1910f9337bd46a9343967b547ccab26b4b2c6e
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: fe1910f9337bd46a9343967b547ccab26b4b2c6e
  Author Name: Cong Wang
  Author Email: cong.wang@bytedance.com
  Commit Date: 1725041350
  Commit Message:
    tcp_bpf: fix return value of tcp_bpf_sendmsg()

When we cork messages in psock->cork
  Parent Hashes: 98d4435efcbf37801a3246fb53856c4b934a2613
  Refs:  the last message triggers the
flushing will result in sending a sk_msg larger than the current
message size. In this case

- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'Fix return value issue in tcp_bpf_sendmsg function when corking messages.', 'keywords': 'tcp_bpf,fix,sendmsg', 'commit_classification': "It's a bug fix.", 'commit_complexity': 'Simple, can be used without much configuration. For example, a simple helper function.', 'Major related component': 'Other component related to eBPF but not listed above.', 'program_types_related': ['socket like programs']}
--------------------
--------------------
Processing Commit ID: b408473ea01b2e499d23503e2bf898416da9d7ac
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: b408473ea01b2e499d23503e2bf898416da9d7ac
  Author Name: Martin KaFai Lau
  Author Email: martin.lau@kernel.org
  Commit Date: 1725039287
  Commit Message:
    bpf: Fix a crash when btf_parse_base() returns an error pointer

The pointer returned by btf_parse_base could be an error pointer.
IS_ERR() check is needed before calling btf_free(base_btf).

Fixes: 8646db238997 ("libbpf
  Parent Hashes: 872cf28b8df9c5c3a1e71a88ee750df7c2513971
  Refs: bpf: Share BTF relocate-related code with kernel")
Signed-off-by: Martin KaFai Lau <martin.lau@kernel.org>
Signed-off-by: Andrii Nakryiko <andrii@kernel.org>
Reviewed-by: Alan Maguire <alan.maguire@oracle.com>
Acked-by: Eduard Zingerman <eddyz87@gmail.com>
Link: https://lore.kernel.org/bpf/20240830012214.1646005-1-martin.lau@linux.dev


- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'Fixes a crash caused by error pointer returned from btf_parse_base by adding IS_ERR() check before calling btf_free.', 'keywords': 'crash,error pointer,btf_parse_base', 'commit_classification': "It's a bug fix.", 'commit_complexity': 'Simple, can be used without much configuration. For example, a simple helper function.', 'Major related component': 'The BPF Type Format (BTF)', 'program_types_related': ['It improves the overall eBPF infrastructure (e.g., verifier, runtime, etc.).']}
--------------------
--------------------
Processing Commit ID: 2aeeef906d5a526dc60cf4af92eda69836c39b1f
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: 2aeeef906d5a526dc60cf4af92eda69836c39b1f
  Author Name: Jianbo Liu
  Author Email: jianbol@nvidia.com
  Commit Date: 1724789497
  Commit Message:
    bonding: change ipsec_lock from spin lock to mutex

In the cited commit
  Parent Hashes: 907ed83a7583e8ffede88c5ac088392701a7d458
  Refs:  bond->ipsec_lock is added to protect ipsec_list

- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'The commit changes the ipsec_lock from a spin lock to a mutex for better protection of ipsec_list.', 'keywords': 'ipsec_lock, mutex, bonding', 'commit_classification': "It's other type of commit.", 'commit_complexity': 'Simple, can be used without much configuration. For example, a simple helper function.', 'Major related component': 'Other component related to eBPF but not listed above.', 'program_types_related': ['other']}
--------------------
--------------------
Processing Commit ID: 8baeef7616d5194045c5a6b97fd1246b87c55b13
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: 8baeef7616d5194045c5a6b97fd1246b87c55b13
  Author Name: Somnath Kotur
  Author Email: somnath.kotur@broadcom.com
  Commit Date: 1724287016
  Commit Message:
    bnxt_en: Fix double DMA unmapping for XDP_REDIRECT

Remove the dma_unmap_page_attrs() call in the driver's XDP_REDIRECT
code path.  This should have been removed when we let the page pool
handle the DMA mapping.  This bug causes the warning:

WARNING: CPU: 7 PID: 59 at drivers/iommu/dma-iommu.c:1198 iommu_dma_unmap_page+0xd5/0x100
CPU: 7 PID: 59 Comm: ksoftirqd/7 Tainted: G        W          6.8.0-1010-gcp #11-Ubuntu
Hardware name: Dell Inc. PowerEdge R7525/0PYVT1
  Parent Hashes: 58652e2422a7407e77ee50fcaaf4bf1885de8753
  Refs:  BIOS 2.15.2 04/02/2024
RIP: 0010:iommu_dma_unmap_page+0xd5/0x100
Code: 89 ee 48 89 df e8 cb f2 69 ff 48 83 c4 08 5b 41 5c 41 5d 41 5e 41 5f 5d 31 c0 31 d2 31 c9 31 f6 31 ff 45 31 c0 e9 ab 17 71 00 <0f> 0b 48 83 c4 08 5b 41 5c 41 5d 41 5e 41 5f 5d 31 c0 31 d2 31 c9
RSP: 0018:ffffab1fc0597a48 EFLAGS: 00010246
RAX: 0000000000000000 RBX: ffff99ff838280c8 RCX: 0000000000000000
RDX: 0000000000000000 RSI: 0000000000000000 RDI: 0000000000000000
RBP: ffffab1fc0597a78 R08: 0000000000000002 R09: ffffab1fc0597c1c
R10: ffffab1fc0597cd3 R11: ffff99ffe375acd8 R12: 00000000e65b9000
R13: 0000000000000050 R14: 0000000000001000 R15: 0000000000000002
FS:  0000000000000000(0000) GS:ffff9a06efb80000(0000) knlGS:0000000000000000
CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033
CR2: 0000565c34c37210 CR3: 00000005c7e3e000 CR4: 0000000000350ef0
? show_regs+0x6d/0x80
? __warn+0x89/0x150
? iommu_dma_unmap_page+0xd5/0x100
? report_bug+0x16a/0x190
? handle_bug+0x51/0xa0
? exc_invalid_op+0x18/0x80
? iommu_dma_unmap_page+0xd5/0x100
? iommu_dma_unmap_page+0x35/0x100
dma_unmap_page_attrs+0x55/0x220
? bpf_prog_4d7e87c0d30db711_xdp_dispatcher+0x64/0x9f
bnxt_rx_xdp+0x237/0x520 [bnxt_en]
bnxt_rx_pkt+0x640/0xdd0 [bnxt_en]
__bnxt_poll_work+0x1a1/0x3d0 [bnxt_en]
bnxt_poll+0xaa/0x1e0 [bnxt_en]
__napi_poll+0x33/0x1e0
net_rx_action+0x18a/0x2f0

Fixes: 578fcfd26e2a ("bnxt_en: Let the page pool manage the DMA mapping")
Reviewed-by: Andy Gospodarek <andrew.gospodarek@broadcom.com>
Reviewed-by: Kalesh AP <kalesh-anakkur.purayil@broadcom.com>
Signed-off-by: Somnath Kotur <somnath.kotur@broadcom.com>
Signed-off-by: Michael Chan <michael.chan@broadcom.com>
Reviewed-by: Jacob Keller <jacob.e.keller@intel.com>
Link: https://patch.msgid.link/20240820203415.168178-1-michael.chan@broadcom.com
Signed-off-by: Jakub Kicinski <kuba@kernel.org>


- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'Fix to remove unnecessary DMA unmapping in bnxt_en driver for XDP_REDIRECT.', 'keywords': 'bnxt_en,DMA unmapping,XDP_REDIRECT', 'commit_classification': "It's a bug fix.", 'commit_complexity': 'Simple, can be used without much configuration. For example, a simple helper function.', 'Major related component': "It's not related to any of the above, it's not related to bpf subsystem in Linux kernel, may be wrong data.", 'program_types_related': ['xdp like programs']}
--------------------
--------------------
Processing Commit ID: a069a22f391019e84390f4e8c1a9c531ba4fb28f
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: a069a22f391019e84390f4e8c1a9c531ba4fb28f
  Author Name: Masami Hiramatsu (Google)
  Author Email: mhiramat@kernel.org
  Commit Date: 1724262599
  Commit Message:
    tracing: fgraph: Fix to add new fgraph_ops to array after ftrace_startup_subops()

Since the register_ftrace_graph() assigns a new fgraph_ops to
fgraph_array before registring it by ftrace_startup_subops()
  Parent Hashes: 47ac09b91befbb6a235ab620c32af719f8208399
  Refs:  the new
fgraph_ops can be used in function_graph_enter().

In most cases

- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'Fix the order of operations when adding new fgraph ops to the array for ftrace graph functionality.', 'keywords': 'fgraph_ops,ftrace,tracing', 'commit_classification': "It's a bug fix.", 'commit_complexity': 'Simple, can be used without much configuration. For example, a simple helper function.', 'Major related component': 'Other component related to eBPF but not listed above.', 'program_types_related': ['It improves the overall eBPF infrastructure (e.g., verifier, runtime, etc.).']}
--------------------
--------------------
Processing Commit ID: f8cde9805981c50d0c029063dc7d82821806fc44
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: f8cde9805981c50d0c029063dc7d82821806fc44
  Author Name: Nikolay Aleksandrov
  Author Email: razor@blackwall.org
  Commit Date: 1724160569
  Commit Message:
    bonding: fix xfrm real_dev null pointer dereference

We shouldn't set real_dev to NULL because packets can be in transit and
xfrm might call xdo_dev_offload_ok() in parallel. All callbacks assume
real_dev is set.

 Example trace:
 kernel: BUG: unable to handle page fault for address: 0000000000001030
 kernel: bond0: (slave eni0np1): making interface the new active one
 kernel: #PF: supervisor write access in kernel mode
 kernel: #PF: error_code(0x0002) - not-present page
 kernel: PGD 0 P4D 0
 kernel: Oops: 0002 [#1] PREEMPT SMP
 kernel: CPU: 4 PID: 2237 Comm: ping Not tainted 6.7.7+ #12
 kernel: Hardware name: QEMU Standard PC (Q35 + ICH9
  Parent Hashes: 95c90e4ad89d493a7a14fa200082e466e2548f9d
  Refs:  2009)

- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': "Fixes a null pointer dereference in bonding related to xfrm's real_dev setting during packet transit.", 'keywords': 'bonding,null-pointer,xfrm', 'commit_classification': "It's a bug fix.", 'commit_complexity': 'Moderate, requires some setup or understanding of the system. For example, a new map type or a new link type.', 'Major related component': 'Other component related to eBPF but not listed above.', 'program_types_related': ["It's not related to any of the above."]}
--------------------
--------------------
Processing Commit ID: 69139d2919dd4aa9a553c8245e7c63e82613e3fc
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: 69139d2919dd4aa9a553c8245e7c63e82613e3fc
  Author Name: Cong Wang
  Author Email: cong.wang@bytedance.com
  Commit Date: 1723716424
  Commit Message:
    vsock: fix recursive ->recvmsg calls

After a vsock socket has been added to a BPF sockmap
  Parent Hashes: b2ca1661c7db9693095cee7991c55d67c3b5d346
  Refs:  its prot->recvmsg
has been replaced with vsock_bpf_recvmsg(). Thus the following
recursiion could happen:

vsock_bpf_recvmsg()
 -> __vsock_recvmsg()
  -> vsock_connectible_recvmsg()
   -> prot->recvmsg()
    -> vsock_bpf_recvmsg() again

We need to fix it by calling the original ->recvmsg() without any BPF
sockmap logic in __vsock_recvmsg().

Fixes: 634f1a7110b4 ("vsock: support sockmap")
Reported-by: syzbot+bdb4bd87b5e22058e2a4@syzkaller.appspotmail.com
Tested-by: syzbot+bdb4bd87b5e22058e2a4@syzkaller.appspotmail.com
Cc: Bobby Eshleman <bobby.eshleman@bytedance.com>
Cc: Michael S. Tsirkin <mst@redhat.com>
Cc: Stefano Garzarella <sgarzare@redhat.com>
Signed-off-by: Cong Wang <cong.wang@bytedance.com>
Acked-by: Michael S. Tsirkin <mst@redhat.com>
Link: https://patch.msgid.link/20240812022153.86512-1-xiyou.wangcong@gmail.com
Signed-off-by: Paolo Abeni <pabeni@redhat.com>



- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'Fixes recursive calls in vsock recvmsg function after integration with BPF sockmap.', 'keywords': 'vsock,BPF,recvmsg', 'commit_classification': "It's a bug fix.", 'commit_complexity': 'Moderate, requires some setup or understanding of the system. For example, a new map type or a new link type.', 'Major related component': 'The syscall interface', 'program_types_related': ['socket like programs', 'tracepoints like programs']}
--------------------
--------------------
Processing Commit ID: 02f8ca3d49055788f112c17052a3da65feb01835
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: 02f8ca3d49055788f112c17052a3da65feb01835
  Author Name: Linus Torvalds
  Author Email: torvalds@linux-foundation.org
  Commit Date: 1723651044
  Commit Message:
    Merge tag 'bpf-6.11-rc4' of git://git.kernel.org/pub/scm/linux/kernel/git/bpf/bpf

Pull bpf fixes from Alexei Starovoitov:

 - Fix bpftrace regression from Kyle Huey.

   Tracing bpf prog was called with perf_event input arguments causing
   bpftrace produce garbage output.

 - Fix verifier crash in stacksafe() from Yonghong Song.

   Daniel Hodges reported verifier crash when playing with sched-ext.
   The stack depth in the known verifier state was larger than stack
   depth in being explored state causing out-of-bounds access.

 - Fix update of freplace prog in prog_array from Leon Hwang.

   freplace prog type wasn't recognized correctly.

* tag 'bpf-6.11-rc4' of git://git.kernel.org/pub/scm/linux/kernel/git/bpf/bpf:
  perf/bpf: Don't call bpf_overflow_handler() for tracing events
  selftests/bpf: Add a test to verify previous stacksafe() fix
  bpf: Fix a kernel verifier crash in stacksafe()
  bpf: Fix updating attached freplace prog in prog_array map

  Parent Hashes: 6b0f8db921abf0520081d779876d3a41069dab95 100bff23818eb61751ed05d64a7df36ce9728a4d
  Refs: 

- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'The commit merges bpf fixes including regression fixes, verifier crash fix, and update issues for the freplace prog in prog_array.', 'keywords': 'bpf, regression, verifier', 'commit_classification': "It's a bug fix.", 'commit_complexity': 'Moderate, requires some setup or understanding of the system. For example, a new map type or a new link type.', 'Major related component': 'Other component related to eBPF but not listed above.', 'program_types_related': ['tracepoints like programs', 'It improves the overall eBPF infrastructure (e.g., verifier, runtime, etc.).']}
--------------------
--------------------
Processing Commit ID: 100bff23818eb61751ed05d64a7df36ce9728a4d
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: 100bff23818eb61751ed05d64a7df36ce9728a4d
  Author Name: Kyle Huey
  Author Email: me@kylehuey.com
  Commit Date: 1723569928
  Commit Message:
    perf/bpf: Don't call bpf_overflow_handler() for tracing events

The regressing commit is new in 6.10. It assumed that anytime event->prog
is set bpf_overflow_handler() should be invoked to execute the attached bpf
program. This assumption is false for tracing events
  Parent Hashes: 662c3e2db00f92e50c26e9dc4fe47c52223d9982
  Refs:  and as a result the
regressing commit broke bpftrace by invoking the bpf handler with garbage
inputs on overflow.

Prior to the regression the overflow handlers formed a chain (of length 0

- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'Fixes incorrect invocation of bpf_overflow_handler() for tracing events causing regression in bpftrace.', 'keywords': 'perf,BPF,tracing', 'commit_classification': "It's a bug fix.", 'commit_complexity': 'Moderate, requires some setup or understanding of the system. For example, a new map type or a new link type.', 'Major related component': 'The attach events and bpf link. e.g. perf events, tracepoints, etc.', 'program_types_related': ['tracepoints like programs', 'kprobe/uprobe/ftrace like programs']}
--------------------
--------------------
Processing Commit ID: 6252690f7e1b173b86a4c27dfc046b351ab423e7
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: 6252690f7e1b173b86a4c27dfc046b351ab423e7
  Author Name: Naohiro Aota
  Author Email: naohiro.aota@wdc.com
  Commit Date: 1723556217
  Commit Message:
    btrfs: fix invalid mapping of extent xarray state

In __extent_writepage_io()
  Parent Hashes: 46a6e10a1ab16cc71d4a3cab73e79aabadd6b8ea
  Refs:  we call btrfs_set_range_writeback() ->
folio_start_writeback()

- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'Fixes invalid extent xarray state mapping in btrfs during writepage IO operation.', 'keywords': 'btrfs,fix,xarray', 'commit_classification': "It's a bug fix.", 'commit_complexity': 'Moderate, requires some setup or understanding of the system. For example, a new map type or a new link type.', 'Major related component': 'Other component related to eBPF but not listed above.', 'program_types_related': ["It's not related to any of the above."]}
--------------------
--------------------
Processing Commit ID: 662c3e2db00f92e50c26e9dc4fe47c52223d9982
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: 662c3e2db00f92e50c26e9dc4fe47c52223d9982
  Author Name: Yonghong Song
  Author Email: yonghong.song@linux.dev
  Commit Date: 1723511733
  Commit Message:
    selftests/bpf: Add a test to verify previous stacksafe() fix

A selftest is added such that without the previous patch
  Parent Hashes: bed2eb964c70b780fb55925892a74f26cb590b25
  Refs: 
a crash can happen. With the previous patch

- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'Add selftest to verify the previous stacksafe() bug fix in bpf.', 'keywords': 'selftest, stacksafe, verify', 'commit_classification': "It's a test case or test infrastructure change.", 'commit_complexity': 'Simple, can be used without much configuration. For example, a simple helper function.', 'Major related component': 'The test cases and makefiles', 'program_types_related': ['It improves the overall eBPF infrastructure (e.g., verifier, runtime, etc.).']}
--------------------
--------------------
Processing Commit ID: bed2eb964c70b780fb55925892a74f26cb590b25
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: bed2eb964c70b780fb55925892a74f26cb590b25
  Author Name: Yonghong Song
  Author Email: yonghong.song@linux.dev
  Commit Date: 1723511388
  Commit Message:
    bpf: Fix a kernel verifier crash in stacksafe()

Daniel Hodges reported a kernel verifier crash when playing with sched-ext.
Further investigation shows that the crash is due to invalid memory access
in stacksafe(). More specifically
  Parent Hashes: fdad456cbcca739bae1849549c7a999857c56f88
  Refs:  it is the following code:

    if (exact != NOT_EXACT &&
        old->stack[spi].slot_type[i % BPF_REG_SIZE] !=
        cur->stack[spi].slot_type[i % BPF_REG_SIZE])
            return false;

The 'i' iterates old->allocated_stack.
If cur->allocated_stack < old->allocated_stack the out-of-bound
access will happen.

To fix the issue add 'i >= cur->allocated_stack' check such that if
the condition is true

- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'Fixes a kernel verifier crash caused by invalid memory access in the stacksafe function.', 'keywords': 'kernel verifier, stacksafe, crash', 'commit_classification': "It's a bug fix.", 'commit_complexity': 'Moderate, requires some setup or understanding of the system. For example, a new map type or a new link type.', 'Major related component': 'The eBPF verifier', 'program_types_related': ['scheduler like programs']}
--------------------
--------------------
Processing Commit ID: fdad456cbcca739bae1849549c7a999857c56f88
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: fdad456cbcca739bae1849549c7a999857c56f88
  Author Name: Leon Hwang
  Author Email: leon.hwang@linux.dev
  Commit Date: 1723501549
  Commit Message:
    bpf: Fix updating attached freplace prog in prog_array map

The commit f7866c358733 ("bpf: Fix null pointer dereference in resolve_prog_type() for BPF_PROG_TYPE_EXT")
fixed a NULL pointer dereference panic
  Parent Hashes: d74da846046aeec9333e802f5918bd3261fb5509
  Refs:  but didn't fix the issue that
fails to update attached freplace prog to prog_array map.

Since commit 1c123c567fb1 ("bpf: Resolve fext program type when checking map compatibility")

- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'Fix issue with updating attached freplace prog in prog_array map.', 'keywords': 'bpf, fix, prog_array', 'commit_classification': "It's a bug fix.", 'commit_complexity': 'Moderate, requires some setup or understanding of the system. For example, a new map type or a new link type.', 'Major related component': 'The helper and kfuncs', 'program_types_related': ['It improves the overall eBPF infrastructure (e.g., verifier, runtime, etc.).']}
--------------------
--------------------
Processing Commit ID: 1fc2021941241bf32728a198bc0a7f38669e44a5
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: 1fc2021941241bf32728a198bc0a7f38669e44a5
  Author Name: David S. Miller
  Author Email: davem@davemloft.net
  Commit Date: 1723459616
  Commit Message:
    Merge branch 'vsc73xx-fix-mdio-and-phy'

Pawel Dembicki says:

====================
net: dsa: vsc73xx: fix MDIO bus access and PHY opera

This series are extracted patches from net-next series [0].

The VSC73xx driver has issues with PHY configuration. This patch series
fixes most of them.

The first patch synchronizes the register configuration routine with the
datasheet recommendations.

Patches 2-3 restore proper communication on the MDIO bus. Currently
  Parent Hashes: 9ff2f816e2aa65ca9a1cdf0954842f8173c0f48d de7a670f8defe4ed2115552ad23dea0f432f7be4
  Refs: 
the write value isn't sent to the MDIO register

- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'Fixes issues in the VSC73xx driver for MDIO bus access and PHY operations.', 'keywords': 'VSC73xx, MDIO, PHY', 'commit_classification': "It's a bug fix.", 'commit_complexity': 'Moderate, requires some setup or understanding of the system. For example, a new map type or a new link type.', 'Major related component': 'Other component related to eBPF but not listed above.', 'program_types_related': ["It's not related to any of the above."]}
--------------------
--------------------
Processing Commit ID: 146430a0c26eb7b515abb04664e1a516078ec5c2
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: 146430a0c26eb7b515abb04664e1a516078ec5c2
  Author Name: Linus Torvalds
  Author Email: torvalds@linux-foundation.org
  Commit Date: 1723221826
  Commit Message:
    Merge tag 'probes-fixes-v6.11-rc2' of git://git.kernel.org/pub/scm/linux/kernel/git/trace/linux-trace

Pull kprobe fixes from Masami Hiramatsu:

 - Fix misusing str_has_prefix() parameter order to check symbol prefix
   correctly

 - bpf: remove unused declaring of bpf_kprobe_override

* tag 'probes-fixes-v6.11-rc2' of git://git.kernel.org/pub/scm/linux/kernel/git/trace/linux-trace:
  kprobes: Fix to check symbol prefixes correctly
  bpf: kprobe: remove unused declaring of bpf_kprobe_override

  Parent Hashes: b7768c4881d1b69bd95dad149d3b558c8e7de91a 8c8acb8f26cbde665b233dd1b9bbcbb9b86822dc
  Refs: 

- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'Merge fixes for kprobes, including correcting symbol prefix checks and removing unused bpf_kprobe_override declaration.', 'keywords': 'kprobes, symbol prefix, bpf_kprobe_override', 'commit_classification': "It's a bug fix.", 'commit_complexity': 'Simple, can be used without much configuration. For example, a simple helper function.', 'Major related component': 'The attach events and bpf link. e.g. perf events, tracepoints, etc.', 'program_types_related': ['kprobe/uprobe/ftrace like programs']}
--------------------
--------------------
Processing Commit ID: 0e8b53979ac86eddb3fd76264025a70071a25574
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: 0e8b53979ac86eddb3fd76264025a70071a25574
  Author Name: Menglong Dong
  Author Email: menglong8.dong@gmail.com
  Commit Date: 1722834081
  Commit Message:
    bpf: kprobe: remove unused declaring of bpf_kprobe_override

After the commit 66665ad2f102 ("tracing/kprobe: bpf: Compare instruction
pointer with original one")
  Parent Hashes: de9c2c66ad8e787abec7c9d7eff4f8c3cdd28aed
  Refs:  "bpf_kprobe_override" is not used anywhere
anymore

- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'The commit removes the unused declaration of bpf_kprobe_override after a related change.', 'keywords': 'kprobe, unused, bpf', 'commit_classification': "It's a cleanup or refactoring in the code.", 'commit_complexity': 'Simple, can be used without much configuration. For example, a simple helper function.', 'Major related component': 'The attach events and bpf link. e.g. perf events, tracepoints, etc.', 'program_types_related': ['kprobe/uprobe/ftrace like programs']}
--------------------
--------------------
Processing Commit ID: 183d46ff422ef9f3d755b6808ef3faa6d009ba3a
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: 183d46ff422ef9f3d755b6808ef3faa6d009ba3a
  Author Name: Linus Torvalds
  Author Email: torvalds@linux-foundation.org
  Commit Date: 1722530529
  Commit Message:
    Merge tag 'net-6.11-rc2' of git://git.kernel.org/pub/scm/linux/kernel/git/netdev/net

Pull networking fixes from Paolo Abeni:
 "Including fixes from wireless
  Parent Hashes: 21b136cc63d2a9ddd60d4699552b69c214b32964 25010bfdf8bbedc64c5c04d18f846412f5367d26
  Refs:  bleutooth

- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'Merge networking fixes from Paolo Abeni including wireless fixes for Linux kernel.', 'keywords': 'networking, wireless, fixes', 'commit_classification': "It's a bug fix.", 'commit_complexity': 'Simple, can be used without much configuration. For example, a simple helper function.', 'Major related component': 'Other component related to eBPF but not listed above.', 'program_types_related': ["It's not related to any of the above."]}
--------------------
--------------------
Processing Commit ID: 601df205896da88e654d7c97d4579fa4af0b4adf
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: 601df205896da88e654d7c97d4579fa4af0b4adf
  Author Name: Jakub Kicinski
  Author Email: kuba@kernel.org
  Commit Date: 1722473340
  Commit Message:
    Merge tag 'for-netdev' of https://git.kernel.org/pub/scm/linux/kernel/git/bpf/bpf

Daniel Borkmann says:

====================
pull-request: bpf 2024-07-31

We've added 2 non-merge commits during the last 2 day(s) which contain
a total of 2 files changed
  Parent Hashes: 0bf50cead4c4710d9f704778c32ab8af47ddf070 7764b9622db4382b2797b54a70f292c8da6ef417
  Refs:  2 insertions(+)

- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': "Merge pull request for 'bpf' changes with 2 non-merge commits impacting 2 files.", 'keywords': 'merge,pull request,commits', 'commit_classification': "It's other type of commit.", 'commit_complexity': 'Simple, can be used without much configuration. For example, a simple helper function.', 'Major related component': 'Other component related to eBPF but not listed above.', 'program_types_related': ["It's not related to any of the above."]}
--------------------
--------------------
Processing Commit ID: 5830aa863981d43560748aa93589c0695191d95d
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: 5830aa863981d43560748aa93589c0695191d95d
  Author Name: Kuniyuki Iwashima
  Author Email: kuniyu@amazon.com
  Commit Date: 1722460850
  Commit Message:
    netfilter: iptables: Fix null-ptr-deref in iptable_nat_table_init().

We had a report that iptables-restore sometimes triggered null-ptr-deref
at boot time. [0]

The problem is that iptable_nat_table_init() is exposed to user space
before the kernel fully initialises netns.

In the small race window
  Parent Hashes: 0bf50cead4c4710d9f704778c32ab8af47ddf070
  Refs:  a user could call iptable_nat_table_init()
that accesses net_generic(net

- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'Fix null pointer dereference issue in iptable_nat_table_init() during kernel initialization sequence.', 'keywords': 'null-ptr-deref, iptables, netfilter', 'commit_classification': "It's a bug fix.", 'commit_complexity': 'Moderate, requires some setup or understanding of the system. For example, a new map type or a new link type.', 'Major related component': "It's not related to any of the above, it's not related to bpf subsystem in Linux kernel, may be wrong data.", 'program_types_related': ["It's not related to any of the above."]}
--------------------
--------------------
Processing Commit ID: 0bf50cead4c4710d9f704778c32ab8af47ddf070
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: 0bf50cead4c4710d9f704778c32ab8af47ddf070
  Author Name: Jakub Kicinski
  Author Email: kuba@kernel.org
  Commit Date: 1722390070
  Commit Message:
    Merge branch '100GbE' of git://git.kernel.org/pub/scm/linux/kernel/git/tnguy/net-queue

Tony Nguyen says:

====================
ice: fix AF_XDP ZC timeout and concurrency issues

Maciej Fijalkowski says:

Changes included in this patchset address an issue that customer has
been facing when AF_XDP ZC Tx sockets were used in combination with flow
control and regular Tx traffic.

After executing:
ethtool --set-priv-flags $dev link-down-on-close on
ethtool -A $dev rx on tx on

launching multiple ZC Tx sockets on $dev + pinging remote interface (so
that regular Tx traffic is present) and then going through down/up of
$dev
  Parent Hashes: 89add40066f9ed9abe5f7f886fe5789ff7e0c50e 963fb4612295a5c35b1b89c8bff3bdd4f9127af6
  Refs:  Tx timeout occurred and then most of the time ice driver was unable
to recover from that state.

These patches combined together solve the described above issue on
customer side. Main focus here is to forbid producing Tx descriptors when
either carrier is not yet initialized or process of bringing interface
down has already started.

v1: https://lore.kernel.org/netdev/20240708221416.625850-1-anthony.l.nguyen@intel.com/

* '100GbE' of git://git.kernel.org/pub/scm/linux/kernel/git/tnguy/net-queue:
  ice: xsk: fix txq interrupt mapping
  ice: add missing WRITE_ONCE when clearing ice_rx_ring::xdp_prog
  ice: improve updating ice_{t

- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'Fixes concurrency and timeout issues for AF_XDP ZC in the ice driver during network interface up/down cycles.', 'keywords': 'AF_XDP, ice driver, concurrency', 'commit_classification': "It's a bug fix.", 'commit_complexity': 'Moderate, requires some setup or understanding of the system. For example, a new map type or a new link type.', 'Major related component': 'Other component related to eBPF but not listed above.', 'program_types_related': ['socket like programs']}
--------------------
--------------------
Processing Commit ID: 7764b9622db4382b2797b54a70f292c8da6ef417
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: 7764b9622db4382b2797b54a70f292c8da6ef417
  Author Name: Jiri Olsa
  Author Email: jolsa@kernel.org
  Commit Date: 1722372144
  Commit Message:
    bpf/selftests: Fix ASSERT_OK condition check in uprobe_syscall test

Fixing ASSERT_OK condition check in uprobe_syscall test
  Parent Hashes: 41c24102af7b6236277a214428b203d51a3462df
  Refs: 
otherwise we return from test on pipe success.

Signed-off-by: Jiri Olsa <jolsa@kernel.org>
Signed-off-by: Andrii Nakryiko <andrii@kernel.org>
Acked-by: Yonghong Song <yonghong.song@linux.dev>
Link: https://lore.kernel.org/bpf/20240726180847.684584-1-jolsa@kernel.org


- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'Fixes the ASSERT_OK condition in the uprobe_syscall test of the bpf selftests.', 'keywords': 'fix, ASSERT_OK, uprobe_syscall', 'commit_classification': "It's a bug fix.", 'commit_complexity': 'Simple, can be used without much configuration. For example, a simple helper function.', 'Major related component': 'The test cases and makefiles', 'program_types_related': ['kprobe/uprobe/ftrace like programs']}
--------------------
--------------------
Processing Commit ID: 41c24102af7b6236277a214428b203d51a3462df
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: 41c24102af7b6236277a214428b203d51a3462df
  Author Name: Stanislav Fomichev
  Author Email: sdf@fomichev.me
  Commit Date: 1722285811
  Commit Message:
    selftests/bpf: Filter out _GNU_SOURCE when compiling test_cpp

Jakub reports build failures when merging linux/master with net tree:

CXX      test_cpp
In file included from <built-in>:454:
<command line>:2:9: error: '_GNU_SOURCE' macro redefined [-Werror
  Parent Hashes: 039564d2fd37b122ec0d268e2ee6334e7169e225
  Refs: -Wmacro-redefined]
    2 | #define _GNU_SOURCE
      |         ^
<built-in>:445:9: note: previous definition is here
  445 | #define _GNU_SOURCE 1

The culprit is commit cc937dad85ae ("selftests: centralize -D_GNU_SOURCE= to
CFLAGS in lib.mk") which unconditionally added -D_GNU_SOUCE to CLFAGS.
Apparently clang++ also unconditionally adds it for the C++ targets [0]
which causes a conflict. Add small change in the selftests makefile
to filter it out for test_cpp.

Not sure which tree it should go via

- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'Fixes build failure by filtering out _GNU_SOURCE for test_cpp in selftests makefile.', 'keywords': 'build failure, _GNU_SOURCE, makefile', 'commit_classification': "It's a build system or CI/CD change.", 'commit_complexity': 'Simple, can be used without much configuration. For example, a simple helper function.', 'Major related component': 'The test cases and makefiles', 'program_types_related': ["It's not related to any of the above."]}
--------------------
--------------------
Processing Commit ID: 6b5faec9f564ea627c66064a4a6a5904fe5a07dd
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: 6b5faec9f564ea627c66064a4a6a5904fe5a07dd
  Author Name: Linus Torvalds
  Author Email: torvalds@linux-foundation.org
  Commit Date: 1722283625
  Commit Message:
    Merge tag 'for-linus-2024072901' of git://git.kernel.org/pub/scm/linux/kernel/git/hid/hid

Pull HID fixes from Benjamin Tissoires:

 - fixes for HID-BPF after the merge with the bpf tree (Arnd Bergmann
   and Benjamin Tissoires)

 - some tool type fix for the Wacom driver (Tatsunosuke Tobita)

 - a reorder of the sensor discovery to ensure the HID AMD SFH is
   removed when no sensors are available (Basavaraj Natikar)

* tag 'for-linus-2024072901' of git://git.kernel.org/pub/scm/linux/kernel/git/hid/hid:
  selftests/hid: add test for attaching multiple time the same struct_ops
  HID: bpf: prevent the same struct_ops to be attached more than once
  selftests/hid: disable struct_ops auto-attach
  selftests/hid: fix bpf_wq new API
  HID: amd_sfh: Move sensor discovery before HID device initialization
  hid: bpf: add BPF_JIT dependency
  HID: wacom: more appropriate tool type categorization
  HID: wacom: Modify pen IDs

  Parent Hashes: 10826505f52357c7c9e12358db97a3acbe82e958 facdbdfe0e6202d74758387ae9189c39f7b4b16c
  Refs: 

- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'Merge of HID fixes including HID-BPF, sensor discovery reordering, and Wacom driver tool type update.', 'keywords': 'HID, fixes, HID-BPF', 'commit_classification': "It's a bug fix.", 'commit_complexity': 'Moderate, requires some setup or understanding of the system. For example, a new map type or a new link type.', 'Major related component': 'Other component related to eBPF but not listed above.', 'program_types_related': ['HID driver like programs']}
--------------------
--------------------
Processing Commit ID: 478574370bef7951fbd9ef5155537d6cbed49472
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: 478574370bef7951fbd9ef5155537d6cbed49472
  Author Name: Boris Burkov
  Author Email: boris@bur.io
  Commit Date: 1722273651
  Commit Message:
    btrfs: make cow_file_range_inline() honor locked_page on error

The btrfs buffered write path runs through __extent_writepage() which
has some tricky return value handling for writepage_delalloc().
Specifically
  Parent Hashes: de9f46cb0044a9b9f825d7695ae235863461dc00
  Refs:  when that returns 1

- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'This commit adjusts cow_file_range_inline() in btrfs to respect locked_page on errors in the buffered write path.', 'keywords': 'btrfs,cow_file_range_inline,locked_page', 'commit_classification': "It's a bug fix.", 'commit_complexity': 'Moderate, requires some setup or understanding of the system. For example, a new map type or a new link type.', 'Major related component': 'Other component related to eBPF but not listed above.', 'program_types_related': ["It's not related to any of the above."]}
--------------------
--------------------
Processing Commit ID: ebc33a3f8d0aeddf19fd5827add24b82ae171829
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: ebc33a3f8d0aeddf19fd5827add24b82ae171829
  Author Name: Maciej Fijalkowski
  Author Email: maciej.fijalkowski@intel.com
  Commit Date: 1722268349
  Commit Message:
    ice: improve updating ice_{t
  Parent Hashes: 9da75a511c5558fa3da56759984fd1fa859186f0
  Refs: r}x_ring::xsk_pool

xsk_buff_pool pointers that ice ring structs hold are updated via
ndo_bpf that is executed in process context while it can be read by
remote CPU at the same time within NAPI poll. Use synchronize_net()
after pointer update and {READ

- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'This commit improves pointer updating mechanism for ice ring structures to prevent issues during concurrent read operations.', 'keywords': 'pointer, update, synchronize_net', 'commit_classification': "It's a performance optimization.", 'commit_complexity': 'Simple, can be used without much configuration. For example, a simple helper function.', 'Major related component': 'The attach events and bpf link. e.g. perf events, tracepoints, etc.', 'program_types_related': ['tc/netfilter like programs']}
--------------------
--------------------
Processing Commit ID: d5922717994911e8f0eab736f3ba0d968c158823
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: d5922717994911e8f0eab736f3ba0d968c158823
  Author Name: Maciej Fijalkowski
  Author Email: maciej.fijalkowski@intel.com
  Commit Date: 1722268349
  Commit Message:
    ice: modify error handling when setting XSK pool in ndo_bpf

Don't bail out right when spotting an error within ice_qp_{dis
  Parent Hashes: 405d9999aa0b4ae467ef391d1d9c7e0d30ad0841
  Refs: ena}()
but rather track error and go through whole flow of disabling and
enabling queue pair.

Fixes: 2d4238f55697 ("ice: Add support for AF_XDP")
Reviewed-by: Shannon Nelson <shannon.nelson@amd.com>
Tested-by: Chandan Kumar Rout <chandanx.rout@intel.com> (A Contingent Worker at Intel)
Signed-off-by: Maciej Fijalkowski <maciej.fijalkowski@intel.com>
Signed-off-by: Tony Nguyen <anthony.l.nguyen@intel.com>


- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'Updates error handling to track errors and ensure full flow execution in setting XSK pool in ndo_bpf on ice driver.', 'keywords': 'error, XSK pool, ice driver', 'commit_classification': "It's a bug fix.", 'commit_complexity': 'Moderate, requires some setup or understanding of the system. For example, a new map type or a new link type.', 'Major related component': 'The attach events and bpf link. e.g. perf events, tracepoints, etc.', 'program_types_related': ['xdp like programs']}
--------------------
--------------------
Processing Commit ID: 1fd2c10acb7b35d72101a4619ee5b2cddb9efd3a
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: 1fd2c10acb7b35d72101a4619ee5b2cddb9efd3a
  Author Name: Mikulas Patocka
  Author Email: mpatocka@redhat.com
  Commit Date: 1722262747
  Commit Message:
    parisc: fix unaligned accesses in BPF

There were spurious unaligned access warnings when calling BPF code.
Sometimes
  Parent Hashes: 8400291e289ee6b2bf9779ff1c83a291501f017b
  Refs:  the warnings were triggered with any incoming packet

- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'Fix unaligned access warnings in BPF on parisc architecture.', 'keywords': 'unaligned,access,parisc', 'commit_classification': "It's a bug fix.", 'commit_complexity': 'Moderate, requires some setup or understanding of the system. For example, a new map type or a new link type.', 'Major related component': 'The eBPF verifier', 'program_types_related': ['It improves the overall eBPF infrastructure (e.g., verifier, runtime, etc.).']}
--------------------
--------------------
Processing Commit ID: 9da49aa80d686582bc3a027112a30484c9be6b6e
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: 9da49aa80d686582bc3a027112a30484c9be6b6e
  Author Name: Jeongjun Park
  Author Email: aha310510@gmail.com
  Commit Date: 1722246915
  Commit Message:
    tun: Add missing bpf_net_ctx_clear() in do_xdp_generic()

There are cases where do_xdp_generic returns bpf_net_context without
clearing it. This causes various memory corruptions
  Parent Hashes: 301927d2d2eb8e541357ba850bc7a1a74dbbd670
  Refs:  so the missing
bpf_net_ctx_clear must be added.

Reported-by: syzbot+44623300f057a28baf1e@syzkaller.appspotmail.com
Fixes: fecef4cd42c6 ("tun: Assign missing bpf_net_context.")
Signed-off-by: Jeongjun Park <aha310510@gmail.com>
Acked-by: Jason Wang <jasowang@redhat.com>
Reviewed-by: Willem de Bruijn <willemb@google.com>
Reported-by: syzbot+3c2b6d5d4bec3b904933@syzkaller.appspotmail.com
Reported-by: syzbot+707d98c8649695eaf329@syzkaller.appspotmail.com
Reported-by: syzbot+c226757eb784a9da3e8b@syzkaller.appspotmail.com
Reported-by: syzbot+61a1cfc2b6632363d319@syzkaller.appspotmail.com
Reported-by: syzbot+709e4c85c904bcd62735@syzkaller.appspotmail.com
Signed-off-by: David S. Miller <davem@davemloft.net>


- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'Add missing bpf_net_ctx_clear() in do_xdp_generic to prevent memory corruption.', 'keywords': 'bpf_net_ctx_clear, do_xdp_generic, memory corruption', 'commit_classification': "It's a bug fix.", 'commit_complexity': 'Simple, can be used without much configuration. For example, a simple helper function.', 'Major related component': 'Other component related to eBPF but not listed above.', 'program_types_related': ['xdp like programs']}
--------------------
--------------------
Processing Commit ID: 6557a28f3e3a54cff4f0dcdd1dfa649b26557ab3
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: 6557a28f3e3a54cff4f0dcdd1dfa649b26557ab3
  Author Name: Sean Wang
  Author Email: sean.wang@mediatek.com
  Commit Date: 1721990060
  Commit Message:
    wifi: mt76: mt7921: fix null pointer access in mt792x_mac_link_bss_remove

Fix null pointer access in mt792x_mac_link_bss_remove.

To prevent null pointer access
  Parent Hashes: 189d7aae8f5a100b0db8b302debbd445475d01e6
  Refs:  we should assign the vif to bss_conf in
mt7921_add_interface. This ensures that subsequent operations on the BSS
can properly reference the correct vif.

[  T843] Call Trace:
[  T843]  <TASK>
[  T843]  ? __die+0x1e/0x60
[  T843]  ? page_fault_oops+0x157/0x450
[  T843]  ? srso_alias_return_thunk+0x5/0xfbef5
[  T843]  ? srso_alias_return_thunk+0x5/0xfbef5
[  T843]  ? search_bpf_extables+0x5a/0x80
[  T843]  ? srso_alias_return_thunk+0x5/0xfbef5
[  T843]  ? exc_page_fault+0x2bb/0x670
[  T843]  ? srso_alias_return_thunk+0x5/0xfbef5
[  T843]  ? lock_timer_base+0x71/0x90
[  T843]  ? asm_exc_page_fault+0x26/0x30
[  T843]  ? mt792x_mac_link_bss_remove+0x24/0x110 [mt792x_lib]
[  T843]  ? mt792x_remove_interface+0x6e/0x90 [mt792x_lib]
[  T843]  ? ieee80211_do_stop+0x507/0x7e0 [mac80211]
[  T843]  ? ieee80211_stop+0x53/0x190 [mac80211]
[  T843]  ? __dev_close_many+0xa5/0x120
[  T843]  ? __dev_change_flags+0x18c/0x220
[  T843]  ? dev_change_flags+0x21/0x60
[  T843]  ? do_setlink+0xdf9/0x11d0
[  T843]  ? srso_alias_return_thunk+0x5/0xfbef5
[  T843]  ? srso_alias_return_thunk+0x5/0xfbef5
[  T843]  ? security_sock_rcv_skb+0x33/0x50
[  T843]  ? srso_alias_return_thunk+0x5/0xfbef5
[  T843]  ? srso_alias_return_thunk+0x5/0xfbef5
[  T843]  ? __nla_validate_parse+0x61/0xd10
[  T843]  ? srso_alias_return_thunk+0x5/0xfbef5
[  T843]  ? genl_done+0x53/0x80
[  T843]  ? srso_alias_return_thunk+0x5/0xfbef5
[  T843]  ? netlink_dump+0x357/0x410
[  T843]  ? __rtnl_newlink+0x5d6/0x980
[  T843]  ? srso_alias_return_thunk+0x5/0xfbef5
[  T843]  ? genl_family_rcv_msg_dumpit+0xdf/0xf0
[  T843]  ? srso_alias_return_thunk+0x5/0xfbef5
[  T843]  ? __kmalloc_cache_noprof+0x44/0x210
[  T843]  ? rtnl_newlink+0x42/0x60
[  T843]  ? rtnetlink_rcv_msg+0x152/0x3f0
[  T843]  ? mptcp_pm_nl_dump_addr+0x180/0x180
[  T843]  ? rtnl_calcit.isra.0+0x130/0x130
[  T843]  ? netlink_rcv_skb+0x56/0x100
[  T843]  ? netlink_unicast+0x199/0x290
[  T843]  ? netlink_sendmsg+0x21d/0x490
[  T843]  ? __sock_sendmsg+0x78/0x80
[  T843]  ? ____sys_sendmsg+0x23f/0x2e0
[  T843]  ? srso_alias_return_thunk+0x5/0xfbef5
[  T843]  ? copy_msghdr_from_user+0x68/0xa0
[  T843]  ? ___sys_sendmsg+0x81/0xd0
[  T843]  ? srso_alias_return_thunk+0x5/0xfbef5
[  T843]  ? crng_fast_key_erasure+0xbc/0xf0
[  T843]  ? srso_alias_return_thunk+0x5/0xfbef5
[  T843]  ? get_random_bytes_user+0x126/0x140
[  T843]  ? srso_alias_return_thunk+0x5/0xfbef5
[  T843]  ? __fdget+0xb1/0xe0
[  T843]  ? __sys_sendmsg+0x56/0xa0
[  T843]  ? srso_alias_return_thunk+0x5/0xfbef5
[  T843]  ? do_syscall_64+0x5f/0x170
[  T843]  ? entry_SYSCALL_64_after_hwframe+0x55/0x5d
[  T843]  </TASK>

Fixes: 1541d63c5fe2 ("wifi: mt76: mt7925: add mt7925_mac_link_bss_remove to remove per-link BSS")
Reported-by: Bert Karwatzki <spasswolf@web.de>
Closes: https://lore.kernel.org/linux-wireless/2fee61f8c903d02a900ca3188c3742c7effd102e.camel@web.de/#b
Signed-off-by: Sean Wang <sean.wang@mediatek.com>
Tested-by: Bert Karwatzki <spasswolf@web.de>
Link: https://patch.msgid.link/20240718234633.12737-1-sean.wang@kernel.org
Signed-off-by: Johannes Berg <johannes.berg@intel.com>


- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'Fix null pointer access issue in mt792x_mac_link_bss_remove in the wifi mt76 driver.', 'keywords': 'null pointer fix wifi', 'commit_classification': "It's a bug fix.", 'commit_complexity': 'Simple, can be used without much configuration. For example, a simple helper function.', 'Major related component': 'Other component related to eBPF but not listed above.', 'program_types_related': ["It's not related to any of the above."]}
--------------------
--------------------
Processing Commit ID: 1722389b0d863056d78287a120a1d6cadb8d4f7b
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: 1722389b0d863056d78287a120a1d6cadb8d4f7b
  Author Name: Linus Torvalds
  Author Email: torvalds@linux-foundation.org
  Commit Date: 1721939545
  Commit Message:
    Merge tag 'net-6.11-rc1' of git://git.kernel.org/pub/scm/linux/kernel/git/netdev/net

Pull networking fixes from Jakub Kicinski:
 "Including fixes from bpf and netfilter.

  A lot of networking people were at a conference last week
  Parent Hashes: 8bf100092d60bf586bbc1a3a2cd833bb212d9d53 af65ea42bd1d28d818b74b9b3b4f8da7ada9f88b
  Refs:  busy
  catching COVID

- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'Merge networking fixes from netdev including bpf and netfilter updates.', 'keywords': 'networking, bpf, netfilter', 'commit_classification': "It's other type of commit.", 'commit_complexity': "Complex, needs expert knowledge or significant changes to existing systems. Like adding a completely new subsystem support or a completely new program type don't exist before.", 'Major related component': 'Other component related to eBPF but not listed above.', 'program_types_related': ['tc/netfilter like programs', 'tracepoints like programs', 'It improves the overall eBPF infrastructure (e.g., verifier, runtime, etc.).']}
--------------------
--------------------
Processing Commit ID: f7578df913041f08b680aac2c660ebd71f35af3a
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: f7578df913041f08b680aac2c660ebd71f35af3a
  Author Name: Jakub Kicinski
  Author Email: kuba@kernel.org
  Commit Date: 1721918425
  Commit Message:
    Merge tag 'for-netdev' of https://git.kernel.org/pub/scm/linux/kernel/git/bpf/bpf

Daniel Borkmann says:

====================
pull-request: bpf 2024-07-25

We've added 14 non-merge commits during the last 8 day(s) which contain
a total of 19 files changed
  Parent Hashes: c1668292689ad2ee16c9c1750a8044b0b0aad663 9b9969c40b0d63a8fca434d4ea01c60a39699aa3
  Refs:  177 insertions(+)

- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': "Merged changes from 'for-netdev' branch in the Linux bpf repository.", 'keywords': 'merge,for-netdev,bpf', 'commit_classification': "It's other type of commit.", 'commit_complexity': 'Moderate, requires some setup or understanding of the system. For example, a new map type or a new link type.', 'Major related component': 'Other component related to eBPF but not listed above.', 'program_types_related': ["It's not related to any of the above."]}
--------------------
--------------------
Processing Commit ID: 9b9969c40b0d63a8fca434d4ea01c60a39699aa3
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: 9b9969c40b0d63a8fca434d4ea01c60a39699aa3
  Author Name: Stanislav Fomichev
  Author Email: sdf@fomichev.me
  Commit Date: 1721901453
  Commit Message:
    selftests/bpf: Add XDP_UMEM_TX_METADATA_LEN to XSK TX metadata test

This flag is now required to use tx_metadata_len.

Fixes: 40808a237d9c ("selftests/bpf: Add TX side to xdp_metadata")
Reported-by: Julian Schindel <mail@arctic-alpaca.de>
Signed-off-by: Stanislav Fomichev <sdf@fomichev.me>
Signed-off-by: Daniel Borkmann <daniel@iogearbox.net>
Reviewed-by: Maciej Fijalkowski <maciej.fijalkowski@intel.com>
Link: https://lore.kernel.org/bpf/20240713015253.121248-3-sdf@fomichev.me

  Parent Hashes: d5e726d9143c5624135f5dc9e4069799adeef734
  Refs: 

- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'Add XDP_UMEM_TX_METADATA_LEN flag to XSK TX metadata test for compliance.', 'keywords': 'XDP_UMEM_TX_METADATA_LEN,XSK,metadata', 'commit_classification': "It's a test case or test infrastructure change.", 'commit_complexity': 'Simple, can be used without much configuration. For example, a simple helper function.', 'Major related component': 'The test cases and makefiles', 'program_types_related': ['xdp like programs']}
--------------------
--------------------
Processing Commit ID: d5e726d9143c5624135f5dc9e4069799adeef734
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: d5e726d9143c5624135f5dc9e4069799adeef734
  Author Name: Stanislav Fomichev
  Author Email: sdf@fomichev.me
  Commit Date: 1721901447
  Commit Message:
    xsk: Require XDP_UMEM_TX_METADATA_LEN to actuate tx_metadata_len

Julian reports that commit 341ac980eab9 ("xsk: Support tx_metadata_len")
can break existing use cases which don't zero-initialize xdp_umem_reg
padding. Introduce new XDP_UMEM_TX_METADATA_LEN to make sure we
interpret the padding as tx_metadata_len only when being explicitly
asked.

Fixes: 341ac980eab9 ("xsk: Support tx_metadata_len")
Reported-by: Julian Schindel <mail@arctic-alpaca.de>
Signed-off-by: Stanislav Fomichev <sdf@fomichev.me>
Signed-off-by: Daniel Borkmann <daniel@iogearbox.net>
Reviewed-by: Maciej Fijalkowski <maciej.fijalkowski@intel.com>
Link: https://lore.kernel.org/bpf/20240713015253.121248-2-sdf@fomichev.me

  Parent Hashes: fa5ef655615a01533035c6139248c5b33aa27028
  Refs: 

- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'Introduce XDP_UMEM_TX_METADATA_LEN to ensure explicit tx_metadata_len interpretation in XDP sockets.', 'keywords': 'XDP, tx_metadata_len, xsk', 'commit_classification': "It's a bug fix.", 'commit_complexity': 'Moderate, requires some setup or understanding of the system. For example, a new map type or a new link type.', 'Major related component': 'The eBPF maps', 'program_types_related': ['xdp like programs']}
--------------------
--------------------
Processing Commit ID: fa5ef655615a01533035c6139248c5b33aa27028
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: fa5ef655615a01533035c6139248c5b33aa27028
  Author Name: Fred Li
  Author Email: dracodingfly@gmail.com
  Commit Date: 1721901014
  Commit Message:
    bpf: Fix a segment issue when downgrading gso_size

Linearize the skb when downgrading gso_size because it may trigger a
BUG_ON() later when the skb is segmented as described in [1
  Parent Hashes: 13c9b702e6cb8e406d5fa6b2dca422fa42d2f13e
  Refs: 2].

Fixes: 2be7e212d5419 ("bpf: add bpf_skb_adjust_room helper")
Signed-off-by: Fred Li <dracodingfly@gmail.com>
Signed-off-by: Daniel Borkmann <daniel@iogearbox.net>
Reviewed-by: Willem de Bruijn <willemb@google.com>
Acked-by: Daniel Borkmann <daniel@iogearbox.net>
Link: https://lore.kernel.org/all/20240626065555.35460-2-dracodingfly@gmail.com [1]
Link: https://lore.kernel.org/all/668d5cf1ec330_1c18c32947@willemb.c.googlers.com.notmuch [2]
Link: https://lore.kernel.org/bpf/20240719024653.77006-1-dracodingfly@gmail.com


- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'Fixes a segment issue in eBPF by linearizing skb when downgrading gso_size to prevent potential BUG_ON errors.', 'keywords': 'bpf, segment issue, gso_size', 'commit_classification': "It's a bug fix.", 'commit_complexity': 'Moderate, requires some setup or understanding of the system. For example, a new map type or a new link type.', 'Major related component': 'Other component related to eBPF but not listed above.', 'program_types_related': ['It improves the overall eBPF infrastructure (e.g., verifier, runtime, etc.).']}
--------------------
--------------------
Processing Commit ID: facdbdfe0e6202d74758387ae9189c39f7b4b16c
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: facdbdfe0e6202d74758387ae9189c39f7b4b16c
  Author Name: Benjamin Tissoires
  Author Email: bentiss@kernel.org
  Commit Date: 1721838442
  Commit Message:
    selftests/hid: add test for attaching multiple time the same struct_ops

Turns out that we would en up in a bad state if we attempt to attach
twice the same HID-BPF struct_ops
  Parent Hashes: acd34cfc48b3dd46e5e4c4bdc99cc0c15568bac0
  Refs:  so have a test for it.

Link: https://patch.msgid.link/20240723-fix-6-11-bpf-v1-4-b9d770346784@kernel.org
Signed-off-by: Benjamin Tissoires <bentiss@kernel.org>


- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'Add selftests for attaching HID-BPF struct_ops multiple times to prevent bad state.', 'keywords': 'selftests,HID-BPF,struct_ops', 'commit_classification': "It's a test case or test infrastructure change.", 'commit_complexity': 'Simple, can be used without much configuration. For example, a simple helper function.', 'Major related component': 'The test cases and makefiles', 'program_types_related': ['HID driver like programs']}
--------------------
--------------------
Processing Commit ID: acd34cfc48b3dd46e5e4c4bdc99cc0c15568bac0
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: acd34cfc48b3dd46e5e4c4bdc99cc0c15568bac0
  Author Name: Benjamin Tissoires
  Author Email: bentiss@kernel.org
  Commit Date: 1721838441
  Commit Message:
    HID: bpf: prevent the same struct_ops to be attached more than once

If the struct_ops is already attached
  Parent Hashes: f64c1a4593391c57accf32693a14ef45f8162b5c
  Refs:  we should bail out or we will
end up in various locks and pointer issues while unregistering.

Link: https://patch.msgid.link/20240723-fix-6-11-bpf-v1-3-b9d770346784@kernel.org
Signed-off-by: Benjamin Tissoires <bentiss@kernel.org>


- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'Prevent attaching the same struct_ops multiple times to avoid locks and pointer issues.', 'keywords': 'HID,struct_ops,unregistering', 'commit_classification': "It's a bug fix.", 'commit_complexity': 'Simple, can be used without much configuration. For example, a simple helper function.', 'Major related component': 'Other component related to eBPF but not listed above.', 'program_types_related': ['HID driver like programs']}
--------------------
--------------------
Processing Commit ID: f64c1a4593391c57accf32693a14ef45f8162b5c
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: f64c1a4593391c57accf32693a14ef45f8162b5c
  Author Name: Benjamin Tissoires
  Author Email: bentiss@kernel.org
  Commit Date: 1721838441
  Commit Message:
    selftests/hid: disable struct_ops auto-attach

Since commit 08ac454e258e ("libbpf: Auto-attach struct_ops BPF maps in
BPF skeleton")
  Parent Hashes: ff9fbcafbaf13346c742c0d672a22f5ac20b9d92
  Refs:  libbpf automatically calls bpf_map__attach_struct_ops()
on every struct_ops it sees in the bpf object. The problem is that
our test bpf object has many of them but only one should be manually
loaded at a time

- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'Disable automatic struct_ops attachment in eBPF selftests for HID due to multiple struct_ops in a test bpf object.', 'keywords': 'selftests,hid,struct_ops', 'commit_classification': "It's a test case or test infrastructure change.", 'commit_complexity': 'Moderate, requires some setup or understanding of the system. For example, a new map type or a new link type.', 'Major related component': 'The test cases and makefiles', 'program_types_related': ['It improves the overall eBPF infrastructure (e.g., verifier, runtime, etc.).', 'HID driver like programs']}
--------------------
--------------------
Processing Commit ID: ff9fbcafbaf13346c742c0d672a22f5ac20b9d92
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: ff9fbcafbaf13346c742c0d672a22f5ac20b9d92
  Author Name: Benjamin Tissoires
  Author Email: bentiss@kernel.org
  Commit Date: 1721838441
  Commit Message:
    selftests/hid: fix bpf_wq new API

Since commit f56f4d541eab ("bpf: helpers: fix bpf_wq_set_callback_impl
signature")
  Parent Hashes: 8031b001da700474c11d28629581480b12a0d8d4
  Refs:  the API for bpf_wq changed a bit.

We need to update the selftests/hid code to reflect that or the
bpf program will not load.

Link: https://patch.msgid.link/20240723-fix-6-11-bpf-v1-1-b9d770346784@kernel.org
Signed-off-by: Benjamin Tissoires <bentiss@kernel.org>


- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'Update selftests/hid code for compatibility with new bpf_wq API changes.', 'keywords': 'selftests, bpf_wq, API', 'commit_classification': "It's a test case or test infrastructure change.", 'commit_complexity': 'Moderate, requires some setup or understanding of the system. For example, a new map type or a new link type.', 'Major related component': 'The test cases and makefiles', 'program_types_related': ['HID driver like programs']}
--------------------
--------------------
Processing Commit ID: bacc15e010fc5a235fb2020b06a29a9961b5db82
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: bacc15e010fc5a235fb2020b06a29a9961b5db82
  Author Name: Arnd Bergmann
  Author Email: arnd@arndb.de
  Commit Date: 1721659925
  Commit Message:
    hid: bpf: add BPF_JIT dependency

The module does not do anything when the JIT is disabled
  Parent Hashes: 9c2913b962daf3e5a947babf93f2125765eeca09
  Refs:  but instead
causes a warning:

In file included from include/linux/bpf_verifier.h:7

- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'The commit adds a BPF_JIT dependency to the HID module to prevent warnings when the JIT is disabled.', 'keywords': 'BPF_JIT, HID, dependency', 'commit_classification': "It's a cleanup or refactoring in the code.", 'commit_complexity': 'Simple, can be used without much configuration. For example, a simple helper function.', 'Major related component': 'Other component related to eBPF but not listed above.', 'program_types_related': ['HID driver like programs']}
--------------------
--------------------
Processing Commit ID: 13c9b702e6cb8e406d5fa6b2dca422fa42d2f13e
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: 13c9b702e6cb8e406d5fa6b2dca422fa42d2f13e
  Author Name: Liwei Song
  Author Email: liwei.song.lsong@gmail.com
  Commit Date: 1721658930
  Commit Message:
    tools/resolve_btfids: Fix comparison of distinct pointer types warning in resolve_btfids

Add a type cast for set8->pairs to fix below compile warning:

main.c: In function 'sets_patch':
main.c:699:50: warning: comparison of distinct pointer types lacks a cast
  699 |        BUILD_BUG_ON(set8->pairs != &set8->pairs[0].id);
      |                                 ^~

Fixes: 9707ac4fe2f5 ("tools/resolve_btfids: Refactor set sorting with types from btf_ids.h")
Signed-off-by: Liwei Song <liwei.song.lsong@gmail.com>
Signed-off-by: Daniel Borkmann <daniel@iogearbox.net>
Acked-by: Jiri Olsa <jolsa@kernel.org>
Link: https://lore.kernel.org/bpf/20240722083305.4009723-1-liwei.song.lsong@gmail.com

  Parent Hashes: 0be9ae5486cd9e767138c13638820d240713f5f1
  Refs: 

- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'This commit fixes a warning by adding a type cast in resolve_btfids for distinct pointer types comparison.', 'keywords': 'type cast, pointer, warning', 'commit_classification': "It's a bug fix.", 'commit_complexity': 'Simple, can be used without much configuration. For example, a simple helper function.', 'Major related component': 'The BPF Type Format (BTF)', 'program_types_related': ['It improves the overall eBPF infrastructure (e.g., verifier, runtime, etc.).']}
--------------------
--------------------
Processing Commit ID: 527eff227d4321c6ea453db1083bc4fdd4d3a3e8
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: 527eff227d4321c6ea453db1083bc4fdd4d3a3e8
  Author Name: Linus Torvalds
  Author Email: torvalds@linux-foundation.org
  Commit Date: 1721609782
  Commit Message:
    Merge tag 'mm-nonmm-stable-2024-07-21-15-07' of git://git.kernel.org/pub/scm/linux/kernel/git/akpm/mm

Pull non-MM updates from Andrew Morton:

 - In the series "treewide: Refactor heap related implementation"
  Parent Hashes: fbc90c042cd1dc7258ebfebe6d226017e5b5ac8c 67856f44da381973caf4eb692ad2cca1de7b2d37
  Refs: 
   Kuan-Wei Chiu has significantly reworked the min_heap library code
   and has taught bcachefs to use the new more generic implementation.

 - Yury Norov's series "Cleanup cpumask.h inclusion in core headers"
   reworks the cpumask and nodemask headers to make things generally
   more rational.

 - Kuan-Wei Chiu has sent along some maintenance work against our
   sorting library code in the series "lib/sort: Optimizations and
   cleanups".

 - More library maintainance work from Christophe Jaillet in the series
   "Remove usage of the deprecated ida_simple_xx() API".

 - Ryusuke Konishi continues with the nilfs2 fixes and clanups in the
   series "nilfs2: eliminate the call to inode_attach_wb()".

 - Kuan-Ying Lee has some fixes to the gdb scripts in the series "Fix
   GDB command error".

 - Plus the usual shower of singleton patches all over the place. Please
   see the relevant changelogs for details.

* tag 'mm-nonmm-stable-2024-07-21-15-07' of git://git.kernel.org/pub/scm/linux/kernel/git/akpm/mm: (98 commits)
  ia64: scrub ia64 from poison.h
  watchdog/perf: properly initialize the turbo mode timestamp and rearm counter
  tsacct: replace strncpy() with strscpy()
  lib/bch.c: use swap() to improve code
  test_bpf: convert comma to semicolon
  init/modpost: conditionally check section mismatch to __meminit*
  init: remove unused __MEMINIT* macros
  nilfs2: Constify struct kobj_type
  nilfs2: avoid undefined behavior in nilfs_cnt32_ge macro
  math: rational: add missing MODULE_DESCRIPTION() macro
  lib/zlib: add missing MODULE_DESCRIPTION() macro
  fs: ufs: add MODULE_DESCRIPTION()
  lib/rbtree.c: fix the example typo
  ocfs2: add bounds checking to ocfs2_check_dir_entry()
  fs: add kernel-doc comments to ocfs2_prepare_orphan_dir()
  coredump: simplify zap_process()
  selftests/fpu: add missing MODULE_DESCRIPTION() macro
  compiler.h: simplify data_race() macro
  build-id: require program headers to be right after ELF header
  resource: add missing MODULE_DESCRIPTION()
  ...


- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'Merge non-MM updates including refactoring and maintenance work across various kernel components.', 'keywords': 'refactor, maintenance, updates', 'commit_classification': "It's other type of commit.", 'commit_complexity': "Complex, needs expert knowledge or significant changes to existing systems. Like adding a completely new subsystem support or a completely new program type don't exist before.", 'Major related component': 'Other component related to eBPF but not listed above.', 'program_types_related': ["It's not related to any of the above."]}
--------------------
--------------------
Processing Commit ID: 7697a0fe0154468f5df35c23ebd7aa48994c2cdc
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: 7697a0fe0154468f5df35c23ebd7aa48994c2cdc
  Author Name: Huacai Chen
  Author Email: chenhuacai@loongson.cn
  Commit Date: 1721486458
  Commit Message:
    LoongArch: Define __ARCH_WANT_NEW_STAT in unistd.h

Chromium sandbox apparently wants to deny statx [1] so it could properly
inspect arguments after the sandboxed process later falls back to fstat.
Because there's currently not a "fd-only" version of statx
  Parent Hashes: 256a6f430562c163f1fa07576c4cd4e996e953dd
  Refs:  so that the
sandbox has no way to ensure the path argument is empty without being
able to peek into the sandboxed process's memory. For architectures able
to do newfstatat though

- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'The commit defines __ARCH_WANT_NEW_STAT in unistd.h for LoongArch to address issues with Chromium sandbox and statx.', 'keywords': 'LoongArch, statx, unistd.h', 'commit_classification': "It's other type of commit.", 'commit_complexity': 'Moderate, requires some setup or understanding of the system. For example, a new map type or a new link type.', 'Major related component': 'Other component related to eBPF but not listed above.', 'program_types_related': ["It's not related to any of the above."]}
--------------------
--------------------
Processing Commit ID: 3c3ff7be9729959699eb6cbc7fd7303566d74069
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: 3c3ff7be9729959699eb6cbc7fd7303566d74069
  Author Name: Linus Torvalds
  Author Email: torvalds@linux-foundation.org
  Commit Date: 1721448033
  Commit Message:
    Merge tag 'powerpc-6.11-1' of git://git.kernel.org/pub/scm/linux/kernel/git/powerpc/linux

Pull powerpc updates from Michael Ellerman:

 - Remove support for 40x CPUs & platforms

 - Add support to the 64-bit BPF JIT for cpu v4 instructions

 - Fix PCI hotplug driver crash on powernv

 - Fix doorbell emulation for KVM on PAPR guests (nestedv2)

 - Fix KVM nested guest handling of some less used SPRs

 - Online NUMA nodes with no CPU/memory if they have a PCI device
   attached

 - Reduce memory overhead of enabling kfence on 64-bit Radix MMU kernels

 - Reimplement the iommu table_group_ops for pseries for VFIO SPAPR TCE

Thanks to: Anjali K
  Parent Hashes: 3f386cb8ee9f04ff4be164ca7a1d0ef3f81f7374 9ff0251b2eb54d17fbe4f6aff50f6edfd837adb6
  Refs:  Artem Savkov

- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'Merge powerpc updates including removal of 40x support and improvements to 64-bit BPF JIT.', 'keywords': 'powerpc,BPF JIT,40x CPUs', 'commit_classification': "It's other type of commit.", 'commit_complexity': "Complex, needs expert knowledge or significant changes to existing systems. Like adding a completely new subsystem support or a completely new program type don't exist before.", 'Major related component': 'Other component related to eBPF but not listed above.', 'program_types_related': ['It improves the overall eBPF infrastructure (e.g., verifier, runtime, etc.).']}
--------------------
--------------------
Processing Commit ID: 0be9ae5486cd9e767138c13638820d240713f5f1
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: 0be9ae5486cd9e767138c13638820d240713f5f1
  Author Name: Hou Tao
  Author Email: houtao1@huawei.com
  Commit Date: 1721402796
  Commit Message:
    bpf
  Parent Hashes: 6caf9efaa169faea10a369dd6b36806ae6842584
  Refs:  events: Use prog to emit ksymbol event for main program

Since commit 0108a4e9f358 ("bpf: ensure main program has an extable")

- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': "The commit ensures the main eBPF program emits ksymbol events using 'prog'.", 'keywords': 'ksymbol, events, prog', 'commit_classification': "It's a new feature.", 'commit_complexity': 'Moderate, requires some setup or understanding of the system. For example, a new map type or a new link type.', 'Major related component': 'The attach events and bpf link. e.g. perf events, tracepoints, etc.', 'program_types_related': ['tracepoints like programs', 'It improves the overall eBPF infrastructure (e.g., verifier, runtime, etc.).']}
--------------------
--------------------
Processing Commit ID: 91bd008d4e2b4962ecb9a10e40c2fb666b0aeb92
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: 91bd008d4e2b4962ecb9a10e40c2fb666b0aeb92
  Author Name: Linus Torvalds
  Author Email: torvalds@linux-foundation.org
  Commit Date: 1721330360
  Commit Message:
    Merge tag 'probes-v6.11' of git://git.kernel.org/pub/scm/linux/kernel/git/trace/linux-trace

Pull probes updates from Masami Hiramatsu:
 "Uprobes:

   - x86/shstk: Make return uprobe work with shadow stack

   - Add uretprobe syscall which speeds up the uretprobe 10-30% faster.
     This syscall is automatically used from user-space trampolines
     which are generated by the uretprobe. If this syscall is used by
     normal user program
  Parent Hashes: cb273eb7c8390c70a484db6c79a797e377db09b5 c26b1b89b8a9fd8665e79cd798bd970e233772b6
  Refs:  it will cause SIGILL. Note that this is
     currently only implemented on x86_64.

     (This also has two fixes for adjusting the syscall number to avoid
     conflict with new *attrat syscalls.)

   - uprobes/perf: fix user stack traces in the presence of pending
     uretprobe. This corrects the uretprobe's trampoline address in the
     stacktrace with correct return address

   - selftests/x86: Add a return uprobe with shadow stack test

   - selftests/bpf: Add uretprobe syscall related tests.
      - test case for register integrity check
      - test case with register changing case
      - test case for uretprobe syscall without uprobes (expected to fail)
      - test case for uretprobe with shadow stack

   - selftests/bpf: add test validating uprobe/uretprobe stack traces

   - MAINTAINERS: Add uprobes entry. This does not specify the tree but
     to clarify who maintains and reviews the uprobes

  Kprobes:

   - tracing/kprobes: Test case cleanups.

     Replace redundant WARN_ON_ONCE() + pr_warn() with WARN_ONCE() and
     remove unnecessary code from selftest

   - tracing/kprobes: Add symbol counting check when module loads.

     This checks the uniqueness of the probed symbol on modules. The
     same check has already done for kernel symbols

     (This also has a fix for build error with CONFIG_MODULES=n)

  Cleanup:

   - Add MODULE_DESCRIPTION() macros for fprobe and kprobe examples"

* tag 'probes-v6.11' of git://git.kernel.org/pub/scm/linux/kernel/git/trace/linux-trace:
  MAINTAINERS: Add uprobes entry
  selftests/bpf: Change uretprobe syscall number in uprobe_syscall test
  uprobe: Change uretprobe syscall scope and number
  tracing/kprobes: Fix build error when find_module() is not available
  tracing/kprobes: Add symbol counting check when module loads
  selftests/bpf: add test validating uprobe/uretprobe stack traces
  perf

- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'Merge and update uprobes, including performance improvements and test cases, while fixing related issues on x86 architecture.', 'keywords': 'uprobes,x86_64,performance', 'commit_classification': "It's other type of commit.", 'commit_complexity': 'Moderate, requires some setup or understanding of the system. For example, a new map type or a new link type.', 'Major related component': 'The test cases and makefiles', 'program_types_related': ['kprobe/uprobe/ftrace like programs']}
--------------------
--------------------
Processing Commit ID: 120f1c857a73e52132e473dee89b340440cb692b
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: 120f1c857a73e52132e473dee89b340440cb692b
  Author Name: Pablo Neira Ayuso
  Author Email: pablo@netfilter.org
  Commit Date: 1721292737
  Commit Message:
    net: flow_dissector: use DEBUG_NET_WARN_ON_ONCE

The following splat is easy to reproduce upstream as well as in -stable
kernels. Florian Westphal provided the following commit:

  d1dab4f71d37 ("net: add and use __skb_get_hash_symmetric_net")

but this complementary fix has been also suggested by Willem de Bruijn
and it can be easily backported to -stable kernel which consists in
using DEBUG_NET_WARN_ON_ONCE instead to silence the following splat
given __skb_get_hash() is used by the nftables tracing infrastructure to
to identify packets in traces.

[69133.561393] ------------[ cut here ]------------
[69133.561404] WARNING: CPU: 0 PID: 43576 at net/core/flow_dissector.c:1104 __skb_flow_dissect+0x134f/
[...]
[69133.561944] CPU: 0 PID: 43576 Comm: socat Not tainted 6.10.0-rc7+ #379
[69133.561959] RIP: 0010:__skb_flow_dissect+0x134f/0x2ad0
[69133.561970] Code: 83 f9 04 0f 84 b3 00 00 00 45 85 c9 0f 84 aa 00 00 00 41 83 f9 02 0f 84 81 fc ff
ff 44 0f b7 b4 24 80 00 00 00 e9 8b f9 ff ff <0f> 0b e9 20 f3 ff ff 41 f6 c6 20 0f 84 e4 ef ff ff 48 8d 7b 12 e8
[69133.561979] RSP: 0018:ffffc90000006fc0 EFLAGS: 00010246
[69133.561988] RAX: 0000000000000000 RBX: ffffffff82f33e20 RCX: ffffffff81ab7e19
[69133.561994] RDX: dffffc0000000000 RSI: ffffc90000007388 RDI: ffff888103a1b418
[69133.562001] RBP: ffffc90000007310 R08: 0000000000000000 R09: 0000000000000000
[69133.562007] R10: ffffc90000007388 R11: ffffffff810cface R12: ffff888103a1b400
[69133.562013] R13: 0000000000000000 R14: ffffffff82f33e2a R15: ffffffff82f33e28
[69133.562020] FS:  00007f40f7131740(0000) GS:ffff888390800000(0000) knlGS:0000000000000000
[69133.562027] CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033
[69133.562033] CR2: 00007f40f7346ee0 CR3: 000000015d200001 CR4: 00000000001706f0
[69133.562040] Call Trace:
[69133.562044]  <IRQ>
[69133.562049]  ? __warn+0x9f/0x1a0
[ 1211.841384]  ? __skb_flow_dissect+0x107e/0x2860
[...]
[ 1211.841496]  ? bpf_flow_dissect+0x160/0x160
[ 1211.841753]  __skb_get_hash+0x97/0x280
[ 1211.841765]  ? __skb_get_hash_symmetric+0x230/0x230
[ 1211.841776]  ? mod_find+0xbf/0xe0
[ 1211.841786]  ? get_stack_info_noinstr+0x12/0xe0
[ 1211.841798]  ? bpf_ksym_find+0x56/0xe0
[ 1211.841807]  ? __rcu_read_unlock+0x2a/0x70
[ 1211.841819]  nft_trace_init+0x1b9/0x1c0 [nf_tables]
[ 1211.841895]  ? nft_trace_notify+0x830/0x830 [nf_tables]
[ 1211.841964]  ? get_stack_info+0x2b/0x80
[ 1211.841975]  ? nft_do_chain_arp+0x80/0x80 [nf_tables]
[ 1211.842044]  nft_do_chain+0x79c/0x850 [nf_tables]

Fixes: 9b52e3f267a6 ("flow_dissector: handle no-skb use case")
Suggested-by: Willem de Bruijn <willemb@google.com>
Signed-off-by: Pablo Neira Ayuso <pablo@netfilter.org>
Reviewed-by: Willem de Bruijn <willemb@google.com>
Link: https://patch.msgid.link/20240715141442.43775-1-pablo@netfilter.org
Signed-off-by: Paolo Abeni <pabeni@redhat.com>


  Parent Hashes: c14112a5574ff5cf3de198ab6eeff53ac1234068
  Refs: 

- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'Fix net flow dissector to silence warnings by using DEBUG_NET_WARN_ON_ONCE.', 'keywords': 'flow_dissector, DEBUG_NET_WARN_ON_ONCE, nftables', 'commit_classification': "It's a bug fix.", 'commit_complexity': 'Moderate, requires some setup or understanding of the system. For example, a new map type or a new link type.', 'Major related component': 'Other component related to eBPF but not listed above.', 'program_types_related': ['other']}
--------------------
--------------------
Processing Commit ID: a7526fe8b94eced7d82aa00b2bcca44e39ae0769
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: a7526fe8b94eced7d82aa00b2bcca44e39ae0769
  Author Name: Vlastimil Babka
  Author Email: vbabka@suse.cz
  Commit Date: 1721275518
  Commit Message:
    mm
  Parent Hashes: 7b7aca6d7c0f9b2d9400bfc57cb2b23cfbd5134d
  Refs:  slab: put should_failslab() back behind CONFIG_SHOULD_FAILSLAB

Patch series "revert unconditional slab and page allocator fault injection
calls".

These two patches largely revert commits that added function call overhead
into slab and page allocation hotpaths and that cannot be currently
disabled even though related CONFIG_ options do exist.

A much more involved solution that can keep the callsites always existing
but hidden behind a static key if unused

- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'Revert slab and page allocator fault injection function call overhead to improve performance by using static key solution.', 'keywords': 'revert, allocator, static key', 'commit_classification': "It's a performance optimization.", 'commit_complexity': 'Moderate, requires some setup or understanding of the system. For example, a new map type or a new link type.', 'Major related component': 'Other component related to eBPF but not listed above.', 'program_types_related': ["It's not related to any of the above."]}
--------------------
--------------------
Processing Commit ID: 6e504d2c61244a01226c5100c835e44fb9b85ca8
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: 6e504d2c61244a01226c5100c835e44fb9b85ca8
  Author Name: Linus Torvalds
  Author Email: torvalds@linux-foundation.org
  Commit Date: 1721262511
  Commit Message:
    Merge tag 'for-linus-2024071601' of git://git.kernel.org/pub/scm/linux/kernel/git/hid/hid

Pull HID updates from Benjamin Tissoires:

 - rewrite of the HID-BPF internal implementation to use bpf struct_ops
   instead of a tracing endpoint (Benjamin Tissoires)

 - add two new HID-BPF hooks to be able to intercept userspace calls
   targeting a HID device and filtering them (Benjamin Tissoires)

 - add support for various new devices through HID-BPF filters (Benjamin
   Tissoires)

 - add support for the magic keyboard backlight (Orlando Chamberlain)

 - add the missing MODULE_DESCRIPTION() macros in HID drivers (Jeff
   Johnson)

 - use of kvzalloc in case memory gets too fragmented (Hailong Liu)

 - retrieve the device firmware node in the child HID device (Danny
   Kaehn)

 - some hid-uclogic improvements (José Expósito)

 - some more typos
  Parent Hashes: 221fd1e154ee533c529280bd3866570c086ec792 30b866413e7bdd507a79854b5931528d3f6f438f
  Refs:  trivial fixes

- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'Merge HID updates including HID-BPF implementation changes and device support additions.', 'keywords': 'HID-BPF, hooks, struct_ops', 'commit_classification': "It's a new feature.", 'commit_complexity': 'Moderate, requires some setup or understanding of the system. For example, a new map type or a new link type.', 'Major related component': 'Other component related to eBPF but not listed above.', 'program_types_related': ['HID driver like programs']}
--------------------
--------------------
Processing Commit ID: 6caf9efaa169faea10a369dd6b36806ae6842584
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: 6caf9efaa169faea10a369dd6b36806ae6842584
  Author Name: Michal Luczaj
  Author Email: mhal@rbox.co
  Commit Date: 1721249515
  Commit Message:
    selftests/bpf: Test sockmap redirect for AF_UNIX MSG_OOB

Verify that out-of-band packets are silently dropped before they reach the
redirection logic.

The idea is to test with a 2 byte long send(). Should a MSG_OOB flag be in
use
  Parent Hashes: 0befb349c4cdcc4e3c2f4aff81259a3a58c3b33e
  Refs:  only the last byte will be treated as out-of-band. Test fails if
verd_mapfd indicates a wrong number of packets processed (e.g. if OOB
wasn't dropped at the source) or if it was possible to recv() MSG_OOB from
the mapped socket

- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'Add a test to verify MSG_OOB packet handling in sockmap redirection for AF_UNIX.', 'keywords': 'sockmap, MSG_OOB, AF_UNIX', 'commit_classification': "It's a test case or test infrastructure change.", 'commit_complexity': 'Moderate, requires some setup or understanding of the system. For example, a new map type or a new link type.', 'Major related component': 'The test cases and makefiles', 'program_types_related': ['socket like programs']}
--------------------
--------------------
Processing Commit ID: 0befb349c4cdcc4e3c2f4aff81259a3a58c3b33e
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: 0befb349c4cdcc4e3c2f4aff81259a3a58c3b33e
  Author Name: Michal Luczaj
  Author Email: mhal@rbox.co
  Commit Date: 1721249510
  Commit Message:
    selftests/bpf: Parametrize AF_UNIX redir functions to accept send() flags

Extend pairs_redir_to_connected() and unix_inet_redir_to_connected() with a
send_flags parameter. Replace write() with send() allowing packets to be
sent as MSG_OOB.

Signed-off-by: Michal Luczaj <mhal@rbox.co>
Signed-off-by: Daniel Borkmann <daniel@iogearbox.net>
Tested-by: Jakub Sitnicki <jakub@cloudflare.com>
Reviewed-by: Jakub Sitnicki <jakub@cloudflare.com>
Link: https://lore.kernel.org/bpf/20240713200218.2140950-4-mhal@rbox.co

  Parent Hashes: 1b0ad43177c097d38b967b99c2b71d8be28b0223
  Refs: 

- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'The commit parametrizes AF_UNIX redirection functions to accept send() flags, allowing packets to be sent as MSG_OOB.', 'keywords': 'AF_UNIX,send_flags,selftests', 'commit_classification': "It's a test case or test infrastructure change.", 'commit_complexity': 'Moderate, requires some setup or understanding of the system. For example, a new map type or a new link type.', 'Major related component': 'The test cases and makefiles', 'program_types_related': ['It improves the overall eBPF infrastructure (e.g., verifier, runtime, etc.).']}
--------------------
--------------------
Processing Commit ID: 1b0ad43177c097d38b967b99c2b71d8be28b0223
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: 1b0ad43177c097d38b967b99c2b71d8be28b0223
  Author Name: Michal Luczaj
  Author Email: mhal@rbox.co
  Commit Date: 1721249505
  Commit Message:
    selftests/bpf: Support SOCK_STREAM in unix_inet_redir_to_connected()

Function ignores the AF_UNIX socket type argument
  Parent Hashes: 638f32604385fd23059985da8de918e9c18f0b98
  Refs:  SOCK_DGRAM is hardcoded.
Fix to respect the argument provided.

Fixes: 75e0e27db6cf ("selftest/bpf: Change udp to inet in some function names")
Suggested-by: Jakub Sitnicki <jakub@cloudflare.com>
Signed-off-by: Michal Luczaj <mhal@rbox.co>
Signed-off-by: Daniel Borkmann <daniel@iogearbox.net>
Tested-by: Jakub Sitnicki <jakub@cloudflare.com>
Reviewed-by: Jakub Sitnicki <jakub@cloudflare.com>
Link: https://lore.kernel.org/bpf/20240713200218.2140950-3-mhal@rbox.co


- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'The commit modifies selftests to support both SOCK_STREAM and SOCK_DGRAM types in unix_inet_redir_to_connected().', 'keywords': 'SOCK_STREAM, selftests, bpf', 'commit_classification': "It's a bug fix.", 'commit_complexity': 'Simple, can be used without much configuration. For example, a simple helper function.', 'Major related component': 'The test cases and makefiles', 'program_types_related': ['socket like programs']}
--------------------
--------------------
Processing Commit ID: 638f32604385fd23059985da8de918e9c18f0b98
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: 638f32604385fd23059985da8de918e9c18f0b98
  Author Name: Michal Luczaj
  Author Email: mhal@rbox.co
  Commit Date: 1721249340
  Commit Message:
    af_unix: Disable MSG_OOB handling for sockets in sockmap/sockhash

AF_UNIX socket tracks the most recent OOB packet (in its receive queue)
with an `oob_skb` pointer. BPF redirecting does not account for that: when
an OOB packet is moved between sockets
  Parent Hashes: 3c870059e9f8897c032f4256f90c41ee822218a8
  Refs:  `oob_skb` is left outdated. This
results in a single skb that may be accessed from two different sockets.

Take the easy way out: silently drop MSG_OOB data targeting any socket that
is in a sockmap or a sockhash. Note that such silent drop is akin to the
fate of redirected skb's scm_fp_list (SCM_RIGHTS

- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'The commit disables MSG_OOB handling for sockets in sockmap/sockhash to prevent outdated data issues.', 'keywords': 'MSG_OOB, sockmap, sockhash', 'commit_classification': "It's a bug fix.", 'commit_complexity': 'Moderate, requires some setup or understanding of the system. For example, a new map type or a new link type.', 'Major related component': 'The eBPF maps', 'program_types_related': ['socket like programs']}
--------------------
--------------------
Processing Commit ID: 3c870059e9f8897c032f4256f90c41ee822218a8
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: 3c870059e9f8897c032f4256f90c41ee822218a8
  Author Name: Donald Hunter
  Author Email: donald.hunter@gmail.com
  Commit Date: 1721249158
  Commit Message:
    bpftool: Fix typo in usage help

The usage help for "bpftool prog help" contains a ° instead of the _
symbol for cgroup/sendmsg_unix. Fix the typo.

Fixes: 8b3cba987e6d ("bpftool: Add support for cgroup unix socket address hooks")
Signed-off-by: Donald Hunter <donald.hunter@gmail.com>
Signed-off-by: Daniel Borkmann <daniel@iogearbox.net>
Acked-by: Quentin Monnet <qmo@kernel.org>
Link: https://lore.kernel.org/bpf/20240717134508.77488-1-donald.hunter@gmail.com

  Parent Hashes: 189f1a976e426011e6a5588f1d3ceedf71fe2965
  Refs: 

- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'Fix typo in bpftool usage help for cgroup/sendmsg_unix by replacing ° with _ symbol.', 'keywords': 'bpftool, typo, cgroup', 'commit_classification': "It's a documentation change or typo fix.", 'commit_complexity': 'Simple, can be used without much configuration. For example, a simple helper function.', 'Major related component': 'The bpftool utility', 'program_types_related': ['It improves the overall eBPF infrastructure (e.g., verifier, runtime, etc.).']}
--------------------
--------------------
Processing Commit ID: 189f1a976e426011e6a5588f1d3ceedf71fe2965
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: 189f1a976e426011e6a5588f1d3ceedf71fe2965
  Author Name: Andrii Nakryiko
  Author Email: andrii@kernel.org
  Commit Date: 1721248967
  Commit Message:
    libbpf: Fix no-args func prototype BTF dumping syntax

For all these years libbpf's BTF dumper has been emitting not strictly
valid syntax for function prototypes that have no input arguments.

Instead of `int (*blah)()` we should emit `int (*blah)(void)`.

This is not normally a problem
  Parent Hashes: c638b130e83e4aa47031c0e51455ecc961dfdc3d
  Refs:  but it manifests when we get kfuncs in
vmlinux.h that have no input arguments. Due to compiler internal
specifics

- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'Fixes BTF dumping syntax for no-args function prototypes in libbpf.', 'keywords': 'BTF,idump,syntax', 'commit_classification': "It's a bug fix.", 'commit_complexity': 'Simple, can be used without much configuration. For example, a simple helper function.', 'Major related component': 'The libbpf library', 'program_types_related': ['It improves the overall eBPF infrastructure (e.g., verifier, runtime, etc.).']}
--------------------
--------------------
Processing Commit ID: c638b130e83e4aa47031c0e51455ecc961dfdc3d
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: c638b130e83e4aa47031c0e51455ecc961dfdc3d
  Author Name: Naveen N Rao
  Author Email: naveen@kernel.org
  Commit Date: 1721237238
  Commit Message:
    MAINTAINERS: Update powerpc BPF JIT maintainers

Hari Bathini has been updating and maintaining the powerpc BPF JIT since
a while now. Christophe Leroy has been doing the same for 32-bit
powerpc. Add them as maintainers for the powerpc BPF JIT.

I am no longer actively looking into the powerpc BPF JIT. Change my role
to that of a reviewer so that I can help with the odd query.

Signed-off-by: Naveen N Rao <naveen@kernel.org>
Signed-off-by: Daniel Borkmann <daniel@iogearbox.net>
Reviewed-by: Masami Hiramatsu (Google) <mhiramat@kernel.org>
Acked-by: Christophe Leroy <christophe.leroy@csgroup.eu>
Acked-by: Hari Bathini <hbathini@linux.ibm.com>
Link: https://lore.kernel.org/bpf/24fea21d9d4458973aadd6a02bb1bf558b8bd0b2.1720944897.git.naveen@kernel.org

  Parent Hashes: afcc8e1ef7bb5c14100ba3e6ccfd4baebc80242e
  Refs: 

- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'The commit updates maintainers for the powerpc BPF JIT in the MAINTAINERS file.', 'keywords': 'powerpc BPF JIT, maintainers, MAINTAINERS file', 'commit_classification': "It's other type of commit.", 'commit_complexity': 'Simple, can be used without much configuration. For example, a simple helper function.', 'Major related component': 'Other component related to eBPF but not listed above.', 'program_types_related': ["It's not related to any of the above."]}
--------------------
--------------------
Processing Commit ID: afcc8e1ef7bb5c14100ba3e6ccfd4baebc80242e
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: afcc8e1ef7bb5c14100ba3e6ccfd4baebc80242e
  Author Name: Naveen N Rao
  Author Email: naveen@kernel.org
  Commit Date: 1721237238
  Commit Message:
    MAINTAINERS: Update email address of Naveen

I have switched to using my @kernel.org id for my contributions. Update
MAINTAINERS and mailmap to reflect the same.

Signed-off-by: Naveen N Rao <naveen@kernel.org>
Signed-off-by: Daniel Borkmann <daniel@iogearbox.net>
Reviewed-by: Masami Hiramatsu (Google) <mhiramat@kernel.org>
Link: https://lore.kernel.org/bpf/fb6ef126771c70538067709af69d960da3560ce7.1720944897.git.naveen@kernel.org

  Parent Hashes: e1ef78dce9b7b0fa7f9d88bb3554441d74d33b34
  Refs: 

- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'The commit updates the MAINTAINERS file with a new email address for Naveen N Rao.', 'keywords': 'email update MAINTAINERS', 'commit_classification': "It's a cleanup or refactoring in the code.", 'commit_complexity': 'Simple, can be used without much configuration. For example, a simple helper function.', 'Major related component': 'Other component related to eBPF but not listed above.', 'program_types_related': ["It's not related to any of the above."]}
--------------------
--------------------
Processing Commit ID: e1ef78dce9b7b0fa7f9d88bb3554441d74d33b34
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: e1ef78dce9b7b0fa7f9d88bb3554441d74d33b34
  Author Name: Puranjay Mohan
  Author Email: puranjay@kernel.org
  Commit Date: 1721236964
  Commit Message:
    selftests/bpf: fexit_sleep: Fix stack allocation for arm64

On ARM64 the stack pointer should be aligned at a 16 byte boundary or
the SPAlignmentFault can occur. The fexit_sleep selftest allocates the
stack for the child process as a character array
  Parent Hashes: 0e03c643dc9389e61fa484562dae58c8d6e96d63
  Refs:  this is not guaranteed
to be aligned at 16 bytes.

Because of the SPAlignmentFault

- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'Fixes stack alignment issue in fexit_sleep selftest on ARM64 to prevent SPAlignmentFault.', 'keywords': 'fexit_sleep, ARM64, stack alignment', 'commit_classification': "It's a bug fix.", 'commit_complexity': 'Moderate, requires some setup or understanding of the system. For example, a new map type or a new link type.', 'Major related component': 'The test cases and makefiles', 'program_types_related': ['tracepoints like programs']}
--------------------
--------------------
Processing Commit ID: 51835949dda3783d4639cfa74ce13a3c9829de00
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: 51835949dda3783d4639cfa74ce13a3c9829de00
  Author Name: Linus Torvalds
  Author Email: torvalds@linux-foundation.org
  Commit Date: 1721183314
  Commit Message:
    Merge tag 'net-next-6.11' of git://git.kernel.org/pub/scm/linux/kernel/git/netdev/net-next

Pull networking updates from Jakub Kicinski:
 "Not much excitement - a handful of large patchsets (devmem among them)
  did not make it in time.

  Core & protocols:

   - Use local_lock in addition to local_bh_disable() to protect per-CPU
     resources in networking
  Parent Hashes: 0434dbe32053d07d658165be681505120c6b1abc 77ae5e5b00720372af2860efdc4bc652ac682696
  Refs:  a step closer for local_bh_disable() not
     to act as a big lock on PREEMPT_RT

   - Use flex array for netdevice priv area

- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'Merge networking updates, including local_lock improvements for per-CPU resources and flex array usage for netdevice.', 'keywords': 'networking updates, local_lock, flex array', 'commit_classification': "It's other type of commit.", 'commit_complexity': "Complex, needs expert knowledge or significant changes to existing systems. Like adding a completely new subsystem support or a completely new program type don't exist before.", 'Major related component': 'Other component related to eBPF but not listed above.', 'program_types_related': ["It's not related to any of the above."]}
--------------------
--------------------
Processing Commit ID: d80f2996b8502779c39221a9e7c9ea7e361c0ae4
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: d80f2996b8502779c39221a9e7c9ea7e361c0ae4
  Author Name: Linus Torvalds
  Author Email: torvalds@linux-foundation.org
  Commit Date: 1721156943
  Commit Message:
    Merge tag 'asm-generic-6.11' of git://git.kernel.org/pub/scm/linux/kernel/git/arnd/asm-generic

Pull asm-generic updates from Arnd Bergmann:
 "Most of this is part of my ongoing work to clean up the system call
  tables. In this bit
  Parent Hashes: a5db8e4544a4dc7143f30a1438686a4d5fa6d775 1a7b7326d587c9a5e8ff067e70d6aaf0333f4bb3
  Refs:  all of the newer architectures are converted to
  use the machine readable syscall.tbl format instead in place of
  complex macros in include/uapi/asm-generic/unistd.h.

  This follows an earlier series that fixed various API mismatches and
  in turn is used as the base for planned simplifications.

  The other two patches are dead code removal and a warning fix"

* tag 'asm-generic-6.11' of git://git.kernel.org/pub/scm/linux/kernel/git/arnd/asm-generic:
  vmlinux.lds.h: catch .bss..L* sections into BSS")
  fixmap: Remove unused set_fixmap_offset_io()
  riscv: convert to generic syscall table
  openrisc: convert to generic syscall table
  nios2: convert to generic syscall table
  loongarch: convert to generic syscall table
  hexagon: use new system call table
  csky: convert to generic syscall table
  arm64: rework compat syscall macros
  arm64: generate 64-bit syscall.tbl
  arm64: convert unistd_32.h to syscall.tbl format
  arc: convert to generic syscall table
  clone3: drop __ARCH_WANT_SYS_CLONE3 macro
  kbuild: add syscall table generation to scripts/Makefile.asm-headers
  kbuild: verify asm-generic header list
  loongarch: avoid generating extra header files
  um: don't generate asm/bpf_perf_event.h
  csky: drop asm/gpio.h wrapper
  syscalls: add generic scripts/syscall.tbl


- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'Merge asm-generic updates for syscall table conversion and cleanup.', 'keywords': 'asm-generic, syscall, cleanup', 'commit_classification': "It's a build system or CI/CD change.", 'commit_complexity': 'Moderate, requires some setup or understanding of the system. For example, a new map type or a new link type.', 'Major related component': 'Other component related to eBPF but not listed above.', 'program_types_related': ["It's not related to any of the above."]}
--------------------
--------------------
Processing Commit ID: 30b866413e7bdd507a79854b5931528d3f6f438f
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: 30b866413e7bdd507a79854b5931528d3f6f438f
  Author Name: Benjamin Tissoires
  Author Email: bentiss@kernel.org
  Commit Date: 1721125646
  Commit Message:
    Merge branch 'for-6.11/bpf' into for-linus

- Rewrite of HID-BPF internal implementation to use bpf struct_ops
  instead of tracing (Benjamin Tissoires)
- Add new HID-BPF hooks to be able to intercept userspace calls
  targetting a HID device and filtering them (Benjamin Tissoires)
- Add support for various new devices through HID-BPF filters (Benjamin
  Tissoires)

  Parent Hashes: e518f368303d35017fe79f21f0fec7860ef71d0b a67a1deb11d9a692366100d9ba9fb3aeb0c7707b
  Refs: 

- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'Refactor HID-BPF implementation to use struct_ops and add hooks for intercepting userspace calls and supporting new devices.', 'keywords': 'HID-BPF, struct_ops, hooks', 'commit_classification': "It's a new feature.", 'commit_complexity': "Complex, needs expert knowledge or significant changes to existing systems. Like adding a completely new subsystem support or a completely new program type don't exist before.", 'Major related component': 'The helper and kfuncs', 'program_types_related': ['HID driver like programs']}
--------------------
--------------------
Processing Commit ID: c49379dcda748adb8ba84d7a8eb3b02d4f1ebfcf
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: c49379dcda748adb8ba84d7a8eb3b02d4f1ebfcf
  Author Name: Jakub Kicinski
  Author Email: kuba@kernel.org
  Commit Date: 1721051720
  Commit Message:
    Merge branch 'net-dsa-vsc73xx-implement-vlan-operations'

Pawel Dembicki says:

====================
net: dsa: vsc73xx: Implement VLAN operations

This patch series is a result of splitting a larger patch series [0]
  Parent Hashes: a8ea8d531d1edf7b29e559713fe1aaab3530d7d9 259a7061c2f14bbf5845598f69ac63cdb77d6346
  Refs: 
where some parts was merged before.

The first patch implements port state configuration

- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': "Merges branch 'net-dsa-vsc73xx-implement-vlan-operations' to add VLAN operations to VSC73XX.", 'keywords': 'VLAN,DSA,VSC73XX', 'commit_classification': "It's a new feature.", 'commit_complexity': 'Moderate, requires some setup or understanding of the system. For example, a new map type or a new link type.', 'Major related component': 'Other component related to eBPF but not listed above.', 'program_types_related': ["It's not related to any of the above."]}
--------------------
--------------------
Processing Commit ID: 3e301b431b91e4b973dbc520e90e220acb5b91f5
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: 3e301b431b91e4b973dbc520e90e220acb5b91f5
  Author Name: Jiri Olsa
  Author Email: jolsa@kernel.org
  Commit Date: 1721022590
  Commit Message:
    selftests/bpf: Change uretprobe syscall number in uprobe_syscall test

Fixing the syscall number value.

Link: https://lore.kernel.org/all/20240712135228.1619332-3-jolsa@kernel.org/

Fixes: 9e7f74e64ae5 ("selftests/bpf: Add uretprobe syscall call from user space test")
Signed-off-by: Jiri Olsa <jolsa@kernel.org>
Acked-by: Andrii Nakryiko <andrii@kernel.org>
Signed-off-by: Masami Hiramatsu (Google) <mhiramat@kernel.org>

  Parent Hashes: 63ded110979bdd8741542ec66fb9e2d2074aed8c
  Refs: 

- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'The commit updates the syscall number in the uprobe_syscall BPF self-test.', 'keywords': 'syscall, uprobe, self-test', 'commit_classification': "It's a test case or test infrastructure change.", 'commit_complexity': 'Simple, can be used without much configuration. For example, a simple helper function.', 'Major related component': 'The test cases and makefiles', 'program_types_related': ['kprobe/uprobe/ftrace like programs']}
--------------------
--------------------
Processing Commit ID: 41d4a174201e62fc95562dc8e53097baf8568f24
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: 41d4a174201e62fc95562dc8e53097baf8568f24
  Author Name: Xuan Zhuo
  Author Email: xuanzhuo@linux.alibaba.com
  Commit Date: 1721014357
  Commit Message:
    virtio_net: replace VIRTIO_XDP_HEADROOM by XDP_PACKET_HEADROOM

virtio net has VIRTIO_XDP_HEADROOM that is equal to
XDP_PACKET_HEADROOM to calculate the headroom for xdp.

But here we should use the macro XDP_PACKET_HEADROOM from bpf.h to
calculate the headroom for xdp. So here we remove the
VIRTIO_XDP_HEADROOM
  Parent Hashes: e6c29506b2ec94e634819c03445ffe9eb350caed
  Refs:  and use the XDP_PACKET_HEADROOM to replace it.

Signed-off-by: Xuan Zhuo <xuanzhuo@linux.alibaba.com>
Acked-by: Jason Wang <jasowang@redhat.com>
Acked-by: Michael S. Tsirkin <mst@redhat.com>
Link: https://patch.msgid.link/20240708112537.96291-2-xuanzhuo@linux.alibaba.com
Signed-off-by: Jakub Kicinski <kuba@kernel.org>


- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'Replace VIRTIO_XDP_HEADROOM with XDP_PACKET_HEADROOM to calculate XDP headroom in virtio_net.', 'keywords': 'virtio_net,XDP headroom,macro replacement', 'commit_classification': "It's a cleanup or refactoring in the code.", 'commit_complexity': 'Simple, can be used without much configuration. For example, a simple helper function.', 'Major related component': 'The attach events and bpf link. e.g. perf events, tracepoints, etc.', 'program_types_related': ['xdp like programs']}
--------------------
--------------------
Processing Commit ID: 22767eecd62f7bb5c83541c291297cf24326a997
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: 22767eecd62f7bb5c83541c291297cf24326a997
  Author Name: Jakub Kicinski
  Author Email: kuba@kernel.org
  Commit Date: 1720910658
  Commit Message:
    Merge branch 'mlx5-misc-2023-07-08-sf-max-eq'

Saeed Mahameed says:

====================
mlx5 misc 2023-07-08 (sf max eq)

Link: https://patchwork.kernel.org/project/netdevbpf/patch/20240708080025.1593555-2-tariqt@nvidia.com/
====================

Link: https://patch.msgid.link/20240712003310.355106-1-saeed@kernel.org
Signed-off-by: Jakub Kicinski <kuba@kernel.org>

  Parent Hashes: f7023b3d697c6a7dfe2d9c70e0d8c2c580ccbd76 4b66be76a6fbe16918a01439bb9023da154d7694
  Refs: 

- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': "This commit merges the 'mlx5 misc 2023-07-08 sf max eq' branch into the main codebase.", 'keywords': 'mlx5, merge, kernel', 'commit_classification': "It's other type of commit.", 'commit_complexity': 'Moderate, requires some setup or understanding of the system. For example, a new map type or a new link type.', 'Major related component': 'Other component related to eBPF but not listed above.', 'program_types_related': ["It's not related to any of the above."]}
--------------------
--------------------
Processing Commit ID: 23e89e8ee7be73e21200947885a6d3a109a2c58d
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: 23e89e8ee7be73e21200947885a6d3a109a2c58d
  Author Name: Kuniyuki Iwashima
  Author Email: kuniyu@amazon.com
  Commit Date: 1720909189
  Commit Message:
    tcp: Don't drop SYN+ACK for simultaneous connect().

RFC 9293 states that in the case of simultaneous connect()
  Parent Hashes: 42ffe242860c401c34c62aa369c2add341a6eece
  Refs:  the connection
gets established when SYN+ACK is received. [0]

      TCP Peer A                                       TCP Peer B

  1.  CLOSED                                           CLOSED
  2.  SYN-SENT     --> <SEQ=100><CTL=SYN>              ...
  3.  SYN-RECEIVED <-- <SEQ=300><CTL=SYN>              <-- SYN-SENT
  4.               ... <SEQ=100><CTL=SYN>              --> SYN-RECEIVED
  5.  SYN-RECEIVED --> <SEQ=100><ACK=301><CTL=SYN

- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'Fix handling of SYN+ACK packets for simultaneous TCP connections to comply with RFC 9293.', 'keywords': 'TCP,SYN+ACK,connect', 'commit_classification': "It's a bug fix.", 'commit_complexity': 'Moderate, requires some setup or understanding of the system. For example, a new map type or a new link type.', 'Major related component': 'Other component related to eBPF but not listed above.', 'program_types_related': ["It's not related to any of the above."]}
--------------------
--------------------
Processing Commit ID: 26f453176a66bb36bf9e3a8abad808b144a94f6a
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: 26f453176a66bb36bf9e3a8abad808b144a94f6a
  Author Name: Jakub Kicinski
  Author Email: kuba@kernel.org
  Commit Date: 1720848354
  Commit Message:
    Merge tag 'for-netdev' of https://git.kernel.org/pub/scm/linux/kernel/git/bpf/bpf-next

Daniel Borkmann says:

====================
pull-request: bpf-next 2024-07-12

We've added 23 non-merge commits during the last 3 day(s) which contain
a total of 18 files changed
  Parent Hashes: e5abd12f3df13e92e2fb3c02fe825aa6c57f8306 e435b043d89a267bd6eb3d5650d2319805d7924a
  Refs:  234 insertions(+)

- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': "This commit merges changes from the 'for-netdev' branch, including 23 non-merge commits affecting 18 files.", 'keywords': 'merge, netdev, bpf-next', 'commit_classification': "It's other type of commit.", 'commit_complexity': 'Moderate, requires some setup or understanding of the system. For example, a new map type or a new link type.', 'Major related component': 'Other component related to eBPF but not listed above.', 'program_types_related': ['It improves the overall eBPF infrastructure (e.g., verifier, runtime, etc.).']}
--------------------
--------------------
Processing Commit ID: 4f5d4a1ba7a1a23173e356186f3f8b7c27d2e948
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: 4f5d4a1ba7a1a23173e356186f3f8b7c27d2e948
  Author Name: Chen Ni
  Author Email: nichen@iscas.ac.cn
  Commit Date: 1720827592
  Commit Message:
    test_bpf: convert comma to semicolon

Replace commas between expression statements with semicolons.

Link: https://lkml.kernel.org/r/20240709034323.586185-1-nichen@iscas.ac.cn
Signed-off-by: Chen Ni <nichen@iscas.ac.cn>
Cc: Alexei Starovoitov <ast@kernel.org>
Cc: Andrii Nakryiko <andrii@kernel.org>
Cc: Daniel Borkmann <daniel@iogearbox.net>
Cc: Eduard Zingerman <eddyz87@gmail.com>
Cc: Hao Luo <haoluo@google.com>
Cc: Jiri Olsa <jolsa@kernel.org>
Cc: John Fastabend <john.fastabend@gmail.com>
Cc: KP Singh <kpsingh@kernel.org>
Cc: Martin KaFai Lau <martin.lau@linux.dev>
Cc: Song Liu <song@kernel.org>
Cc: Stanislav Fomichev <sdf@fomichev.me>
Cc: Yonghong Song <yonghong.song@linux.dev>
Signed-off-by: Andrew Morton <akpm@linux-foundation.org>

  Parent Hashes: 73db3abdca58c8a014ec4c88cf5ef925cbf63669
  Refs: 

- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'Converted commas to semicolons in test_bpf expressions for correct syntax.', 'keywords': 'convert,comma,semicolon', 'commit_classification': "It's a cleanup or refactoring in the code.", 'commit_complexity': 'Simple, can be used without much configuration. For example, a simple helper function.', 'Major related component': 'The test cases and makefiles', 'program_types_related': ["It's not related to any of the above."]}
--------------------
--------------------
Processing Commit ID: acd4b2ecf3bb24a781aad7f703243fa00eb7efbb
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: acd4b2ecf3bb24a781aad7f703243fa00eb7efbb
  Author Name: Andrii Nakryiko
  Author Email: andrii@kernel.org
  Commit Date: 1720824731
  Commit Message:
    fs/procfs: extract logic for getting VMA name constituents

Patch series "ioctl()-based API to query VMAs from /proc/<pid>/maps"
  Parent Hashes: 8d42e2a91dcf86b34461cd7f709797805afa9f43
  Refs:  v6.

Implement binary ioctl()-based interface to /proc/<pid>/maps file to allow
applications to query VMA information more efficiently than reading *all*
VMAs nonselectively through text-based interface of /proc/<pid>/maps file.

Patch #2 goes into a lot of details and background on some common patterns
of using /proc/<pid>/maps in the area of performance profiling and
subsequent symbolization of captured stack traces.  As mentioned in that
patch

- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'Extract logic for acquiring VMA name elements in a patch for ioctl()-based API for querying VMAs through /proc/pid/maps.', 'keywords': 'ioctl,VMA,procfs', 'commit_classification': "It's a new feature.", 'commit_complexity': 'Moderate, requires some setup or understanding of the system. For example, a new map type or a new link type.', 'Major related component': 'Other component related to eBPF but not listed above.', 'program_types_related': ['tracepoints like programs']}
--------------------
--------------------
Processing Commit ID: e435b043d89a267bd6eb3d5650d2319805d7924a
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: e435b043d89a267bd6eb3d5650d2319805d7924a
  Author Name: Tengda Wu
  Author Email: wutengda@huaweicloud.com
  Commit Date: 1720815261
  Commit Message:
    selftests/bpf: Test for null-pointer-deref bugfix in resolve_prog_type()

This test verifies that resolve_prog_type() works as expected when
`attach_prog_fd` is not passed in.

`prog->aux->dst_prog` in resolve_prog_type() is assigned by
`attach_prog_fd`
  Parent Hashes: f7866c35873377313ff94398f17d425b28b71de1
  Refs:  and would be NULL if `attach_prog_fd` is not provided.

Loading EXT prog with bpf_dynptr_from_skb() kfunc call in this way will
lead to null-pointer-deref.

Verify that the null-pointer-deref bug in resolve_prog_type() is fixed.

Signed-off-by: Tengda Wu <wutengda@huaweicloud.com>
Signed-off-by: Daniel Borkmann <daniel@iogearbox.net>
Link: https://lore.kernel.org/bpf/20240711145819.254178-3-wutengda@huaweicloud.com


- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'Add test case to verify fix for null-pointer dereference in resolve_prog_type for EXT progs.', 'keywords': 'null-pointer-deref, resolve_prog_type, selftests', 'commit_classification': "It's a test case or test infrastructure change.", 'commit_complexity': 'Simple, can be used without much configuration. For example, a simple helper function.', 'Major related component': 'The test cases and makefiles', 'program_types_related': ['other']}
--------------------
--------------------
Processing Commit ID: f7866c35873377313ff94398f17d425b28b71de1
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: f7866c35873377313ff94398f17d425b28b71de1
  Author Name: Tengda Wu
  Author Email: wutengda@huaweicloud.com
  Commit Date: 1720815255
  Commit Message:
    bpf: Fix null pointer dereference in resolve_prog_type() for BPF_PROG_TYPE_EXT

When loading a EXT program without specifying `attr->attach_prog_fd`
  Parent Hashes: 517125f6749402e579f715519147145944f12ad9
  Refs: 
the `prog->aux->dst_prog` will be null. At this time

- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'Fixes a null pointer dereference in resolve_prog_type() for BPF_PROG_TYPE_EXT when attr->attach_prog_fd is not specified.', 'keywords': 'null pointer dereference', 'commit_classification': "It's a bug fix.", 'commit_complexity': 'Simple, can be used without much configuration. For example, a simple helper function.', 'Major related component': 'The eBPF verifier', 'program_types_related': ["It's not related to any of the above."]}
--------------------
--------------------
Processing Commit ID: 7a2fb5619cc1fb53cb8784154d5ef2bd99997436
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: 7a2fb5619cc1fb53cb8784154d5ef2bd99997436
  Author Name: Howard Chu
  Author Email: howardchu95@gmail.com
  Commit Date: 1720802942
  Commit Message:
    perf trace: Fix iteration of syscall ids in syscalltbl->entries

This is a bug found when implementing pretty-printing for the
landlock_add_rule system call
  Parent Hashes: 1553419c3c10cf386496e68b90b5d0ce966ac614
  Refs:  I decided to send this patch separately
because this is a serious bug that should be fixed fast.

I wrote a test program to do landlock_add_rule syscall in a loop

- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'Fix bug in iteration of syscall ids during landlock_add_rule syscall implementation.', 'keywords': 'bug, syscall, iteration', 'commit_classification': "It's a bug fix.", 'commit_complexity': 'Simple, can be used without much configuration. For example, a simple helper function.', 'Major related component': 'Other component related to eBPF but not listed above.', 'program_types_related': ["It's not related to any of the above."]}
--------------------
--------------------
Processing Commit ID: 517125f6749402e579f715519147145944f12ad9
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: 517125f6749402e579f715519147145944f12ad9
  Author Name: Daniel Borkmann
  Author Email: daniel@iogearbox.net
  Commit Date: 1720801070
  Commit Message:
    selftests/bpf: DENYLIST.aarch64: Skip fexit_sleep again

Revert commit 90dc946059b7 ("selftests/bpf: DENYLIST.aarch64: Remove
fexit_sleep") again. The fix in 19d3c179a377 ("bpf
  Parent Hashes: a1010fce1c0c2ce3b305aa6e8ff70e86f99e3226
  Refs:  arm64: Fix trampoline
for BPF_TRAMP_F_CALL_ORIG") does not address all of the issues and BPF
CI is still hanging and timing out:

   https://github.com/kernel-patches/bpf/actions/runs/9905842936/job/27366435436

   [...]
   #89/11   fexit_bpf2bpf/func_replace_global_func:OK
   #89/12   fexit_bpf2bpf/fentry_to_cgroup_bpf:OK
   #89/13   fexit_bpf2bpf/func_replace_progmap:OK
   #89      fexit_bpf2bpf:OK
   Error: The operation was canceled.

Thus more investigation work & fixing is needed before the test can be put
in place again.

Signed-off-by: Daniel Borkmann <daniel@iogearbox.net>
Cc: Puranjay Mohan <puranjay@kernel.org>
Link: https://lore.kernel.org/bpf/20240705145009.32340-1-puranjay@kernel.org


- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'Revert a selftest change for bpf on aarch64 due to unresolved issues causing BPF CI failures.', 'keywords': 'DENYLIST aarch64 fexit_sleep', 'commit_classification': "It's a test case or test infrastructure change.", 'commit_complexity': 'Simple, can be used without much configuration. For example, a simple helper function.', 'Major related component': 'The test cases and makefiles', 'program_types_related': ["It's not related to any of the above."]}
--------------------
--------------------
Processing Commit ID: a1010fce1c0c2ce3b305aa6e8ff70e86f99e3226
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: a1010fce1c0c2ce3b305aa6e8ff70e86f99e3226
  Author Name: Alexei Starovoitov
  Author Email: ast@kernel.org
  Commit Date: 1720799657
  Commit Message:
    Merge branch 'use-overflow-h-helpers-to-check-for-overflows'

Shung-Hsi Yu says:

====================
Use overflow.h helpers to check for overflows

This patch set refactors kernel/bpf/verifier.c to use type-agnostic
  Parent Hashes: 2454075f8e2915cebbe52a1195631bc7efe2b7e1 deac5871eb0751454cb80b3ff6b69e42a6c1bab2
  Refs:  generic
overflow-check helpers defined in include/linux/overflow.h to check for addition
and subtraction overflow

- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'Refactor eBPF verifier to use overflow.h helpers for checking arithmetic overflow.', 'keywords': 'overflow, refactor, helpers', 'commit_classification': "It's a cleanup or refactoring in the code.", 'commit_complexity': 'Moderate, requires some setup or understanding of the system. For example, a new map type or a new link type.', 'Major related component': 'The eBPF verifier', 'program_types_related': ['It improves the overall eBPF infrastructure (e.g., verifier, runtime, etc.).']}
--------------------
--------------------
Processing Commit ID: deac5871eb0751454cb80b3ff6b69e42a6c1bab2
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: deac5871eb0751454cb80b3ff6b69e42a6c1bab2
  Author Name: Shung-Hsi Yu
  Author Email: shung-hsi.yu@suse.com
  Commit Date: 1720799648
  Commit Message:
    bpf: use check_sub_overflow() to check for subtraction overflows

Similar to previous patch that drops signed_add*_overflows() and uses
(compiler) builtin-based check_add_overflow()
  Parent Hashes: 28a4411076b254c67842348e3b25c2fb41a94cad
  Refs:  do the same for
signed_sub*_overflows() and replace them with the generic
check_sub_overflow() to make future refactoring easier and have the
checks implemented more efficiently.

Unsigned overflow check for subtraction does not use helpers and are
simple enough already

- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'Refactor subtraction overflow checks by replacing signed_sub*_overflows() with check_sub_overflow() for efficiency and easier future refactoring.', 'keywords': 'overflow, subtraction, refactoring', 'commit_classification': "It's a cleanup or refactoring in the code.", 'commit_complexity': 'Simple, can be used without much configuration. For example, a simple helper function.', 'Major related component': 'The eBPF verifier', 'program_types_related': ['It improves the overall eBPF infrastructure (e.g., verifier, runtime, etc.).']}
--------------------
--------------------
Processing Commit ID: 28a4411076b254c67842348e3b25c2fb41a94cad
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: 28a4411076b254c67842348e3b25c2fb41a94cad
  Author Name: Shung-Hsi Yu
  Author Email: shung-hsi.yu@suse.com
  Commit Date: 1720799648
  Commit Message:
    bpf: use check_add_overflow() to check for addition overflows

signed_add*_overflows() was added back when there was no overflow-check
helper. With the introduction of such helpers in commit f0907827a8a91
("compiler.h: enable builtin overflow checkers and add fallback code")
  Parent Hashes: 4a04b4f0de59dd5c621e78f15803ee0b0544eeb8
  Refs:  we
can drop signed_add*_overflows() in kernel/bpf/verifier.c and use the
generic check_add_overflow() instead.

This will make future refactoring easier

- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'Refactor to use check_add_overflow() for addition overflow checking in eBPF verifier.', 'keywords': 'overflow refactoring verifier', 'commit_classification': "It's a cleanup or refactoring in the code.", 'commit_complexity': 'Simple, can be used without much configuration. For example, a simple helper function.', 'Major related component': 'The eBPF verifier', 'program_types_related': ['It improves the overall eBPF infrastructure (e.g., verifier, runtime, etc.).']}
--------------------
--------------------
Processing Commit ID: 4a04b4f0de59dd5c621e78f15803ee0b0544eeb8
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: 4a04b4f0de59dd5c621e78f15803ee0b0544eeb8
  Author Name: Shung-Hsi Yu
  Author Email: shung-hsi.yu@suse.com
  Commit Date: 1720799647
  Commit Message:
    bpf: fix overflow check in adjust_jmp_off()

adjust_jmp_off() incorrectly used the insn->imm field for all overflow check
  Parent Hashes: 2454075f8e2915cebbe52a1195631bc7efe2b7e1
  Refs: 
which is incorrect as that should only be done or the BPF_JMP32 | BPF_JA case

- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'Fix incorrect overflow check in adjust_jmp_off() for BPF_JMP32 | BPF_JA case.', 'keywords': 'overflow, adjust_jmp_off, BPF_JMP32', 'commit_classification': "It's a bug fix.", 'commit_complexity': 'Simple, can be used without much configuration. For example, a simple helper function.', 'Major related component': 'The eBPF verifier', 'program_types_related': ['It improves the overall eBPF infrastructure (e.g., verifier, runtime, etc.).']}
--------------------
--------------------
Processing Commit ID: 2454075f8e2915cebbe52a1195631bc7efe2b7e1
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: 2454075f8e2915cebbe52a1195631bc7efe2b7e1
  Author Name: Alan Maguire
  Author Email: alan.maguire@oracle.com
  Commit Date: 1720796546
  Commit Message:
    bpf: Eliminate remaining "make W=1" warnings in kernel/bpf/btf.o

As reported by Mirsad [1] we still see format warnings in kernel/bpf/btf.o
at W=1 warning level:

  CC      kernel/bpf/btf.o
./kernel/bpf/btf.c: In function ‘btf_type_seq_show_flags’:
./kernel/bpf/btf.c:7553:21: warning: assignment left-hand side might be a candidate for a format attribute [-Wsuggest-attribute=format]
 7553 |         sseq.showfn = btf_seq_show;
      |                     ^
./kernel/bpf/btf.c: In function ‘btf_type_snprintf_show’:
./kernel/bpf/btf.c:7604:31: warning: assignment left-hand side might be a candidate for a format attribute [-Wsuggest-attribute=format]
 7604 |         ssnprintf.show.showfn = btf_snprintf_show;
      |                               ^

Combined with CONFIG_WERROR=y these can halt the build.

The fix (annotating the structure field with __printf())
suggested by Mirsad resolves these. Apologies I missed this last time.
No other W=1 warnings were observed in kernel/bpf after this fix.

[1] https://lore.kernel.org/bpf/92c9d047-f058-400c-9c7d-81d4dc1ef71b@gmail.com/

Fixes: b3470da314fd ("bpf: annotate BTF show functions with __printf")
Reported-by: Mirsad Todorovac <mtodorovac69@gmail.com>
Suggested-by: Mirsad Todorovac <mtodorovac69@gmail.com>
Signed-off-by: Alan Maguire <alan.maguire@oracle.com>
Signed-off-by: Daniel Borkmann <daniel@iogearbox.net>
Link: https://lore.kernel.org/bpf/20240712092859.1390960-1-alan.maguire@oracle.com

  Parent Hashes: b3470da314fd8018ee237e382000c4154a942420
  Refs: 

- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'Fixes remaining W=1 format warnings in kernel/bpf/btf.o by adding __printf annotation.', 'keywords': 'format warnings, __printf annotation, kernel bpf', 'commit_classification': "It's a bug fix.", 'commit_complexity': 'Simple, can be used without much configuration. For example, a simple helper function.', 'Major related component': 'The BPF Type Format (BTF)', 'program_types_related': ['It improves the overall eBPF infrastructure (e.g., verifier, runtime, etc.).']}
--------------------
--------------------
Processing Commit ID: b3470da314fd8018ee237e382000c4154a942420
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: b3470da314fd8018ee237e382000c4154a942420
  Author Name: Alan Maguire
  Author Email: alan.maguire@oracle.com
  Commit Date: 1720732517
  Commit Message:
    bpf: annotate BTF show functions with __printf

-Werror=suggest-attribute=format warns about two functions
in kernel/bpf/btf.c [1]; add __printf() annotations to silence
these warnings since for CONFIG_WERROR=y they will trigger
build failures.

[1] https://lore.kernel.org/bpf/a8b20c72-6631-4404-9e1f-0410642d7d20@gmail.com/

Fixes: 31d0bc81637d ("bpf: Move to generic BTF show support
  Parent Hashes: 19d3c179a37730caf600a97fed3794feac2b197b
  Refs:  apply it to seq files/strings")
Reported-by: Mirsad Todorovac <mtodorovac69@gmail.com>
Signed-off-by: Alan Maguire <alan.maguire@oracle.com>
Tested-by: Mirsad Todorovac <mtodorovac69@yahoo.com>
Link: https://lore.kernel.org/r/20240711182321.963667-1-alan.maguire@oracle.com
Signed-off-by: Alexei Starovoitov <ast@kernel.org>


- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'This commit adds __printf annotations to silence warning for BTF show functions to prevent build failures.', 'keywords': '__printf, annotations, warnings', 'commit_classification': "It's a cleanup or refactoring in the code.", 'commit_complexity': 'Simple, can be used without much configuration. For example, a simple helper function.', 'Major related component': 'The BPF Type Format (BTF)', 'program_types_related': ['It improves the overall eBPF infrastructure (e.g., verifier, runtime, etc.).']}
--------------------
--------------------
Processing Commit ID: 51df8e0cbaefd432f7029dde94e6c7e4e5b19465
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: 51df8e0cbaefd432f7029dde94e6c7e4e5b19465
  Author Name: Linus Torvalds
  Author Email: torvalds@linux-foundation.org
  Commit Date: 1720715389
  Commit Message:
    Merge tag 'net-6.10-rc8' of git://git.kernel.org/pub/scm/linux/kernel/git/netdev/net

Pull networking fixes from Paolo Abeni:
 "Including fixes from bpf and netfilter.

  Current release - regressions:

   - core: fix rc7's __skb_datagram_iter() regression

  Current release - new code bugs:

   - eth: bnxt: fix crashes when reducing ring count with active RSS
     contexts

  Previous releases - regressions:

   - sched: fix UAF when resolving a clash

   - skmsg: skip zero length skb in sk_msg_recvmsg2

   - sunrpc: fix kernel free on connection failure in
     xs_tcp_setup_socket

   - tcp: avoid too many retransmit packets

   - tcp: fix incorrect undo caused by DSACK of TLP retransmit

   - udp: Set SOCK_RCU_FREE earlier in udp_lib_get_port().

   - eth: ks8851: fix deadlock with the SPI chip variant

   - eth: i40e: fix XDP program unloading while removing the driver

  Previous releases - always broken:

   - bpf:
       - fix too early release of tcx_entry
       - fail bpf_timer_cancel when callback is being cancelled
       - bpf: fix order of args in call to bpf_map_kvcalloc

   - netfilter: nf_tables: prefer nft_chain_validate

   - ppp: reject claimed-as-LCP but actually malformed packets

   - wireguard: avoid unaligned 64-bit memory accesses"

* tag 'net-6.10-rc8' of git://git.kernel.org/pub/scm/linux/kernel/git/netdev/net: (33 commits)
  net
  Parent Hashes: 83ab4b461eb7bdf90984eb56d4954dbe11e926d4 d7c199e77ef2fe259ad5b1beca5ddd6c951fcba2
  Refs:  sunrpc: Remap EPERM in case of connection failure in xs_tcp_setup_socket
  net/sched: Fix UAF when resolving a clash
  net: ks8851: Fix potential TX stall after interface reopen
  udp: Set SOCK_RCU_FREE earlier in udp_lib_get_port().
  netfilter: nf_tables: prefer nft_chain_validate
  netfilter: nfnetlink_queue: drop bogus WARN_ON
  ethtool: netlink: do not return SQI value if link is down
  ppp: reject claimed-as-LCP but actually malformed packets
  selftests/bpf: Add timer lockup selftest
  net: ethernet: mtk-star-emac: set mac_managed_pm when probing
  e1000e: fix force smbus during suspend flow
  tcp: avoid too many retransmit packets
  bpf: Defer work in bpf_timer_cancel_and_free
  bpf: Fail bpf_timer_cancel when callback is being cancelled
  bpf: fix order of args in call to bpf_map_kvcalloc
  net: ethernet: lantiq_etop: fix double free in detach
  i40e: Fix XDP program unloading while removing the driver
  net: fix rc7's __skb_datagram_iter()
  net: ks8851: Fix deadlock with the SPI chip variant
  octeontx2-af: Fix incorrect value output on error path in rvu_check_rsrc_availability()
  ...


- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'Merge networking fixes related to bpf, netfilter, and other components for the 6.10-rc8 version.', 'keywords': 'networking, fixes, merge', 'commit_classification': "It's other type of commit.", 'commit_complexity': "Complex, needs expert knowledge or significant changes to existing systems. Like adding a completely new subsystem support or a completely new program type don't exist before.", 'Major related component': 'Other component related to eBPF but not listed above.', 'program_types_related': ['It improves the overall eBPF infrastructure (e.g., verifier, runtime, etc.).', 'tc/netfilter like programs', "It's not related to any of the above."]}
--------------------
--------------------
Processing Commit ID: 19d3c179a37730caf600a97fed3794feac2b197b
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: 19d3c179a37730caf600a97fed3794feac2b197b
  Author Name: Puranjay Mohan
  Author Email: puranjay@kernel.org
  Commit Date: 1720713390
  Commit Message:
    bpf
  Parent Hashes: 18a8a4c88fb4c261f72a29b769c9463362d9687a
  Refs:  arm64: Fix trampoline for BPF_TRAMP_F_CALL_ORIG

When BPF_TRAMP_F_CALL_ORIG is set

- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'Fix trampoline functionality for ARM64 architecture when BPF_TRAMP_F_CALL_ORIG is set.', 'keywords': 'trampoline, ARM64, BPF_TRAMP_F_CALL_ORIG', 'commit_classification': "It's a bug fix.", 'commit_complexity': 'Moderate, requires some setup or understanding of the system. For example, a new map type or a new link type.', 'Major related component': 'The JIT compiler', 'program_types_related': ["It's not related to any of the above."]}
--------------------
--------------------
Processing Commit ID: a819ff0cf9fa166881a3781d32909257e2033e86
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: a819ff0cf9fa166881a3781d32909257e2033e86
  Author Name: Paolo Abeni
  Author Email: pabeni@redhat.com
  Commit Date: 1720694313
  Commit Message:
    Merge tag 'for-netdev' of https://git.kernel.org/pub/scm/linux/kernel/git/bpf/bpf

Daniel Borkmann says:

====================
pull-request: bpf 2024-07-11

The following pull-request contains BPF updates for your *net* tree.

We've added 4 non-merge commits during the last 2 day(s) which contain
a total of 4 files changed
  Parent Hashes: 626dfed5fa3bfb41e0dffd796032b555b69f9cde 50bd5a0c658d132507673c4d59347c025dd149ed
  Refs:  262 insertions(+)

- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'Merged BPF updates for net tree containing 4 non-merge commits with changes to 4 files.', 'keywords': 'BPF, updates, net', 'commit_classification': "It's other type of commit.", 'commit_complexity': 'Moderate, requires some setup or understanding of the system. For example, a new map type or a new link type.', 'Major related component': 'Other component related to eBPF but not listed above.', 'program_types_related': ['It improves the overall eBPF infrastructure (e.g., verifier, runtime, etc.).']}
--------------------
--------------------
Processing Commit ID: 626dfed5fa3bfb41e0dffd796032b555b69f9cde
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: 626dfed5fa3bfb41e0dffd796032b555b69f9cde
  Author Name: Daniel Borkmann
  Author Email: daniel@iogearbox.net
  Commit Date: 1720693065
  Commit Message:
    net
  Parent Hashes: 26488172b0292bed837b95a006a3f3431d1898c3
  Refs:  sunrpc: Remap EPERM in case of connection failure in xs_tcp_setup_socket

When using a BPF program on kernel_connect()

- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'Remap EPERM error for tcp socket connection failure within sunrpc using a BPF program on kernel_connect.', 'keywords': 'Remap, EPERM, kernel_connect', 'commit_classification': "It's a bug fix.", 'commit_complexity': 'Moderate, requires some setup or understanding of the system. For example, a new map type or a new link type.', 'Major related component': 'The syscall interface', 'program_types_related': ['socket like programs']}
--------------------
--------------------
Processing Commit ID: 5c0b485a8c6116516f33925b9ce5b6104a6eadfd
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: 5c0b485a8c6116516f33925b9ce5b6104a6eadfd
  Author Name: Kuniyuki Iwashima
  Author Email: kuniyu@amazon.com
  Commit Date: 1720690107
  Commit Message:
    udp: Set SOCK_RCU_FREE earlier in udp_lib_get_port().

syzkaller triggered the warning [0] in udp_v4_early_demux().

In udp_v[46]_early_demux() and sk_lookup()
  Parent Hashes: c184cf94e73b04ff7048d045f5413899bc664788
  Refs:  we do not touch the refcount
of the looked-up sk and use sock_pfree() as skb->destructor

- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'The commit sets SOCK_RCU_FREE earlier in udp_lib_get_port to address a syzkaller-triggered warning.', 'keywords': 'udp, SOCK_RCU_FREE, syzkaller', 'commit_classification': "It's a bug fix.", 'commit_complexity': 'Moderate, requires some setup or understanding of the system. For example, a new map type or a new link type.', 'Major related component': 'Other component related to eBPF but not listed above.', 'program_types_related': ["It's not related to any of the above."]}
--------------------
--------------------
Processing Commit ID: 50bd5a0c658d132507673c4d59347c025dd149ed
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: 50bd5a0c658d132507673c4d59347c025dd149ed
  Author Name: Kumar Kartikeya Dwivedi
  Author Email: memxor@gmail.com
  Commit Date: 1720685911
  Commit Message:
    selftests/bpf: Add timer lockup selftest

Add a selftest that tries to trigger a situation where two timer callbacks
are attempting to cancel each other's timer. By running them continuously
  Parent Hashes: 0c237341d994adbafed2a0d372275de39efa4a98
  Refs: 
we hit a condition where both run in parallel and cancel each other.

Without the fix in the previous patch

- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'Add a selftest to trigger timer lockup by running conflicting timer callbacks.', 'keywords': 'selftests,bpf,timer', 'commit_classification': "It's a test case or test infrastructure change.", 'commit_complexity': 'Simple, can be used without much configuration. For example, a simple helper function.', 'Major related component': 'The test cases and makefiles', 'program_types_related': ["It's not related to any of the above."]}
--------------------
--------------------
Processing Commit ID: fde318326daa48a4bb3ca8ee229bac4d14b5bc2a
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: fde318326daa48a4bb3ca8ee229bac4d14b5bc2a
  Author Name: Artem Savkov
  Author Email: asavkov@redhat.com
  Commit Date: 1720676421
  Commit Message:
    powerpc64/bpf: jit support for signed division and modulo

Add jit support for sign division and modulo. Tested using test_bpf
module.

Signed-off-by: Artem Savkov <asavkov@redhat.com>
Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
Link: https://msgid.link/20240517075650.248801-6-asavkov@redhat.com


  Parent Hashes: 597b1710982d10b8629697e4a548b30d0d93eeed
  Refs: 

- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'Add JIT support for signed division and modulo in powerpc64 architecture.', 'keywords': 'JIT,signed division,modulo', 'commit_classification': "It's a new feature.", 'commit_complexity': 'Moderate, requires some setup or understanding of the system. For example, a new map type or a new link type.', 'Major related component': 'The JIT compiler', 'program_types_related': ['It improves the overall eBPF infrastructure (e.g., verifier, runtime, etc.).']}
--------------------
--------------------
Processing Commit ID: 597b1710982d10b8629697e4a548b30d0d93eeed
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: 597b1710982d10b8629697e4a548b30d0d93eeed
  Author Name: Artem Savkov
  Author Email: asavkov@redhat.com
  Commit Date: 1720676421
  Commit Message:
    powerpc64/bpf: jit support for sign extended mov

Add jit support for sign extended mov. Tested using test_bpf module.

Signed-off-by: Artem Savkov <asavkov@redhat.com>
Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
Link: https://msgid.link/20240517075650.248801-5-asavkov@redhat.com


  Parent Hashes: 717756c9c8ddad9f28389185bfb161d4d88e01a4
  Refs: 

- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'Add JIT support for sign extended move on PowerPC64 architecture.', 'keywords': 'jit support,powerpc64,sign extended', 'commit_classification': "It's a new feature.", 'commit_complexity': 'Moderate, requires some setup or understanding of the system. For example, a new map type or a new link type.', 'Major related component': 'The JIT compiler', 'program_types_related': ['It improves the overall eBPF infrastructure (e.g., verifier, runtime, etc.).']}
--------------------
--------------------
Processing Commit ID: 717756c9c8ddad9f28389185bfb161d4d88e01a4
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: 717756c9c8ddad9f28389185bfb161d4d88e01a4
  Author Name: Artem Savkov
  Author Email: asavkov@redhat.com
  Commit Date: 1720676421
  Commit Message:
    powerpc64/bpf: jit support for sign extended load

Add jit support for sign extended load. Tested using test_bpf module.

Signed-off-by: Artem Savkov <asavkov@redhat.com>
Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
Link: https://msgid.link/20240517075650.248801-4-asavkov@redhat.com


  Parent Hashes: a71c0b09a14db72d59c48a8cda7a73032f4d418b
  Refs: 

- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'Added JIT support for sign extended load on powerpc64 architecture.', 'keywords': 'JIT,powerpc64,sign-extended', 'commit_classification': "It's a new feature.", 'commit_complexity': 'Moderate, requires some setup or understanding of the system. For example, a new map type or a new link type.', 'Major related component': 'The JIT compiler', 'program_types_related': ['It improves the overall eBPF infrastructure (e.g., verifier, runtime, etc.).']}
--------------------
--------------------
Processing Commit ID: a71c0b09a14db72d59c48a8cda7a73032f4d418b
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: a71c0b09a14db72d59c48a8cda7a73032f4d418b
  Author Name: Artem Savkov
  Author Email: asavkov@redhat.com
  Commit Date: 1720676421
  Commit Message:
    powerpc64/bpf: jit support for unconditional byte swap

Add jit support for unconditional byte swap. Tested using BSWAP tests
from test_bpf module.

Signed-off-by: Artem Savkov <asavkov@redhat.com>
Reviewed-by: Hari Bathini <hbathini@linux.ibm.com>
Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
Link: https://msgid.link/20240517075650.248801-3-asavkov@redhat.com


  Parent Hashes: 3c086ce222cefcf16d412faa10d456161d076796
  Refs: 

- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'Add JIT support for unconditional byte swap on powerpc64 architecture.', 'keywords': 'JIT,support,byte swap', 'commit_classification': "It's a new feature.", 'commit_complexity': 'Moderate, requires some setup or understanding of the system. For example, a new map type or a new link type.', 'Major related component': 'The JIT compiler', 'program_types_related': ['It improves the overall eBPF infrastructure (e.g., verifier, runtime, etc.).']}
--------------------
--------------------
Processing Commit ID: 3c086ce222cefcf16d412faa10d456161d076796
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: 3c086ce222cefcf16d412faa10d456161d076796
  Author Name: Artem Savkov
  Author Email: asavkov@redhat.com
  Commit Date: 1720676420
  Commit Message:
    powerpc64/bpf: jit support for 32bit offset jmp instruction

Add jit support for JMP32_JA instruction. Tested using test_bpf module.

Signed-off-by: Artem Savkov <asavkov@redhat.com>
Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
Link: https://msgid.link/20240517075650.248801-2-asavkov@redhat.com


  Parent Hashes: 20ce0c247b2500cb7060cb115274ba71abda2626
  Refs: 

- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'Added JIT support for 32-bit JMP32_JA instruction on powerpc64 architecture.', 'keywords': 'jit,powerpc64,instruction', 'commit_classification': "It's a new feature.", 'commit_complexity': 'Moderate, requires some setup or understanding of the system. For example, a new map type or a new link type.', 'Major related component': 'The JIT compiler', 'program_types_related': ['tracepoints like programs']}
--------------------
--------------------
Processing Commit ID: 0c237341d994adbafed2a0d372275de39efa4a98
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: 0c237341d994adbafed2a0d372275de39efa4a98
  Author Name: Alexei Starovoitov
  Author Email: ast@kernel.org
  Commit Date: 1720653616
  Commit Message:
    Merge branch 'fixes-for-bpf-timer-lockup-and-uaf'

Kumar Kartikeya Dwivedi says:

====================
Fixes for BPF timer lockup and UAF

The following patches contain fixes for timer lockups and a
use-after-free scenario.

This set proposes to fix the following lockup situation for BPF timers.

CPU 1					CPU 2

bpf_timer_cb				bpf_timer_cb
  timer_cb1				  timer_cb2
    bpf_timer_cancel(timer_cb2)		    bpf_timer_cancel(timer_cb1)
      hrtimer_cancel			      hrtimer_cancel

In this case
  Parent Hashes: af253aef183a31ce62d2e39fc520b0ebfb562bb9 a6fcd19d7eac1335eb76bc16b6a66b7f574d1d69
  Refs:  both callbacks will continue waiting for each other to
finish synchronously

- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'Fixes for timer lockups and use-after-free issues in BPF timers.', 'keywords': 'BPF,timer,lockup', 'commit_classification': "It's a bug fix.", 'commit_complexity': 'Moderate, requires some setup or understanding of the system. For example, a new map type or a new link type.', 'Major related component': 'The helper and kfuncs', 'program_types_related': ['It improves the overall eBPF infrastructure (e.g., verifier, runtime, etc.).']}
--------------------
--------------------
Processing Commit ID: a6fcd19d7eac1335eb76bc16b6a66b7f574d1d69
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: a6fcd19d7eac1335eb76bc16b6a66b7f574d1d69
  Author Name: Kumar Kartikeya Dwivedi
  Author Email: memxor@gmail.com
  Commit Date: 1720652384
  Commit Message:
    bpf: Defer work in bpf_timer_cancel_and_free

Currently
  Parent Hashes: d4523831f07a267a943f0dde844bf8ead7495f13
  Refs:  the same case as previous patch (two timer callbacks trying
to cancel each other) can be invoked through bpf_map_update_elem as
well

- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'The commit defers work in bpf_timer_cancel_and_free to handle timer callback conflicts through bpf_map_update_elem.', 'keywords': 'bpf_timer,defer,callback', 'commit_classification': "It's a bug fix.", 'commit_complexity': 'Moderate, requires some setup or understanding of the system. For example, a new map type or a new link type.', 'Major related component': 'The helper and kfuncs', 'program_types_related': ['It improves the overall eBPF infrastructure (e.g., verifier, runtime, etc.).']}
--------------------
--------------------
Processing Commit ID: d4523831f07a267a943f0dde844bf8ead7495f13
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: d4523831f07a267a943f0dde844bf8ead7495f13
  Author Name: Kumar Kartikeya Dwivedi
  Author Email: memxor@gmail.com
  Commit Date: 1720652384
  Commit Message:
    bpf: Fail bpf_timer_cancel when callback is being cancelled

Given a schedule:

timer1 cb			timer2 cb

bpf_timer_cancel(timer2);	bpf_timer_cancel(timer1);

Both bpf_timer_cancel calls would wait for the other callback to finish
executing
  Parent Hashes: af253aef183a31ce62d2e39fc520b0ebfb562bb9
  Refs:  introducing a lockup.

Add an atomic_t count named 'cancelling' in bpf_hrtimer. This keeps
track of all in-flight cancellation requests for a given BPF timer.
Whenever cancelling a BPF timer

- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'The commit addresses a race condition in bpf_timer_cancel by introducing an atomic count for cancellation requests.', 'keywords': 'bpf_timer_cancel, atomic_t count, cancellation', 'commit_classification': "It's a bug fix.", 'commit_complexity': 'Moderate, requires some setup or understanding of the system. For example, a new map type or a new link type.', 'Major related component': 'Other component related to eBPF but not listed above.', 'program_types_related': ["It's not related to any of the above."]}
--------------------
--------------------
Processing Commit ID: af253aef183a31ce62d2e39fc520b0ebfb562bb9
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: af253aef183a31ce62d2e39fc520b0ebfb562bb9
  Author Name: Mohammad Shehar Yaar Tausif
  Author Email: sheharyaar48@gmail.com
  Commit Date: 1720650679
  Commit Message:
    bpf: fix order of args in call to bpf_map_kvcalloc

The original function call passed size of smap->bucket before the number of
buckets which raises the error 'calloc-transposed-args' on compilation.

Vlastimil Babka added:

The order of parameters can be traced back all the way to 6ac99e8f23d4
("bpf: Introduce bpf sk local storage") accross several refactorings
  Parent Hashes: e1533b6319ab9c3a97dad314dd88b3783bc41b69
  Refs: 
and that's why the commit is used as a Fixes: tag.

In v6.10-rc1

- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'Fix incorrect argument order in bpf_map_kvcalloc call to resolve compilation error.', 'keywords': 'bpf, kvcalloc, fix', 'commit_classification': "It's a bug fix.", 'commit_complexity': 'Simple, can be used without much configuration. For example, a simple helper function.', 'Major related component': 'The eBPF maps', 'program_types_related': ['It improves the overall eBPF infrastructure (e.g., verifier, runtime, etc.).']}
--------------------
--------------------
Processing Commit ID: 18a8a4c88fb4c261f72a29b769c9463362d9687a
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: 18a8a4c88fb4c261f72a29b769c9463362d9687a
  Author Name: Martin KaFai Lau
  Author Email: martin.lau@kernel.org
  Commit Date: 1720640708
  Commit Message:
    Merge branch 'BPF selftests misc fixes'

Geliang Tang says:

====================
v2:
 - only check the first "link" (link_nl) in test_mixed_links().
 - Drop patch 2 in v1.

This patchset fixes a segfault and a bpf object leak in test_progs.

It is a resend patch 1 out of "skip ENOTSUPP BPF selftests" set as Eduard
suggested. Together with another fix for xdp_adjust_tail.
====================

Signed-off-by: Martin KaFai Lau <martin.lau@kernel.org>

  Parent Hashes: ec5b8c76ab1c6d163762d60cfbedcd27e7527144 52b49ec1b2c78deb258596c3b231201445ef5380
  Refs: 

- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'The commit merges fixes for BPF selftests including a segfault and a BPF object leak issue.', 'keywords': 'BPF selftests, segfault, object leak', 'commit_classification': "It's a bug fix.", 'commit_complexity': 'Simple, can be used without much configuration. For example, a simple helper function.', 'Major related component': 'The test cases and makefiles', 'program_types_related': ['xdp like programs', 'It improves the overall eBPF infrastructure (e.g., verifier, runtime, etc.).']}
--------------------
--------------------
Processing Commit ID: 52b49ec1b2c78deb258596c3b231201445ef5380
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: 52b49ec1b2c78deb258596c3b231201445ef5380
  Author Name: Geliang Tang
  Author Email: tanggeliang@kylinos.cn
  Commit Date: 1720640570
  Commit Message:
    selftests/bpf: Close obj in error path in xdp_adjust_tail

If bpf_object__load() fails in test_xdp_adjust_frags_tail_grow()
  Parent Hashes: eef0532e900c20a6760da829e82dac3ee18688c5
  Refs:  "obj"
opened before this should be closed. So use "goto out" to close it instead
of using "return" here.

Fixes: 110221081aac ("bpf: selftests: update xdp_adjust_tail selftest to include xdp frags")
Signed-off-by: Geliang Tang <tanggeliang@kylinos.cn>
Link: https://lore.kernel.org/r/f282a1ed2d0e3fb38cceefec8e81cabb69cab260.1720615848.git.tanggeliang@kylinos.cn
Signed-off-by: Martin KaFai Lau <martin.lau@kernel.org>


- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'Fixes error handling in xdp_adjust_tail selftest by ensuring proper closure of object in error path.', 'keywords': 'selftests, xdp_adjust_tail, error', 'commit_classification': "It's a bug fix.", 'commit_complexity': 'Simple, can be used without much configuration. For example, a simple helper function.', 'Major related component': 'The test cases and makefiles', 'program_types_related': ['xdp like programs']}
--------------------
--------------------
Processing Commit ID: eef0532e900c20a6760da829e82dac3ee18688c5
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: eef0532e900c20a6760da829e82dac3ee18688c5
  Author Name: Geliang Tang
  Author Email: tanggeliang@kylinos.cn
  Commit Date: 1720640118
  Commit Message:
    selftests/bpf: Null checks for links in bpf_tcp_ca

Run bpf_tcp_ca selftests (./test_progs -t bpf_tcp_ca) on a Loongarch
platform
  Parent Hashes: ec5b8c76ab1c6d163762d60cfbedcd27e7527144
  Refs:  some "Segmentation fault" errors occur:

'''
 test_dctcp:PASS:bpf_dctcp__open_and_load 0 nsec
 test_dctcp:FAIL:bpf_map__attach_struct_ops unexpected error: -524
 #29/1    bpf_tcp_ca/dctcp:FAIL
 test_cubic:PASS:bpf_cubic__open_and_load 0 nsec
 test_cubic:FAIL:bpf_map__attach_struct_ops unexpected error: -524
 #29/2    bpf_tcp_ca/cubic:FAIL
 test_dctcp_fallback:PASS:dctcp_skel 0 nsec
 test_dctcp_fallback:PASS:bpf_dctcp__load 0 nsec
 test_dctcp_fallback:FAIL:dctcp link unexpected error: -524
 #29/4    bpf_tcp_ca/dctcp_fallback:FAIL
 test_write_sk_pacing:PASS:open_and_load 0 nsec
 test_write_sk_pacing:FAIL:attach_struct_ops unexpected error: -524
 #29/6    bpf_tcp_ca/write_sk_pacing:FAIL
 test_update_ca:PASS:open 0 nsec
 test_update_ca:FAIL:attach_struct_ops unexpected error: -524
 settcpca:FAIL:setsockopt unexpected setsockopt: \
					actual -1 == expected -1
 (network_helpers.c:99: errno: No such file or directory) \
					Failed to call post_socket_cb
 start_test:FAIL:start_server_str unexpected start_server_str: \
					actual -1 == expected -1
 test_update_ca:FAIL:ca1_ca1_cnt unexpected ca1_ca1_cnt: \
					actual 0 <= expected 0
 #29/9    bpf_tcp_ca/update_ca:FAIL
 #29      bpf_tcp_ca:FAIL
 Caught signal #11!
 Stack trace:
 ./test_progs(crash_handler+0x28)[0x5555567ed91c]
 linux-vdso.so.1(__vdso_rt_sigreturn+0x0)[0x7ffffee408b0]
 ./test_progs(bpf_link__update_map+0x80)[0x555556824a78]
 ./test_progs(+0x94d68)[0x5555564c4d68]
 ./test_progs(test_bpf_tcp_ca+0xe8)[0x5555564c6a88]
 ./test_progs(+0x3bde54)[0x5555567ede54]
 ./test_progs(main+0x61c)[0x5555567efd54]
 /usr/lib64/libc.so.6(+0x22208)[0x7ffff2aaa208]
 /usr/lib64/libc.so.6(__libc_start_main+0xac)[0x7ffff2aaa30c]
 ./test_progs(_start+0x48)[0x55555646bca8]
 Segmentation fault
'''

This is because BPF trampoline is not implemented on Loongarch yet

- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'Add null checks for links in bpf_tcp_ca selftests to address segmentation faults on Loongarch platform.', 'keywords': 'null checks, segmentation fault, bpf_tcp_ca', 'commit_classification': "It's a test case or test infrastructure change.", 'commit_complexity': 'Simple, can be used without much configuration. For example, a simple helper function.', 'Major related component': 'The test cases and makefiles', 'program_types_related': ['It improves the overall eBPF infrastructure (e.g., verifier, runtime, etc.).']}
--------------------
--------------------
Processing Commit ID: 9004054b1629d481fedea2d92b880f79fc6fa81b
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: 9004054b1629d481fedea2d92b880f79fc6fa81b
  Author Name: Geliang Tang
  Author Email: tanggeliang@kylinos.cn
  Commit Date: 1720637782
  Commit Message:
    selftests/bpf: Use connect_fd_to_fd in sk_lookup

This patch uses public helper connect_fd_to_fd() exported in
network_helpers.h instead of using getsockname() + connect() in
run_lookup_prog() in prog_tests/sk_lookup.c. This can simplify
the code.

Signed-off-by: Geliang Tang <tanggeliang@kylinos.cn>
Link: https://lore.kernel.org/r/7077c277cde5a1864cdc244727162fb75c8bb9c5.1720515893.git.tanggeliang@kylinos.cn
Signed-off-by: Martin KaFai Lau <martin.lau@kernel.org>

  Parent Hashes: d9810c43f660fd502c5003244a5e9c181aa7df99
  Refs: 

- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'Simplify sk_lookup test code by using connect_fd_to_fd helper.', 'keywords': 'selftests,bpf,simplify', 'commit_classification': "It's a cleanup or refactoring in the code.", 'commit_complexity': 'Simple, can be used without much configuration. For example, a simple helper function.', 'Major related component': 'The test cases and makefiles', 'program_types_related': ['socket like programs']}
--------------------
--------------------
Processing Commit ID: d9810c43f660fd502c5003244a5e9c181aa7df99
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: d9810c43f660fd502c5003244a5e9c181aa7df99
  Author Name: Geliang Tang
  Author Email: tanggeliang@kylinos.cn
  Commit Date: 1720637782
  Commit Message:
    selftests/bpf: Use start_server_addr in sk_lookup

This patch uses public helper start_server_addr() in udp_recv_send()
in prog_tests/sk_lookup.c to simplify the code.

And use ASSERT_OK_FD() to check fd returned by start_server_addr().

Acked-by: Eduard Zingerman <eddyz87@gmail.com>
Signed-off-by: Geliang Tang <tanggeliang@kylinos.cn>
Link: https://lore.kernel.org/r/f11cabfef4a2170ecb66a1e8e2e72116d8f621b3.1720515893.git.tanggeliang@kylinos.cn
Signed-off-by: Martin KaFai Lau <martin.lau@kernel.org>

  Parent Hashes: 14fc6fcd35e7dde6d1de062b6711476b3050b22e
  Refs: 

- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'Simplify sk_lookup test using start_server_addr helper in udp_recv_send function.', 'keywords': 'selftests,bpf,start_server_addr', 'commit_classification': "It's a cleanup or refactoring in the code.", 'commit_complexity': 'Simple, can be used without much configuration. For example, a simple helper function.', 'Major related component': 'The test cases and makefiles', 'program_types_related': ['socket like programs']}
--------------------
--------------------
Processing Commit ID: 14fc6fcd35e7dde6d1de062b6711476b3050b22e
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: 14fc6fcd35e7dde6d1de062b6711476b3050b22e
  Author Name: Geliang Tang
  Author Email: tanggeliang@kylinos.cn
  Commit Date: 1720637782
  Commit Message:
    selftests/bpf: Use start_server_str in sk_lookup

This patch uses public helper start_server_str() to simplify make_server()
in prog_tests/sk_lookup.c.

Add a callback setsockopts() to do all sockopts
  Parent Hashes: adae187ebedcd95d02f045bc37dfecfd5b29434b
  Refs:  set it to post_socket_cb
pointer of struct network_helper_opts. And add a new struct cb_opts to save
the data needed to pass to the callback. Then pass this network_helper_opts
to start_server_str().

Also use ASSERT_OK_FD() to check fd returned by start_server_str().

Acked-by: Eduard Zingerman <eddyz87@gmail.com>
Signed-off-by: Geliang Tang <tanggeliang@kylinos.cn>
Link: https://lore.kernel.org/r/5981539f5591d2c4998c962ef2bf45f34c940548.1720515893.git.tanggeliang@kylinos.cn
Signed-off-by: Martin KaFai Lau <martin.lau@kernel.org>


- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'Simplified sk_lookup test by using start_server_str and added a callback for setsockopts.', 'keywords': 'sk_lookup,selftests,callback', 'commit_classification': "It's a cleanup or refactoring in the code.", 'commit_complexity': 'Moderate, requires some setup or understanding of the system. For example, a new map type or a new link type.', 'Major related component': 'The test cases and makefiles', 'program_types_related': ['xdp like programs', 'socket like programs', 'tc/netfilter like programs']}
--------------------
--------------------
Processing Commit ID: adae187ebedcd95d02f045bc37dfecfd5b29434b
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: adae187ebedcd95d02f045bc37dfecfd5b29434b
  Author Name: Geliang Tang
  Author Email: tanggeliang@kylinos.cn
  Commit Date: 1720637782
  Commit Message:
    selftests/bpf: Close fd in error path in drop_on_reuseport

In the error path when update_lookup_map() fails in drop_on_reuseport in
prog_tests/sk_lookup.c
  Parent Hashes: 7046345d48adcc3f519e7b6192184f6049908bdb
  Refs:  "server1"

- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'This commit closes a file descriptor in the error path of drop_on_reuseport in selftests/bpf.', 'keywords': 'fd, error path, drop_on_reuseport', 'commit_classification': "It's a bug fix.", 'commit_complexity': 'Simple, can be used without much configuration. For example, a simple helper function.', 'Major related component': 'The test cases and makefiles', 'program_types_related': ['It improves the overall eBPF infrastructure (e.g., verifier, runtime, etc.).']}
--------------------
--------------------
Processing Commit ID: 7046345d48adcc3f519e7b6192184f6049908bdb
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: 7046345d48adcc3f519e7b6192184f6049908bdb
  Author Name: Geliang Tang
  Author Email: tanggeliang@kylinos.cn
  Commit Date: 1720637782
  Commit Message:
    selftests/bpf: Add ASSERT_OK_FD macro

Add a new dedicated ASSERT macro ASSERT_OK_FD to test whether a socket
FD is valid or not. It can be used to replace macros ASSERT_GT(fd
  Parent Hashes: a3016a27cea8e6d10b200b9e19c19961c402d106
  Refs:  0

- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'Add ASSERT_OK_FD macro to validate socket file descriptors in BPF selftests.', 'keywords': 'ASSERT_OK_FD,socket FD,selftests', 'commit_classification': "It's a test case or test infrastructure change.", 'commit_complexity': 'Simple, can be used without much configuration. For example, a simple helper function.', 'Major related component': 'The test cases and makefiles', 'program_types_related': ["It's not related to any of the above."]}
--------------------
--------------------
Processing Commit ID: a3016a27cea8e6d10b200b9e19c19961c402d106
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: a3016a27cea8e6d10b200b9e19c19961c402d106
  Author Name: Geliang Tang
  Author Email: tanggeliang@kylinos.cn
  Commit Date: 1720637782
  Commit Message:
    selftests/bpf: Add backlog for network_helper_opts

Some callers expect __start_server() helper to pass their own "backlog"
value to listen() instead of the default of 1. So this patch adds struct
member "backlog" for network_helper_opts to allow callers to set "backlog"
value via start_server_str() helper.

listen(fd
  Parent Hashes: eeb23b54e447ea62b247d89681f0140abab00d7f
  Refs:  0 /* backlog */) can be used to enforce syncookie. Meaning
backlog 0 is a legit value.

Using 0 as a default and changing it to 1 here is fine. It makes the test
program easier to write for the common case. Enforcing syncookie mode by
using backlog 0 is a niche use case but it should at least have a way for
the caller to do that. Thus

- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': "Add 'backlog' member to network_helper_opts to allow custom 'backlog' settings via start_server_str() helper in selftests.", 'keywords': 'selftests,backlog,network_helper_opts', 'commit_classification': "It's a test case or test infrastructure change.", 'commit_complexity': 'Simple, can be used without much configuration. For example, a simple helper function.', 'Major related component': 'The test cases and makefiles', 'program_types_related': ["It's not related to any of the above."]}
--------------------
--------------------
Processing Commit ID: eeb23b54e447ea62b247d89681f0140abab00d7f
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: eeb23b54e447ea62b247d89681f0140abab00d7f
  Author Name: Alan Maguire
  Author Email: alan.maguire@oracle.com
  Commit Date: 1720636787
  Commit Message:
    selftests/bpf: fix compilation failure when CONFIG_NF_FLOW_TABLE=m

In many cases
  Parent Hashes: c13fda93aca118b8e5cd202e339046728ee7dddb
  Refs:  kernel netfilter functionality is built as modules.
If CONFIG_NF_FLOW_TABLE=m in particular

- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'Fixed compilation issue for selftests when CONFIG_NF_FLOW_TABLE is modular.', 'keywords': 'compilation, selftests, fix', 'commit_classification': "It's a bug fix.", 'commit_complexity': 'Simple, can be used without much configuration. For example, a simple helper function.', 'Major related component': 'The test cases and makefiles', 'program_types_related': ['It improves the overall eBPF infrastructure (e.g., verifier, runtime, etc.).']}
--------------------
--------------------
Processing Commit ID: c13fda93aca118b8e5cd202e339046728ee7dddb
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: c13fda93aca118b8e5cd202e339046728ee7dddb
  Author Name: Sebastian Andrzej Siewior
  Author Email: bigeasy@linutronix.de
  Commit Date: 1720630732
  Commit Message:
    bpf: Remove tst_run from lwt_seg6local_prog_ops.

The syzbot reported that the lwt_seg6 related BPF ops can be invoked
via bpf_test_run() without without entering input_action_end_bpf()
first.

Martin KaFai Lau said that self test for BPF_PROG_TYPE_LWT_SEG6LOCAL
probably didn't work since it was introduced in commit 04d4b274e2a
("ipv6: sr: Add seg6local action End.BPF"). The reason is that the
per-CPU variable seg6_bpf_srh_states::srh is never assigned in the self
test case but each BPF function expects it.

Remove test_run for BPF_PROG_TYPE_LWT_SEG6LOCAL.

Suggested-by: Martin KaFai Lau <martin.lau@linux.dev>
Reported-by: syzbot+608a2acde8c5a101d07d@syzkaller.appspotmail.com
Fixes: d1542d4ae4df ("seg6: Use nested-BH locking for seg6_bpf_srh_states.")
Fixes: 004d4b274e2a ("ipv6: sr: Add seg6local action End.BPF")
Signed-off-by: Sebastian Andrzej Siewior <bigeasy@linutronix.de>
Acked-by: Daniel Borkmann <daniel@iogearbox.net>
Link: https://lore.kernel.org/r/20240710141631.FbmHcQaX@linutronix.de
Signed-off-by: Martin KaFai Lau <martin.lau@kernel.org>

  Parent Hashes: 605c96997d89c01c11bbddb4db820ede570581c7
  Refs: 

- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'Remove unsupported test run from lwt_seg6local BPF ops due to missing initialization.', 'keywords': 'lwt_seg6local,BPF,remove', 'commit_classification': "It's a bug fix.", 'commit_complexity': 'Moderate, requires some setup or understanding of the system. For example, a new map type or a new link type.', 'Major related component': 'Other component related to eBPF but not listed above.', 'program_types_related': ["It's not related to any of the above."]}
--------------------
--------------------
Processing Commit ID: 0dd0e9437f8e500a384f12ec16bb407a49676147
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: 0dd0e9437f8e500a384f12ec16bb407a49676147
  Author Name: Arnd Bergmann
  Author Email: arnd@arndb.de
  Commit Date: 1720614210
  Commit Message:
    um: don't generate asm/bpf_perf_event.h

If we start validating the existence of the asm-generic side of
generated headers
  Parent Hashes: ed8023ae9d79eeebf694751d5c290b72ef871dc0
  Refs:  this one causes a warning:

make[3]: *** No rule to make target 'arch/um/include/generated/asm/bpf_perf_event.h'

- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'Prevent generation of asm/bpf_perf_event.h to avoid build errors in User Mode Linux.', 'keywords': 'generate, bpf_perf_event, warning', 'commit_classification': "It's a bug fix.", 'commit_complexity': 'Simple, can be used without much configuration. For example, a simple helper function.', 'Major related component': 'Other component related to eBPF but not listed above.', 'program_types_related': ["It's not related to any of the above."]}
--------------------
--------------------
Processing Commit ID: 605c96997d89c01c11bbddb4db820ede570581c7
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: 605c96997d89c01c11bbddb4db820ede570581c7
  Author Name: Matt Bobrowski
  Author Email: mattbobrowski@google.com
  Commit Date: 1720577507
  Commit Message:
    bpf: relax zero fixed offset constraint on KF_TRUSTED_ARGS/KF_RCU

Currently
  Parent Hashes: 02779af2419a91f847c22e488f8d13ec301cf833
  Refs:  BPF kfuncs which accept trusted pointer arguments
i.e. those flagged as KF_TRUSTED_ARGS

- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'The commit relaxes the zero fixed offset constraint on KF_TRUSTED_ARGS and KF_RCU in eBPF kfuncs.', 'keywords': 'KF_TRUSTED_ARGS,KF_RCU,eBPF', 'commit_classification': "It's a cleanup or refactoring in the code.", 'commit_complexity': 'Moderate, requires some setup or understanding of the system. For example, a new map type or a new link type.', 'Major related component': 'The helper and kfuncs', 'program_types_related': ['It improves the overall eBPF infrastructure (e.g., verifier, runtime, etc.).']}
--------------------
--------------------
Processing Commit ID: 02779af2419a91f847c22e488f8d13ec301cf833
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: 02779af2419a91f847c22e488f8d13ec301cf833
  Author Name: Alexei Starovoitov
  Author Email: ast@kernel.org
  Commit Date: 1720577016
  Commit Message:
    Merge branch 'fix-libbpf-bpf-skeleton-forward-backward-compat'

Andrii Nakryiko says:

====================
Fix libbpf BPF skeleton forward/backward compat

Fix recently identified (but long standing) bug with handling BPF skeleton
forward and backward compatibility. On libbpf side
  Parent Hashes: 746d684ea579927015cde53cff8fc365caaf93b7 a459f4bb27f2e2730039c57786b82288742c8c74
  Refs:  even though BPF skeleton
was always designed to be forward and backwards compatible through recording
actual size of constrituents of BPF skeleton itself (map/prog/var skeleton
definitions)

- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'Fixes a bug in libbpf for BPF skeleton forward and backward compatibility.', 'keywords': 'libbpf, BPF skeleton, compatibility', 'commit_classification': "It's a bug fix.", 'commit_complexity': 'Moderate, requires some setup or understanding of the system. For example, a new map type or a new link type.', 'Major related component': 'The libbpf library', 'program_types_related': ['It improves the overall eBPF infrastructure (e.g., verifier, runtime, etc.).']}
--------------------
--------------------
Processing Commit ID: a459f4bb27f2e2730039c57786b82288742c8c74
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: a459f4bb27f2e2730039c57786b82288742c8c74
  Author Name: Andrii Nakryiko
  Author Email: andrii@kernel.org
  Commit Date: 1720577016
  Commit Message:
    libbpf: improve old BPF skeleton handling for map auto-attach

Improve how we handle old BPF skeletons when it comes to BPF map
auto-attachment. Emit one warn-level message per each struct_ops map
that could have been auto-attached
  Parent Hashes: 99fb9531886d8ffa0aa9a693089784c7338518a3
  Refs:  if user provided recent enough BPF
skeleton version. Don't spam log if there are no relevant struct_ops
maps

- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'Improved handling of old BPF skeletons for map auto-attachment in libbpf.', 'keywords': 'libbpf, BPF skeleton, auto-attachment', 'commit_classification': "It's a cleanup or refactoring in the code.", 'commit_complexity': 'Moderate, requires some setup or understanding of the system. For example, a new map type or a new link type.', 'Major related component': 'The libbpf library', 'program_types_related': ['tc/netfilter like programs', 'tracepoints like programs', 'It improves the overall eBPF infrastructure (e.g., verifier, runtime, etc.).']}
--------------------
--------------------
Processing Commit ID: 99fb9531886d8ffa0aa9a693089784c7338518a3
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: 99fb9531886d8ffa0aa9a693089784c7338518a3
  Author Name: Andrii Nakryiko
  Author Email: andrii@kernel.org
  Commit Date: 1720577004
  Commit Message:
    libbpf: fix BPF skeleton forward/backward compat handling

BPF skeleton was designed from day one to be extensible. Generated BPF
skeleton code specifies actual sizes of map/prog/variable skeletons for
that reason and libbpf is supposed to work with newer/older versions
correctly.

Unfortunately
  Parent Hashes: 06e71ad534881d2a09ced7509d2ab0daedac4c96
  Refs:  it was missed that we implicitly embed hard-coded most
up-to-date (according to libbpf's version of libbpf.h header used to
compile BPF skeleton header) sizes of those structs

- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'Fix forward and backward compatibility handling in libbpf BPF skeleton structures.', 'keywords': 'libbpf, BPF skeleton, compatibility', 'commit_classification': "It's a bug fix.", 'commit_complexity': 'Moderate, requires some setup or understanding of the system. For example, a new map type or a new link type.', 'Major related component': 'The libbpf library', 'program_types_related': ['It improves the overall eBPF infrastructure (e.g., verifier, runtime, etc.).']}
--------------------
--------------------
Processing Commit ID: 06e71ad534881d2a09ced7509d2ab0daedac4c96
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: 06e71ad534881d2a09ced7509d2ab0daedac4c96
  Author Name: Andrii Nakryiko
  Author Email: andrii@kernel.org
  Commit Date: 1720576985
  Commit Message:
    bpftool: improve skeleton backwards compat with old buggy libbpfs

Old versions of libbpf don't handle varying sizes of bpf_map_skeleton
struct correctly. As such
  Parent Hashes: 746d684ea579927015cde53cff8fc365caaf93b7
  Refs:  BPF skeleton generated by newest bpftool
might not be compatible with older libbpf (though only when libbpf is
used as a shared library)

- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'Enhanced bpftool to improve compatibility with older, buggy versions of libbpf.', 'keywords': 'bpftool, compatibility, libbpf', 'commit_classification': "It's a bug fix.", 'commit_complexity': 'Moderate, requires some setup or understanding of the system. For example, a new map type or a new link type.', 'Major related component': 'The bpftool utility', 'program_types_related': ['It improves the overall eBPF infrastructure (e.g., verifier, runtime, etc.).']}
--------------------
--------------------
Processing Commit ID: 01fc5142ae6b06b61ed51a624f2732d6525d8ea3
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: 01fc5142ae6b06b61ed51a624f2732d6525d8ea3
  Author Name: Michal Kubiak
  Author Email: michal.kubiak@intel.com
  Commit Date: 1720574714
  Commit Message:
    i40e: Fix XDP program unloading while removing the driver

The commit 6533e558c650 ("i40e: Fix reset path while removing
the driver") introduced a new PF state "__I40E_IN_REMOVE" to block
modifying the XDP program while the driver is being removed.
Unfortunately
  Parent Hashes: f153831097b4435f963e385304cc0f1acba1c657
  Refs:  such a change is useful only if the ".ndo_bpf()"
callback was called out of the rmmod context because unloading the
existing XDP program is also a part of driver removing procedure.
In other words

- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'Fixes issue with XDP program unloading during i40e driver removal process.', 'keywords': 'i40e,XDP,driver', 'commit_classification': "It's a bug fix.", 'commit_complexity': 'Moderate, requires some setup or understanding of the system. For example, a new map type or a new link type.', 'Major related component': 'Other component related to eBPF but not listed above.', 'program_types_related': ['xdp like programs']}
--------------------
--------------------
Processing Commit ID: 7b769adc2612b495d94a4b4537ffaa725861d763
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: 7b769adc2612b495d94a4b4537ffaa725861d763
  Author Name: Paolo Abeni
  Author Email: pabeni@redhat.com
  Commit Date: 1720537306
  Commit Message:
    Merge tag 'for-netdev' of https://git.kernel.org/pub/scm/linux/kernel/git/bpf/bpf-next

Daniel Borkmann says:

====================
pull-request: bpf-next 2024-07-08

The following pull-request contains BPF updates for your *net-next* tree.

We've added 102 non-merge commits during the last 28 day(s) which contain
a total of 127 files changed
  Parent Hashes: 870a1dbcbc2ebd2114d5f18bb0bd88a7ff07540f 90dc946059b7d346f077b870a8d8aaf03b4d0772
  Refs:  4606 insertions(+)

- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': "Merge multiple updates from the 'bpf-next' branch into the 'net-next' tree.", 'keywords': 'merge, bpf-next, updates', 'commit_classification': "It's other type of commit.", 'commit_complexity': "Complex, needs expert knowledge or significant changes to existing systems. Like adding a completely new subsystem support or a completely new program type don't exist before.", 'Major related component': 'Other component related to eBPF but not listed above.', 'program_types_related': ['It improves the overall eBPF infrastructure (e.g., verifier, runtime, etc.).']}
--------------------
--------------------
Processing Commit ID: 528269fe117f3b19461733a0fa408c55a5270aff
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: 528269fe117f3b19461733a0fa408c55a5270aff
  Author Name: Paolo Abeni
  Author Email: pabeni@redhat.com
  Commit Date: 1720534916
  Commit Message:
    Merge tag 'for-netdev' of https://git.kernel.org/pub/scm/linux/kernel/git/bpf/bpf

Daniel Borkmann says:

====================
pull-request: bpf 2024-07-09

The following pull-request contains BPF updates for your *net* tree.

We've added 3 non-merge commits during the last 1 day(s) which contain
a total of 5 files changed
  Parent Hashes: 0913ec336a6c0c4a2b296bd9f74f8e41c4c83c8c f0c18025693707ec344a70b6887f7450bf4c826b
  Refs:  81 insertions(+)

- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'This commit merges BPF updates into the netdev tree.', 'keywords': 'merge, BPF, netdev', 'commit_classification': "It's other type of commit.", 'commit_complexity': 'Simple, can be used without much configuration. For example, a simple helper function.', 'Major related component': 'Other component related to eBPF but not listed above.', 'program_types_related': ["It's not related to any of the above."]}
--------------------
--------------------
Processing Commit ID: f0c18025693707ec344a70b6887f7450bf4c826b
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: f0c18025693707ec344a70b6887f7450bf4c826b
  Author Name: Geliang Tang
  Author Email: tanggeliang@kylinos.cn
  Commit Date: 1720513490
  Commit Message:
    skmsg: Skip zero length skb in sk_msg_recvmsg

When running BPF selftests (./test_progs -t sockmap_basic) on a Loongarch
platform
  Parent Hashes: 5f1d18de79180deac2822c93e431bbe547f7d3ce
  Refs:  the following kernel panic occurs:

  [...]
  Oops[#1]:
  CPU: 22 PID: 2824 Comm: test_progs Tainted: G           OE  6.10.0-rc2+ #18
  Hardware name: LOONGSON Dabieshan/Loongson-TC542F0

- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'The commit fixes a kernel panic by skipping zero-length skb in sk_msg_recvmsg on Loongarch platform.', 'keywords': 'skmsg, zero length, kernel panic', 'commit_classification': "It's a bug fix.", 'commit_complexity': 'Simple, can be used without much configuration. For example, a simple helper function.', 'Major related component': 'Other component related to eBPF but not listed above.', 'program_types_related': ['socket like programs']}
--------------------
--------------------
Processing Commit ID: 5f1d18de79180deac2822c93e431bbe547f7d3ce
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: 5f1d18de79180deac2822c93e431bbe547f7d3ce
  Author Name: Daniel Borkmann
  Author Email: daniel@iogearbox.net
  Commit Date: 1720472851
  Commit Message:
    selftests/bpf: Extend tcx tests to cover late tcx_entry release

Add a test case which replaces an active ingress qdisc while keeping the
miniq in-tact during the transition period to the new clsact qdisc.

  # ./vmtest.sh -- ./test_progs -t tc_link
  [...]
  ./test_progs -t tc_link
  [    3.412871] bpf_testmod: loading out-of-tree module taints kernel.
  [    3.413343] bpf_testmod: module verification failed: signature and/or required key missing - tainting kernel
  #332     tc_links_after:OK
  #333     tc_links_append:OK
  #334     tc_links_basic:OK
  #335     tc_links_before:OK
  #336     tc_links_chain_classic:OK
  #337     tc_links_chain_mixed:OK
  #338     tc_links_dev_chain0:OK
  #339     tc_links_dev_cleanup:OK
  #340     tc_links_dev_mixed:OK
  #341     tc_links_ingress:OK
  #342     tc_links_invalid:OK
  #343     tc_links_prepend:OK
  #344     tc_links_replace:OK
  #345     tc_links_revision:OK
  Summary: 14/0 PASSED
  Parent Hashes: 1cb6f0bae50441f4b4b32a28315853b279c7404e
  Refs:  0 SKIPPED

- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'Extend selftests for tcx to ensure correct release during ingress qdisc replacement.', 'keywords': 'tcx tests, ingress qdisc, test case', 'commit_classification': "It's a test case or test infrastructure change.", 'commit_complexity': 'Moderate, requires some setup or understanding of the system. For example, a new map type or a new link type.', 'Major related component': 'The test cases and makefiles', 'program_types_related': ['tc/netfilter like programs']}
--------------------
--------------------
Processing Commit ID: 1cb6f0bae50441f4b4b32a28315853b279c7404e
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: 1cb6f0bae50441f4b4b32a28315853b279c7404e
  Author Name: Daniel Borkmann
  Author Email: daniel@iogearbox.net
  Commit Date: 1720472851
  Commit Message:
    bpf: Fix too early release of tcx_entry

Pedro Pinto and later independently also Hyunwoo Kim and Wongi Lee reported
an issue that the tcx_entry can be released too early leading to a use
after free (UAF) when an active old-style ingress or clsact qdisc with a
shared tc block is later replaced by another ingress or clsact instance.

Essentially
  Parent Hashes: 83c36e7cfd74e41a5c145640dba581b38f12aa15
  Refs:  the sequence to trigger the UAF (one example) can be as follows:

  1. A network namespace is created
  2. An ingress qdisc is created. This allocates a tcx_entry

- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'Fixes an issue with premature release of tcx_entry causing use-after-free in tc block handling.', 'keywords': 'tcx_entry,use-after-free,ingress', 'commit_classification': "It's a bug fix.", 'commit_complexity': 'Moderate, requires some setup or understanding of the system. For example, a new map type or a new link type.', 'Major related component': 'The attach events and bpf link. e.g. perf events, tracepoints, etc.', 'program_types_related': ['tc/netfilter like programs']}
--------------------
--------------------
Processing Commit ID: 90dc946059b7d346f077b870a8d8aaf03b4d0772
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: 90dc946059b7d346f077b870a8d8aaf03b4d0772
  Author Name: Puranjay Mohan
  Author Email: puranjay@kernel.org
  Commit Date: 1720470294
  Commit Message:
    selftests/bpf: DENYLIST.aarch64: Remove fexit_sleep

fexit_sleep test runs successfully now on the BPF CI so remove it
from the deny list. ftrace direct calls was blocking tracing programs
on arm64 but it has been resolved by now. For more details see also
discussion in [*].

Signed-off-by: Puranjay Mohan <puranjay@kernel.org>
Signed-off-by: Daniel Borkmann <daniel@iogearbox.net>
Link: https://lore.kernel.org/bpf/20240705145009.32340-1-puranjay@kernel.org [*]

  Parent Hashes: 06507c7536f747867d6d83d605af6bd753fec6d3
  Refs: 

- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'Remove fexit_sleep from the deny list as it now runs successfully on arm64 after ftrace direct calls issue resolved.', 'keywords': 'fexit_sleep,denylist,arm64', 'commit_classification': "It's a test case or test infrastructure change.", 'commit_complexity': 'Simple, can be used without much configuration. For example, a simple helper function.', 'Major related component': 'The test cases and makefiles', 'program_types_related': ['tracepoints like programs', 'kprobe/uprobe/ftrace like programs', 'It improves the overall eBPF infrastructure (e.g., verifier, runtime, etc.).']}
--------------------
--------------------
Processing Commit ID: 06507c7536f747867d6d83d605af6bd753fec6d3
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: 06507c7536f747867d6d83d605af6bd753fec6d3
  Author Name: Alexei Starovoitov
  Author Email: ast@kernel.org
  Commit Date: 1720458108
  Commit Message:
    Merge branch 'small-api-fix-for-bpf_wq'

Benjamin Tissoires says:

====================
Small API fix for bpf_wq

I realized this while having a map containing both a struct bpf_timer and
a struct bpf_wq: the third argument provided to the bpf_wq callback is
not the struct bpf_wq pointer itself
  Parent Hashes: cedc12c5b57f7efa6dbebfb2b140e8675f5a2616 16e86f2e8199cdb8789573c8784eb5c1cd478f13
  Refs:  but the pointer to the value in
the map.

Which means that the users need to double cast the provided "value" as
this is not a struct bpf_wq *.

This is a change of API

- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'Fix for bpf_wq API to correctly handle callback arguments.', 'keywords': 'API, bpf_wq, fix', 'commit_classification': "It's a bug fix.", 'commit_complexity': 'Simple, can be used without much configuration. For example, a simple helper function.', 'Major related component': 'The helper and kfuncs', 'program_types_related': ['other']}
--------------------
--------------------
Processing Commit ID: 16e86f2e8199cdb8789573c8784eb5c1cd478f13
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: 16e86f2e8199cdb8789573c8784eb5c1cd478f13
  Author Name: Benjamin Tissoires
  Author Email: bentiss@kernel.org
  Commit Date: 1720458108
  Commit Message:
    selftests/bpf: amend for wrong bpf_wq_set_callback_impl signature

See the previous patch: the API was wrong
  Parent Hashes: f56f4d541eab1ae060a46b56dd6ec9130d6e3a98
  Refs:  we were provided the pointer
to the value

- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'Fix the selftests for bpf by amending the incorrect bpf_wq_set_callback_impl signature.', 'keywords': 'selftests, signature, amend', 'commit_classification': "It's a bug fix.", 'commit_complexity': 'Simple, can be used without much configuration. For example, a simple helper function.', 'Major related component': 'The test cases and makefiles', 'program_types_related': ['It improves the overall eBPF infrastructure (e.g., verifier, runtime, etc.).']}
--------------------
--------------------
Processing Commit ID: f56f4d541eab1ae060a46b56dd6ec9130d6e3a98
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: f56f4d541eab1ae060a46b56dd6ec9130d6e3a98
  Author Name: Benjamin Tissoires
  Author Email: bentiss@kernel.org
  Commit Date: 1720458108
  Commit Message:
    bpf: helpers: fix bpf_wq_set_callback_impl signature

I realized this while having a map containing both a struct bpf_timer and
a struct bpf_wq: the third argument provided to the bpf_wq callback is
not the struct bpf_wq pointer itself
  Parent Hashes: cedc12c5b57f7efa6dbebfb2b140e8675f5a2616
  Refs:  but the pointer to the value in
the map.

Which means that the users need to double cast the provided "value" as
this is not a struct bpf_wq *.

This is a change of API

- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'Fixes the bpf_wq_set_callback_impl signature to correct argument handling for bpf_wq callbacks.', 'keywords': 'bpf_wq, callback, API change', 'commit_classification': "It's a bug fix.", 'commit_complexity': 'Simple, can be used without much configuration. For example, a simple helper function.', 'Major related component': 'The helper and kfuncs', 'program_types_related': ['It improves the overall eBPF infrastructure (e.g., verifier, runtime, etc.).']}
--------------------
--------------------
Processing Commit ID: cedc12c5b57f7efa6dbebfb2b140e8675f5a2616
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: cedc12c5b57f7efa6dbebfb2b140e8675f5a2616
  Author Name: Andreas Ziegler
  Author Email: ziegler.andreas@siemens.com
  Commit Date: 1720455187
  Commit Message:
    libbpf: Add NULL checks to bpf_object__{prev_map
  Parent Hashes: 02480fe8a6a6d44c16900b1d3a2a66d140d0a005
  Refs: next_map}

In the current state

- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'Add NULL checks to bpf_object__prev_map and bpf_object__next_map functions in libbpf.', 'keywords': 'NULL checks, libbpf, functions', 'commit_classification': "It's a bug fix.", 'commit_complexity': 'Simple, can be used without much configuration. For example, a simple helper function.', 'Major related component': 'The libbpf library', 'program_types_related': ['It improves the overall eBPF infrastructure (e.g., verifier, runtime, etc.).']}
--------------------
--------------------
Processing Commit ID: 02480fe8a6a6d44c16900b1d3a2a66d140d0a005
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: 02480fe8a6a6d44c16900b1d3a2a66d140d0a005
  Author Name: Ilya Leoshkevich
  Author Email: iii@linux.ibm.com
  Commit Date: 1720449575
  Commit Message:
    selftests/bpf: Remove exceptions tests from DENYLIST.s390x

Now that the s390x JIT supports exceptions
  Parent Hashes: fa7bd4b000a7ae32eb6fc049125943561e5b46f3
  Refs:  remove the respective tests
from the denylist.

Signed-off-by: Ilya Leoshkevich <iii@linux.ibm.com>
Signed-off-by: Daniel Borkmann <daniel@iogearbox.net>
Link: https://lore.kernel.org/bpf/20240703005047.40915-4-iii@linux.ibm.com


- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'Remove exception tests from s390x DENYLIST due to improved JIT support.', 'keywords': 'exceptions,JIT,DENYLIST', 'commit_classification': "It's a test case or test infrastructure change.", 'commit_complexity': 'Simple, can be used without much configuration. For example, a simple helper function.', 'Major related component': 'The test cases and makefiles', 'program_types_related': ['It improves the overall eBPF infrastructure (e.g., verifier, runtime, etc.).']}
--------------------
--------------------
Processing Commit ID: fa7bd4b000a7ae32eb6fc049125943561e5b46f3
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: fa7bd4b000a7ae32eb6fc049125943561e5b46f3
  Author Name: Ilya Leoshkevich
  Author Email: iii@linux.ibm.com
  Commit Date: 1720449575
  Commit Message:
    s390/bpf: Implement exceptions

Implement the following three pieces required from the JIT:

- A "top-level" BPF prog (exception_boundary) must save all
  non-volatile registers
  Parent Hashes: 7ba4f43e16de351fe9821de80e15d88c884b2967
  Refs:  and not only the ones that it clobbers.
- A "handler" BPF prog (exception_cb) must switch stack to that of
  exception_boundary

- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'This commit implements exceptions for s390 architecture in the BPF JIT compiler.', 'keywords': 's390, exceptions, JIT', 'commit_classification': "It's a new feature.", 'commit_complexity': "Complex, needs expert knowledge or significant changes to existing systems. Like adding a completely new subsystem support or a completely new program type don't exist before.", 'Major related component': 'The JIT compiler', 'program_types_related': ['It improves the overall eBPF infrastructure (e.g., verifier, runtime, etc.).']}
--------------------
--------------------
Processing Commit ID: 7ba4f43e16de351fe9821de80e15d88c884b2967
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: 7ba4f43e16de351fe9821de80e15d88c884b2967
  Author Name: Ilya Leoshkevich
  Author Email: iii@linux.ibm.com
  Commit Date: 1720449575
  Commit Message:
    s390/bpf: Change seen_reg to a mask

Using a mask instead of an array saves a small amount of memory and
allows marking multiple registers as seen with a simple "or". Another
positive side-effect is that it speeds up verification with jitterbug.

Signed-off-by: Ilya Leoshkevich <iii@linux.ibm.com>
Signed-off-by: Daniel Borkmann <daniel@iogearbox.net>
Link: https://lore.kernel.org/bpf/20240703005047.40915-2-iii@linux.ibm.com

  Parent Hashes: bc239eb271e5f35fcade689c6782c962ef3704c8
  Refs: 

- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'Optimization of register handling in s390 architecture by using a mask instead of an array.', 'keywords': 's390,bpf,mask', 'commit_classification': "It's a performance optimization.", 'commit_complexity': 'Moderate, requires some setup or understanding of the system. For example, a new map type or a new link type.', 'Major related component': 'The eBPF verifier', 'program_types_related': ['It improves the overall eBPF infrastructure (e.g., verifier, runtime, etc.).']}
--------------------
--------------------
Processing Commit ID: bc239eb271e5f35fcade689c6782c962ef3704c8
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: bc239eb271e5f35fcade689c6782c962ef3704c8
  Author Name: Dan Carpenter
  Author Email: dan.carpenter@linaro.org
  Commit Date: 1720448599
  Commit Message:
    bpf: Remove unnecessary loop in task_file_seq_get_next()

After commit 0ede61d8589c ("file: convert to SLAB_TYPESAFE_BY_RCU") this
loop always iterates exactly one time.  Delete the for statement and pull
the code in a tab.

Signed-off-by: Dan Carpenter <dan.carpenter@linaro.org>
Signed-off-by: Daniel Borkmann <daniel@iogearbox.net>
Reviewed-by: Christian Brauner <brauner@kernel.org>
Acked-by: Jiri Olsa <jolsa@kernel.org>
Acked-by: Yonghong Song <yonghong.song@linux.dev>
Link: https://lore.kernel.org/bpf/ZoWJF51D4zWb6f5t@stanley.mountain

  Parent Hashes: a5912c37faf723c0812a6a2c9dd18ffbd34a233b
  Refs: 

- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'The commit removes an unnecessary loop in the task_file_seq_get_next function after a previous update.', 'keywords': 'remove, unnecessary, loop', 'commit_classification': "It's a cleanup or refactoring in the code.", 'commit_complexity': 'Simple, can be used without much configuration. For example, a simple helper function.', 'Major related component': 'Other component related to eBPF but not listed above.', 'program_types_related': ["It's not related to any of the above."]}
--------------------
--------------------
Processing Commit ID: a5912c37faf723c0812a6a2c9dd18ffbd34a233b
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: a5912c37faf723c0812a6a2c9dd18ffbd34a233b
  Author Name: Puranjay Mohan
  Author Email: puranjay@kernel.org
  Commit Date: 1720446248
  Commit Message:
    riscv
  Parent Hashes: fd8db07705c55a995c42b1e71afc42faad675b0b
  Refs:  bpf: Optimize stack usage of trampoline

When BPF_TRAMP_F_CALL_ORIG is not set

- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'Optimize stack usage of BPF trampoline when BPF_TRAMP_F_CALL_ORIG is not set.', 'keywords': 'optimize, stack, trampoline', 'commit_classification': "It's a performance optimization.", 'commit_complexity': 'Moderate, requires some setup or understanding of the system. For example, a new map type or a new link type.', 'Major related component': 'The eBPF verifier', 'program_types_related': ['It improves the overall eBPF infrastructure (e.g., verifier, runtime, etc.).']}
--------------------
--------------------
Processing Commit ID: fecef4cd42c689a200bdd39e6fffa71475904bc1
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: fecef4cd42c689a200bdd39e6fffa71475904bc1
  Author Name: Sebastian Andrzej Siewior
  Author Email: bigeasy@linutronix.de
  Commit Date: 1720223977
  Commit Message:
    tun: Assign missing bpf_net_context.

During the introduction of struct bpf_net_context handling for
XDP-redirect
  Parent Hashes: 3b2aef99221d395ce37efa426d7b50e7dcd621d6
  Refs:  the tun driver has been missed.
Jakub also pointed out that there is another call chain to
do_xdp_generic() originating from netif_receive_skb() and drivers may
use it outside from the NAPI context.

Set the bpf_net_context before invoking BPF XDP program within the TUN
driver. Set the bpf_net_context also in do_xdp_generic() if a xdp
program is available.

Reported-by: syzbot+0b5c75599f1d872bea6f@syzkaller.appspotmail.com
Reported-by: syzbot+5ae46b237278e2369cac@syzkaller.appspotmail.com
Reported-by: syzbot+c1e04a422bbc0f0f2921@syzkaller.appspotmail.com
Fixes: 401cb7dae8130 ("net: Reference bpf_redirect_info via task_struct on PREEMPT_RT.")
Signed-off-by: Sebastian Andrzej Siewior <bigeasy@linutronix.de>
Link: https://patch.msgid.link/20240704144815.j8xQda5r@linutronix.de
Signed-off-by: Jakub Kicinski <kuba@kernel.org>


- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'Assign missing bpf_net_context to the TUN driver for handling XDP-redirect use cases.', 'keywords': 'bpf_net_context,XDP-redirect,TUN driver', 'commit_classification': "It's a bug fix.", 'commit_complexity': 'Moderate, requires some setup or understanding of the system. For example, a new map type or a new link type.', 'Major related component': 'The attach events and bpf link. e.g. perf events, tracepoints, etc.', 'program_types_related': ['xdp like programs']}
--------------------
--------------------
Processing Commit ID: a67a1deb11d9a692366100d9ba9fb3aeb0c7707b
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: a67a1deb11d9a692366100d9ba9fb3aeb0c7707b
  Author Name: Benjamin Tissoires
  Author Email: bentiss@kernel.org
  Commit Date: 1720181311
  Commit Message:
    HID: samples: fix the 2 struct_ops definitions

Turns out that this is not compiling anymore because the hid_bpf_ops
struct_ops definition had a change during the revisions.

Fixes: e342d6f6f7d8 ("HID: samples: convert the 2 HID-BPF samples into struct_ops")
Signed-off-by: Benjamin Tissoires <bentiss@kernel.org>

  Parent Hashes: 3a904d2c771115154380caaae7ffaaf0095fb88f
  Refs: 

- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'Fix the struct_ops definitions in HID samples for compilation issues.', 'keywords': 'HID,struct_ops,fix', 'commit_classification': "It's a bug fix.", 'commit_complexity': 'Simple, can be used without much configuration. For example, a simple helper function.', 'Major related component': 'The attach events and bpf link. e.g. perf events, tracepoints, etc.', 'program_types_related': ['HID driver like programs']}
--------------------
--------------------
Processing Commit ID: 3a904d2c771115154380caaae7ffaaf0095fb88f
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: 3a904d2c771115154380caaae7ffaaf0095fb88f
  Author Name: Benjamin Tissoires
  Author Email: bentiss@kernel.org
  Commit Date: 1720181226
  Commit Message:
    HID: fix for amples in for-6.11/bpf

To: Jiri Kosina <jikos@kernel.org>
Cc: linux-input@vger.kernel.org
Cc: linux-kernel@vger.kernel.org
Signed-off-by: Benjamin Tissoires <bentiss@kernel.org>

---
Changes in v2:
- EDITME: describe what is new in this series revision.
- EDITME: use bulletpoints and terse descriptions.
- Link to v1: https://lore.kernel.org/r/20240705-for-6-11-bpf-v1-1-1960e3165c9e@kernel.org



--- b4-submit-tracking ---
# This section is used internally by b4 prep for tracking purposes.
{
  "series": {
    "revision": 2
  Parent Hashes: f58e7f404da44c94e46bfe657b8707195aebd25a
  Refs: 
    "change-id": "20240705-for-6-11-bpf-a349efc08df8"

- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'Fixes HID driver issues in the BPF subsystem for version 6.11.', 'keywords': 'HID, fix, BPF', 'commit_classification': "It's a bug fix.", 'commit_complexity': 'Simple, can be used without much configuration. For example, a simple helper function.', 'Major related component': 'Other component related to eBPF but not listed above.', 'program_types_related': ['HID driver like programs']}
--------------------
--------------------
Processing Commit ID: 3577dbb192419e37b6f54aced8777b6c81cd03d4
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: 3577dbb192419e37b6f54aced8777b6c81cd03d4
  Author Name: Mateusz Guzik
  Author Email: mjguzik@gmail.com
  Commit Date: 1720060198
  Commit Message:
    mm: batch unlink_file_vma calls in free_pgd_range

Execs of dynamically linked binaries at 20-ish cores are bottlenecked on
the i_mmap_rwsem semaphore
  Parent Hashes: 1a3798dececa8cb26b9eee26840195ccc1a4d6c1
  Refs:  while the biggest singular contributor is
free_pgd_range inducing the lock acquire back-to-back for all consecutive
mappings of a given file.

Tracing the count of said acquires while building the kernel shows:
[1

- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'Optimize free_pgd_range to batch unlink_file_vma calls to reduce semaphore bottlenecks in execs of dynamically linked binaries.', 'keywords': 'batch, semaphore, optimization', 'commit_classification': "It's a performance optimization.", 'commit_complexity': 'Moderate, requires some setup or understanding of the system. For example, a new map type or a new link type.', 'Major related component': 'Other component related to eBPF but not listed above.', 'program_types_related': ["It's not related to any of the above."]}
--------------------
--------------------
Processing Commit ID: fd8db07705c55a995c42b1e71afc42faad675b0b
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: fd8db07705c55a995c42b1e71afc42faad675b0b
  Author Name: Florian Lehner
  Author Email: dev@der-flo.net
  Commit Date: 1719939925
  Commit Message:
    bpf
  Parent Hashes: 69716e44a74af464060faa68fa2b54f3af03c16a
  Refs:  devmap: Add .map_alloc_check

Use the .map_allock_check callback to perform allocation checks before
allocating memory for the devmap.

Signed-off-by: Florian Lehner <dev@der-flo.net>
Signed-off-by: Daniel Borkmann <daniel@iogearbox.net>
Acked-by: Daniel Borkmann <daniel@iogearbox.net>
Link: https://lore.kernel.org/bpf/20240615101158.57889-1-dev@der-flo.net


- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'Add .map_alloc_check callback for allocation checks in devmap memory allocation.', 'keywords': 'map_alloc_check, allocation, devmap', 'commit_classification': "It's a new feature.", 'commit_complexity': 'Simple, can be used without much configuration. For example, a simple helper function.', 'Major related component': 'The eBPF maps', 'program_types_related': ['It improves the overall eBPF infrastructure (e.g., verifier, runtime, etc.).']}
--------------------
--------------------
Processing Commit ID: 69716e44a74af464060faa68fa2b54f3af03c16a
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: 69716e44a74af464060faa68fa2b54f3af03c16a
  Author Name: Ilya Leoshkevich
  Author Email: iii@linux.ibm.com
  Commit Date: 1719937912
  Commit Message:
    selftests/bpf: Remove arena tests from DENYLIST.s390x

Now that the s390x JIT supports arena
  Parent Hashes: 490c99d4ed99bb01dac8bf2896e27941403549c4
  Refs:  remove the respective tests from
the denylist.

Signed-off-by: Ilya Leoshkevich <iii@linux.ibm.com>
Signed-off-by: Daniel Borkmann <daniel@iogearbox.net>
Link: https://lore.kernel.org/bpf/20240701234304.14336-13-iii@linux.ibm.com


- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'Removed arena tests from the s390x BPF selftests denylist due to JIT support.', 'keywords': 's390x,JIT,denylist', 'commit_classification': "It's a test case or test infrastructure change.", 'commit_complexity': 'Simple, can be used without much configuration. For example, a simple helper function.', 'Major related component': 'The test cases and makefiles', 'program_types_related': ['It improves the overall eBPF infrastructure (e.g., verifier, runtime, etc.).']}
--------------------
--------------------
Processing Commit ID: 490c99d4ed99bb01dac8bf2896e27941403549c4
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: 490c99d4ed99bb01dac8bf2896e27941403549c4
  Author Name: Ilya Leoshkevich
  Author Email: iii@linux.ibm.com
  Commit Date: 1719937912
  Commit Message:
    selftests/bpf: Add UAF tests for arena atomics

Check that __sync_*() functions don't cause kernel panics when handling
freed arena pages.

x86_64 does not support some arena atomics yet
  Parent Hashes: b6349fd3448cf349af327f90585a712d60265429
  Refs:  and aarch64 may or may
not support them

- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'Introduce UAF tests for arena atomics in BPF selftests to ensure stability against kernel panics.', 'keywords': 'UAF tests, arena atomics, kernel panics', 'commit_classification': "It's a test case or test infrastructure change.", 'commit_complexity': 'Moderate, requires some setup or understanding of the system. For example, a new map type or a new link type.', 'Major related component': 'The test cases and makefiles', 'program_types_related': ['It improves the overall eBPF infrastructure (e.g., verifier, runtime, etc.).']}
--------------------
--------------------
Processing Commit ID: b6349fd3448cf349af327f90585a712d60265429
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: b6349fd3448cf349af327f90585a712d60265429
  Author Name: Ilya Leoshkevich
  Author Email: iii@linux.ibm.com
  Commit Date: 1719937912
  Commit Message:
    selftests/bpf: Introduce __arena_global

While clang uses __attribute__((address_space(1))) both for defining
arena pointers and arena globals
  Parent Hashes: 2f9469484a3b52c66b799de73bd1ca75617bc8d5
  Refs:  GCC requires different syntax for
both. While __arena covers the first use case

- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'The commit introduces __arena_global for selftests in BPF to distinguish arena pointers and globals in GCC and clang.', 'keywords': '__arena_global,selftests,BPF', 'commit_classification': "It's a test case or test infrastructure change.", 'commit_complexity': 'Moderate, requires some setup or understanding of the system. For example, a new map type or a new link type.', 'Major related component': 'The test cases and makefiles', 'program_types_related': ['It improves the overall eBPF infrastructure (e.g., verifier, runtime, etc.).']}
--------------------
--------------------
Processing Commit ID: 2f9469484a3b52c66b799de73bd1ca75617bc8d5
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: 2f9469484a3b52c66b799de73bd1ca75617bc8d5
  Author Name: Ilya Leoshkevich
  Author Email: iii@linux.ibm.com
  Commit Date: 1719937912
  Commit Message:
    s390/bpf: Support arena atomics

s390x supports most BPF atomics using single instructions
  Parent Hashes: 1e36027e39b8b3fa567ce3d743dbda5954dc0a56
  Refs:  which
makes implementing arena support a matter of adding arena address to
the base register (unfortunately atomics do not support index
registers)

- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'The commit adds support for arena atomics in s390x BPF utilizing single instructions.', 'keywords': 'arena, atomics, s390x', 'commit_classification': "It's a new feature.", 'commit_complexity': 'Moderate, requires some setup or understanding of the system. For example, a new map type or a new link type.', 'Major related component': 'Other component related to eBPF but not listed above.', 'program_types_related': ["It's not related to any of the above."]}
--------------------
--------------------
Processing Commit ID: 1e36027e39b8b3fa567ce3d743dbda5954dc0a56
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: 1e36027e39b8b3fa567ce3d743dbda5954dc0a56
  Author Name: Ilya Leoshkevich
  Author Email: iii@linux.ibm.com
  Commit Date: 1719937912
  Commit Message:
    s390/bpf: Enable arena

Now that BPF_PROBE_MEM32 and address space cast instructions are
implemented
  Parent Hashes: 555469cc9be4a7f52c0ad07a4a237d63e8c5c5f4
  Refs:  tell the verifier that the JIT supports arena.

Signed-off-by: Ilya Leoshkevich <iii@linux.ibm.com>
Signed-off-by: Daniel Borkmann <daniel@iogearbox.net>
Link: https://lore.kernel.org/bpf/20240701234304.14336-9-iii@linux.ibm.com


- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'Enabled arena support in s390 BPF by implementing BPF_PROBE_MEM32 and address space cast instructions.', 'keywords': 's390 BPF, arena, JIT', 'commit_classification': "It's a new feature.", 'commit_complexity': 'Moderate, requires some setup or understanding of the system. For example, a new map type or a new link type.', 'Major related component': 'The JIT compiler', 'program_types_related': ['It improves the overall eBPF infrastructure (e.g., verifier, runtime, etc.).']}
--------------------
--------------------
Processing Commit ID: 555469cc9be4a7f52c0ad07a4a237d63e8c5c5f4
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: 555469cc9be4a7f52c0ad07a4a237d63e8c5c5f4
  Author Name: Ilya Leoshkevich
  Author Email: iii@linux.ibm.com
  Commit Date: 1719937912
  Commit Message:
    s390/bpf: Support address space cast instruction

The new address cast instruction translates arena offsets to userspace
addresses. NULL pointers must not be translated.

The common code sets up the mappings in such a way that it's enough to
replace the higher 32 bits to achieve the desired result. s390x has
just an instruction for this: INSERT IMMEDIATE.

Implement the sequence using 3 instruction: LOAD AND TEST
  Parent Hashes: 4d3a453b434fd2f389960890ae6d767f8d50c403
  Refs:  BRANCH
RELATIVE ON CONDITION and INSERT IMMEDIATE.

Signed-off-by: Ilya Leoshkevich <iii@linux.ibm.com>
Signed-off-by: Daniel Borkmann <daniel@iogearbox.net>
Link: https://lore.kernel.org/bpf/20240701234304.14336-8-iii@linux.ibm.com


- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'Support for address space cast instruction added on s390 for eBPF.', 'keywords': 's390,bpf,address', 'commit_classification': "It's a new feature.", 'commit_complexity': 'Moderate, requires some setup or understanding of the system. For example, a new map type or a new link type.', 'Major related component': 'Other component related to eBPF but not listed above.', 'program_types_related': ['It improves the overall eBPF infrastructure (e.g., verifier, runtime, etc.).']}
--------------------
--------------------
Processing Commit ID: 4d3a453b434fd2f389960890ae6d767f8d50c403
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: 4d3a453b434fd2f389960890ae6d767f8d50c403
  Author Name: Ilya Leoshkevich
  Author Email: iii@linux.ibm.com
  Commit Date: 1719937912
  Commit Message:
    s390/bpf: Support BPF_PROBE_MEM32

BPF_PROBE_MEM32 is a new mode for LDX
  Parent Hashes: a1c04bcc41f9638460a9c68f894fb770596380de
  Refs:  ST and STX instructions. The JIT
is supposed to add the start address of the kernel arena mapping to the
%dst register

- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'Add support for BPF_PROBE_MEM32 mode in s390 BPF JIT', 'keywords': 'BPF_PROBE_MEM32,s390,JIT', 'commit_classification': "It's a new feature.", 'commit_complexity': 'Moderate, requires some setup or understanding of the system. For example, a new map type or a new link type.', 'Major related component': 'The JIT compiler', 'program_types_related': ['It improves the overall eBPF infrastructure (e.g., verifier, runtime, etc.).']}
--------------------
--------------------
Processing Commit ID: a1c04bcc41f9638460a9c68f894fb770596380de
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: a1c04bcc41f9638460a9c68f894fb770596380de
  Author Name: Ilya Leoshkevich
  Author Email: iii@linux.ibm.com
  Commit Date: 1719937912
  Commit Message:
    s390/bpf: Land on the next JITed instruction after exception

Currently we land on the nop
  Parent Hashes: 89b933a2013794d8272d432591a2a7a9c41f6351
  Refs:  which is unnecessary: we can just as well
begin executing the next instruction. Furthermore

- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'Optimize s390 JIT execution to continue from the next instruction after an exception.', 'keywords': 's390, JIT, exception', 'commit_classification': "It's a performance optimization.", 'commit_complexity': 'Moderate, requires some setup or understanding of the system. For example, a new map type or a new link type.', 'Major related component': 'The JIT compiler', 'program_types_related': ['It improves the overall eBPF infrastructure (e.g., verifier, runtime, etc.).']}
--------------------
--------------------
Processing Commit ID: 89b933a2013794d8272d432591a2a7a9c41f6351
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: 89b933a2013794d8272d432591a2a7a9c41f6351
  Author Name: Ilya Leoshkevich
  Author Email: iii@linux.ibm.com
  Commit Date: 1719937912
  Commit Message:
    s390/bpf: Introduce pre- and post- probe functions

Currently probe insns are handled by two "if" statements at the
beginning and at the end of bpf_jit_insn(). The first one needs to be
in sync with the huge insn->code statement that follows it
  Parent Hashes: 9a048587269174f218e8d8d737ebfa628589358f
  Refs:  which was
not a problem so far

- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'The commit introduces pre- and post-probe functions to improve BPF JIT instruction handling on s390 architecture.', 'keywords': 'probe, JIT, instruction', 'commit_classification': "It's a cleanup or refactoring in the code.", 'commit_complexity': 'Moderate, requires some setup or understanding of the system. For example, a new map type or a new link type.', 'Major related component': 'The JIT compiler', 'program_types_related': ['It improves the overall eBPF infrastructure (e.g., verifier, runtime, etc.).']}
--------------------
--------------------
Processing Commit ID: 9a048587269174f218e8d8d737ebfa628589358f
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: 9a048587269174f218e8d8d737ebfa628589358f
  Author Name: Ilya Leoshkevich
  Author Email: iii@linux.ibm.com
  Commit Date: 1719937911
  Commit Message:
    s390/bpf: Get rid of get_probe_mem_regno()

Commit 7fc8c362e782 ("s390/bpf: encode register within extable entry")
introduced explicit passing of the number of the register to be cleared
to ex_handler_bpf()
  Parent Hashes: d0736d8c491ddc7d31c7f839d281c907366e2562
  Refs:  which replaced deducing it from the respective
native load instruction using get_probe_mem_regno().

Replace the second and last usage in the same manner

- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'Remove get_probe_mem_regno() function and update register encoding in s390/bpf architecture.', 'keywords': 's390,bpf,register', 'commit_classification': "It's a cleanup or refactoring in the code.", 'commit_complexity': 'Simple, can be used without much configuration. For example, a simple helper function.', 'Major related component': 'The attach events and bpf link. e.g. perf events, tracepoints, etc.', 'program_types_related': ['tracepoints like programs']}
--------------------
--------------------
Processing Commit ID: d0736d8c491ddc7d31c7f839d281c907366e2562
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: d0736d8c491ddc7d31c7f839d281c907366e2562
  Author Name: Ilya Leoshkevich
  Author Email: iii@linux.ibm.com
  Commit Date: 1719937911
  Commit Message:
    s390/bpf: Factor out emitting probe nops

The upcoming arena support for the loop-based BPF_XCHG implementation
requires emitting nop and extable entries separately. Move nop handling
into a separate function
  Parent Hashes: df34ec9db6f521118895f22795da49f2ec01f8cf
  Refs:  and keep track of the nop offset.

Signed-off-by: Ilya Leoshkevich <iii@linux.ibm.com>
Signed-off-by: Daniel Borkmann <daniel@iogearbox.net>
Link: https://lore.kernel.org/bpf/20240701234304.14336-3-iii@linux.ibm.com


- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'Refactor s390 BPF code by moving NOP handling into a separate function for future BPF_XCHG changes.', 'keywords': 's390, nop, refactoring', 'commit_classification': "It's a cleanup or refactoring in the code.", 'commit_complexity': 'Moderate, requires some setup or understanding of the system. For example, a new map type or a new link type.', 'Major related component': 'Other component related to eBPF but not listed above.', 'program_types_related': ['It improves the overall eBPF infrastructure (e.g., verifier, runtime, etc.).']}
--------------------
--------------------
Processing Commit ID: df34ec9db6f521118895f22795da49f2ec01f8cf
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: df34ec9db6f521118895f22795da49f2ec01f8cf
  Author Name: Ilya Leoshkevich
  Author Email: iii@linux.ibm.com
  Commit Date: 1719937895
  Commit Message:
    bpf: Fix atomic probe zero-extension

Zero-extending results of atomic probe operations fails with:

    verifier bug. zext_dst is set
  Parent Hashes: da5f8fd1f0d393d5eaaba9ad8c22d1c26bb2bf9b
  Refs:  but no reg is defined

The problem is that insn_def_regno() handles BPF_ATOMICs

- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'Fixes zero-extension issues in atomic probe operations within the eBPF verifier.', 'keywords': 'atomic,probe,fails', 'commit_classification': "It's a bug fix.", 'commit_complexity': 'Moderate, requires some setup or understanding of the system. For example, a new map type or a new link type.', 'Major related component': 'The eBPF verifier', 'program_types_related': ['It improves the overall eBPF infrastructure (e.g., verifier, runtime, etc.).']}
--------------------
--------------------
Processing Commit ID: da5f8fd1f0d393d5eaaba9ad8c22d1c26bb2bf9b
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: da5f8fd1f0d393d5eaaba9ad8c22d1c26bb2bf9b
  Author Name: Tao Chen
  Author Email: chen.dylane@gmail.com
  Commit Date: 1719937232
  Commit Message:
    bpftool: Mount bpffs when pinmaps path not under the bpffs

As Quentin said [0]
  Parent Hashes: 9474f72cd6573ee788013147e3590be4a28e085a
  Refs:  BPF map pinning will fail if the pinmaps path is not
under the bpffs

- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'Mount bpffs in bpftool when pinmaps path is not under bpffs to prevent map pinning failures.', 'keywords': 'bpftool, bpffs, pinmaps', 'commit_classification': "It's a bug fix.", 'commit_complexity': 'Simple, can be used without much configuration. For example, a simple helper function.', 'Major related component': 'The bpftool utility', 'program_types_related': ['It improves the overall eBPF infrastructure (e.g., verifier, runtime, etc.).']}
--------------------
--------------------
Processing Commit ID: 9474f72cd6573ee788013147e3590be4a28e085a
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: 9474f72cd6573ee788013147e3590be4a28e085a
  Author Name: Pu Lehui
  Author Email: pulehui@huawei.com
  Commit Date: 1719928922
  Commit Message:
    selftests/bpf: Add testcase where 7th argment is struct

Add testcase where 7th argument is struct for architectures with 8 argument
registers
  Parent Hashes: 5d52ad36683af64f04da295d67fb943f94658929
  Refs:  and increase the complexity of the struct.

Signed-off-by: Pu Lehui <pulehui@huawei.com>
Signed-off-by: Daniel Borkmann <daniel@iogearbox.net>
Reviewed-by: Björn Töpel <bjorn@rivosinc.com>
Acked-by: Björn Töpel <bjorn@kernel.org>
Acked-by: Jiri Olsa <jolsa@kernel.org>
Link: https://lore.kernel.org/bpf/20240702121944.1091530-4-pulehui@huaweicloud.com


- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'Add a test case for architectures with 8 argument registers where the 7th argument is a struct.', 'keywords': 'testcase, struct, architectures', 'commit_classification': "It's a test case or test infrastructure change.", 'commit_complexity': 'Moderate, requires some setup or understanding of the system. For example, a new map type or a new link type.', 'Major related component': 'The test cases and makefiles', 'program_types_related': ['It improves the overall eBPF infrastructure (e.g., verifier, runtime, etc.).']}
--------------------
--------------------
Processing Commit ID: 5d52ad36683af64f04da295d67fb943f94658929
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: 5d52ad36683af64f04da295d67fb943f94658929
  Author Name: Pu Lehui
  Author Email: pulehui@huawei.com
  Commit Date: 1719928913
  Commit Message:
    selftests/bpf: Factor out many args tests from tracing_struct

Factor out many args tests from tracing_struct and rename some function names
to make more sense. Meanwhile
  Parent Hashes: 6801b0aef79db475591c3146a701ea373e4663b7
  Refs:  remove unnecessary skeleton detach operation
as it will be covered by skeleton destroy operation.

Signed-off-by: Pu Lehui <pulehui@huawei.com>
Signed-off-by: Daniel Borkmann <daniel@iogearbox.net>
Acked-by: Jiri Olsa <jolsa@kernel.org>
Link: https://lore.kernel.org/bpf/20240702121944.1091530-3-pulehui@huaweicloud.com


- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'The commit refactors many argument tests from tracing_struct and renames functions for clarity.', 'keywords': 'refactor, tracing_struct, selftests', 'commit_classification': "It's a cleanup or refactoring in the code.", 'commit_complexity': 'Simple, can be used without much configuration. For example, a simple helper function.', 'Major related component': 'The test cases and makefiles', 'program_types_related': ['tracepoints like programs']}
--------------------
--------------------
Processing Commit ID: 6801b0aef79db475591c3146a701ea373e4663b7
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: 6801b0aef79db475591c3146a701ea373e4663b7
  Author Name: Pu Lehui
  Author Email: pulehui@huawei.com
  Commit Date: 1719928890
  Commit Message:
    riscv
  Parent Hashes: e4a195e2b95e4602c667ed19a20f71218df138c2
  Refs:  bpf: Add 12-argument support for RV64 bpf trampoline

This patch adds 12 function arguments support for riscv64 bpf trampoline.
The current bpf trampoline supports <= sizeof(u64) bytes scalar arguments [0]
and <= 16 bytes struct arguments [1]. Therefore

- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'Add support for 12 function arguments in RISC-V 64-bit BPF trampoline.', 'keywords': 'riscv64,bpf,trampoline', 'commit_classification': "It's a new feature.", 'commit_complexity': 'Moderate, requires some setup or understanding of the system. For example, a new map type or a new link type.', 'Major related component': 'The attach events and bpf link. e.g. perf events, tracepoints, etc.', 'program_types_related': ['tracepoints like programs', 'kprobe/uprobe/ftrace like programs', 'It improves the overall eBPF infrastructure (e.g., verifier, runtime, etc.).']}
--------------------
--------------------
Processing Commit ID: 2a01a8895015ad479df7cfb8f127501d1c8da7c9
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: 2a01a8895015ad479df7cfb8f127501d1c8da7c9
  Author Name: Paolo Abeni
  Author Email: pabeni@redhat.com
  Commit Date: 1719926820
  Commit Message:
    Merge branch 'net-bpf_net_context-cleanups'

Sebastian Andrzej Siewior says:

====================
net: bpf_net_context cleanups.

a small series with bpf_net_context cleanups/ improvements.
Jakub asked for #1 and #2 and while looking around I made #3.
====================

Link: https://patch.msgid.link/20240628103020.1766241-1-bigeasy@linutronix.de
Signed-off-by: Paolo Abeni <pabeni@redhat.com>

  Parent Hashes: e27d7168f0c8c024344e9541513aa71d921402a5 e3d69f585d651aba877e18866de7e8cfa2476caa
  Refs: 

- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'This commit performs cleanups and improvements on the bpf_net_context subsystem.', 'keywords': 'bpf_net_context,cleanups,improvements', 'commit_classification': "It's a cleanup or refactoring in the code.", 'commit_complexity': 'Moderate, requires some setup or understanding of the system. For example, a new map type or a new link type.', 'Major related component': 'Other component related to eBPF but not listed above.', 'program_types_related': ["It's not related to any of the above."]}
--------------------
--------------------
Processing Commit ID: e3d69f585d651aba877e18866de7e8cfa2476caa
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: e3d69f585d651aba877e18866de7e8cfa2476caa
  Author Name: Sebastian Andrzej Siewior
  Author Email: bigeasy@linutronix.de
  Commit Date: 1719926817
  Commit Message:
    net: Move flush list retrieval to where it is used.

The bpf_net_ctx_get_.*_flush_list() are used at the top of the function.
This means the variable is always assigned even if unused. By moving the
function to where it is used
  Parent Hashes: d839a73179ae91c07f5f2f97ccb9c69b2b7c3306
  Refs:  it is possible to delay the initialisation
until it is unavoidable.
Not sure how much this gains in reality but by looking at bq_enqueue()
(in devmap.c) gcc pushes one register less to the stack. \o/.

 Move flush list retrieval to where it is used.

Signed-off-by: Sebastian Andrzej Siewior <bigeasy@linutronix.de>
Acked-by: Jesper Dangaard Brouer <hawk@kernel.org>
Reviewed-by: Jakub Kicinski <kuba@kernel.org>
Signed-off-by: Paolo Abeni <pabeni@redhat.com>


- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'Move flush list retrieval to improve code efficiency by delaying initialization until necessary.', 'keywords': 'flush list, efficiency, initialization', 'commit_classification': "It's a cleanup or refactoring in the code.", 'commit_complexity': 'Simple, can be used without much configuration. For example, a simple helper function.', 'Major related component': 'The eBPF maps', 'program_types_related': ['tc/netfilter like programs']}
--------------------
--------------------
Processing Commit ID: d839a73179ae91c07f5f2f97ccb9c69b2b7c3306
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: d839a73179ae91c07f5f2f97ccb9c69b2b7c3306
  Author Name: Sebastian Andrzej Siewior
  Author Email: bigeasy@linutronix.de
  Commit Date: 1719926817
  Commit Message:
    net: Optimize xdp_do_flush() with bpf_net_context infos.

Every NIC driver utilizing XDP should invoke xdp_do_flush() after
processing all packages. With the introduction of the bpf_net_context
logic the flush lists (for dev
  Parent Hashes: 2896624be30b049601ec3ef9b08df184d0c70495
  Refs:  CPU-map and xsk) are lazy initialized
only if used. However xdp_do_flush() tries to flush all three of them so
all three lists are always initialized and the likely empty lists are
"iterated".
Without the usage of XDP but with CONFIG_DEBUG_NET the lists are also
initialized due to xdp_do_check_flushed().

Jakub suggest to utilize the hints in bpf_net_context and avoid invoking
the flush function. This will also avoiding initializing the lists which
are otherwise unused.

Introduce bpf_net_ctx_get_all_used_flush_lists() to return the
individual list if not-empty. Use the logic in xdp_do_flush() and
xdp_do_check_flushed(). Remove the not needed .*_check_flush().

Suggested-by: Jakub Kicinski <kuba@kernel.org>
Signed-off-by: Sebastian Andrzej Siewior <bigeasy@linutronix.de>
Reviewed-by: Jakub Kicinski <kuba@kernel.org>
Signed-off-by: Paolo Abeni <pabeni@redhat.com>


- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'Optimize xdp_do_flush() using bpf_net_context to prevent unnecessary list initialization and improve performance.', 'keywords': 'xdp_do_flush bpf_net_context optimization', 'commit_classification': "It's a performance optimization.", 'commit_complexity': 'Moderate, requires some setup or understanding of the system. For example, a new map type or a new link type.', 'Major related component': 'Other component related to eBPF but not listed above.', 'program_types_related': ['xdp like programs']}
--------------------
--------------------
Processing Commit ID: 2896624be30b049601ec3ef9b08df184d0c70495
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: 2896624be30b049601ec3ef9b08df184d0c70495
  Author Name: Sebastian Andrzej Siewior
  Author Email: bigeasy@linutronix.de
  Commit Date: 1719926817
  Commit Message:
    net: Remove task_struct::bpf_net_context init on fork.

There is no clone() invocation within a bpf_net_ctx_…() block. Therefore
the task_struct::bpf_net_context has always to be NULL and an explicit
initialisation is not required.

Remove the NULL assignment in the clone() path.

Suggested-by: Jakub Kicinski <kuba@kernel.org>
Signed-off-by: Sebastian Andrzej Siewior <bigeasy@linutronix.de>
Reviewed-by: Jakub Kicinski <kuba@kernel.org>
Signed-off-by: Paolo Abeni <pabeni@redhat.com>

  Parent Hashes: e27d7168f0c8c024344e9541513aa71d921402a5
  Refs: 

- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'Remove unnecessary NULL initialization of bpf_net_context on task_struct fork.', 'keywords': 'bpf_net_context, task_struct, NULL', 'commit_classification': "It's a cleanup or refactoring in the code.", 'commit_complexity': 'Simple, can be used without much configuration. For example, a simple helper function.', 'Major related component': 'Other component related to eBPF but not listed above.', 'program_types_related': ['tc/netfilter like programs']}
--------------------
--------------------
Processing Commit ID: e4a195e2b95e4602c667ed19a20f71218df138c2
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: e4a195e2b95e4602c667ed19a20f71218df138c2
  Author Name: Tushar Vyavahare
  Author Email: tushar.vyavahare@intel.com
  Commit Date: 1719925950
  Commit Message:
    selftests/xsk: Enhance batch size support with dynamic configurations

Introduce dynamic adjustment capabilities for fill_size and comp_size
parameters to support larger batch sizes beyond the previous 2K limit.

Update HW_SW_MAX_RING_SIZE test cases to evaluate AF_XDP's robustness by
pushing hardware and software ring sizes to their limits. This test
ensures AF_XDP's reliability amidst potential producer/consumer throttling
due to maximum ring utilization.

Signed-off-by: Tushar Vyavahare <tushar.vyavahare@intel.com>
Signed-off-by: Daniel Borkmann <daniel@iogearbox.net>
Reviewed-by: Maciej Fijalkowski <maciej.fijalkowski@intel.com>
Link: https://lore.kernel.org/bpf/20240702055916.48071-3-tushar.vyavahare@intel.com

  Parent Hashes: d80d61ab0609f7f7168d59ec82ee5f055a4b6be7
  Refs: 

- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'Enhance selftests for AF_XDP by adding dynamic configuration support for larger batch sizes in fill_size and comp_size parameters.', 'keywords': 'AF_XDP, dynamic configuration, batch sizes', 'commit_classification': "It's a test case or test infrastructure change.", 'commit_complexity': 'Moderate, requires some setup or understanding of the system. For example, a new map type or a new link type.', 'Major related component': 'The test cases and makefiles', 'program_types_related': ['socket like programs']}
--------------------
--------------------
Processing Commit ID: d80d61ab0609f7f7168d59ec82ee5f055a4b6be7
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: d80d61ab0609f7f7168d59ec82ee5f055a4b6be7
  Author Name: Tushar Vyavahare
  Author Email: tushar.vyavahare@intel.com
  Commit Date: 1719925950
  Commit Message:
    selftests/xsk: Ensure traffic validation proceeds after ring size adjustment in xskxceiver

Previously
  Parent Hashes: 03922e97bc305c6b2e8bc4b7cc765959ca63b05d
  Refs:  HW_SW_MIN_RING_SIZE and HW_SW_MAX_RING_SIZE test cases were
not validating Tx/Rx traffic at all due to early return after changing HW
ring size in testapp_validate_traffic().

Fix the flow by checking return value of set_ring_size() and act upon it
rather than terminating the test case there.

Signed-off-by: Tushar Vyavahare <tushar.vyavahare@intel.com>
Signed-off-by: Daniel Borkmann <daniel@iogearbox.net>
Reviewed-by: Maciej Fijalkowski <maciej.fijalkowski@intel.com>
Link: https://lore.kernel.org/bpf/20240702055916.48071-2-tushar.vyavahare@intel.com


- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'Fixes traffic validation issue after ring size adjustment in xskxceiver selftests.', 'keywords': 'traffic,validation,ring', 'commit_classification': "It's a test case or test infrastructure change.", 'commit_complexity': 'Moderate, requires some setup or understanding of the system. For example, a new map type or a new link type.', 'Major related component': 'The test cases and makefiles', 'program_types_related': ['socket like programs']}
--------------------
--------------------
Processing Commit ID: 03922e97bc305c6b2e8bc4b7cc765959ca63b05d
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: 03922e97bc305c6b2e8bc4b7cc765959ca63b05d
  Author Name: Zhu Jun
  Author Email: zhujun2@cmss.chinamobile.com
  Commit Date: 1719846950
  Commit Message:
    selftests/bpf: Delete extra blank lines in test_sockmap

Delete extra blank lines inside of test_selftest().

Signed-off-by: Zhu Jun <zhujun2@cmss.chinamobile.com>
Signed-off-by: Daniel Borkmann <daniel@iogearbox.net>
Link: https://lore.kernel.org/bpf/20240627031905.7133-1-zhujun2@cmss.chinamobile.com

  Parent Hashes: 2382a405c581ae8f39f898055654e2000e7dd0d3
  Refs: 

- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'Clean up by removing extra blank lines in the BPF test_sockmap selftest.', 'keywords': 'selftests,bpf,clean', 'commit_classification': "It's a cleanup or refactoring in the code.", 'commit_complexity': 'Simple, can be used without much configuration. For example, a simple helper function.', 'Major related component': 'The test cases and makefiles', 'program_types_related': ['socket like programs']}
--------------------
--------------------
Processing Commit ID: 2382a405c581ae8f39f898055654e2000e7dd0d3
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: 2382a405c581ae8f39f898055654e2000e7dd0d3
  Author Name: Pu Lehui
  Author Email: pulehui@huawei.com
  Commit Date: 1719846646
  Commit Message:
    riscv
  Parent Hashes: 9f1e16fb1fc9826001c69e0551d51fbbcd2d74e9
  Refs:  bpf: Use bpf_prog_pack for RV64 bpf trampoline

We used bpf_prog_pack to aggregate bpf programs into huge page to
relieve the iTLB pressure on the system. We can apply it to bpf
trampoline

- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'The commit uses bpf_prog_pack to optimize RV64 bpf trampoline by aggregating programs into huge pages to reduce iTLB pressure.', 'keywords': 'bpf_prog_pack, RV64, trampoline', 'commit_classification': "It's a performance optimization.", 'commit_complexity': 'Moderate, requires some setup or understanding of the system. For example, a new map type or a new link type.', 'Major related component': 'Other component related to eBPF but not listed above.', 'program_types_related': ['It improves the overall eBPF infrastructure (e.g., verifier, runtime, etc.).']}
--------------------
--------------------
Processing Commit ID: 9f1e16fb1fc9826001c69e0551d51fbbcd2d74e9
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: 9f1e16fb1fc9826001c69e0551d51fbbcd2d74e9
  Author Name: Pu Lehui
  Author Email: pulehui@huawei.com
  Commit Date: 1719846646
  Commit Message:
    riscv
  Parent Hashes: d1a426171d76b2cdf3dea5d52f6266090e4aa254
  Refs:  bpf: Fix out-of-bounds issue when preparing trampoline image

We get the size of the trampoline image during the dry run phase and
allocate memory based on that size. The allocated image will then be
populated with instructions during the real patch phase. But after
commit 26ef208c209a ("bpf: Use arch_bpf_trampoline_size")

- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'Fix out-of-bounds issue in BPF trampoline image allocation for RISC-V platform.', 'keywords': 'out-of-bounds, trampoline, RISC-V', 'commit_classification': "It's a bug fix.", 'commit_complexity': 'Moderate, requires some setup or understanding of the system. For example, a new map type or a new link type.', 'Major related component': 'The attach events and bpf link. e.g. perf events, tracepoints, etc.', 'program_types_related': ['It improves the overall eBPF infrastructure (e.g., verifier, runtime, etc.).']}
--------------------
--------------------
Processing Commit ID: d1a426171d76b2cdf3dea5d52f6266090e4aa254
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: d1a426171d76b2cdf3dea5d52f6266090e4aa254
  Author Name: Pu Lehui
  Author Email: pulehui@huawei.com
  Commit Date: 1719846646
  Commit Message:
    bpf: Use precise image size for struct_ops trampoline

For trampoline using bpf_prog_pack
  Parent Hashes: 5b747c23f17d791e08fdf4baa7e14b704625518c
  Refs:  we need to generate a rw_image
buffer with size of (image_end - image). For regular trampoline

- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'The commit optimizes struct_ops trampoline by using a precise image size with bpf_prog_pack.', 'keywords': 'struct_ops, trampoline, image', 'commit_classification': "It's a performance optimization.", 'commit_complexity': 'Moderate, requires some setup or understanding of the system. For example, a new map type or a new link type.', 'Major related component': 'The attach events and bpf link. e.g. perf events, tracepoints, etc.', 'program_types_related': ['It improves the overall eBPF infrastructure (e.g., verifier, runtime, etc.).']}
--------------------
--------------------
Processing Commit ID: 5b747c23f17d791e08fdf4baa7e14b704625518c
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: 5b747c23f17d791e08fdf4baa7e14b704625518c
  Author Name: Alan Maguire
  Author Email: alan.maguire@oracle.com
  Commit Date: 1719846308
  Commit Message:
    libbpf: Fix error handling in btf__distill_base()

Coverity points out that after calling btf__new_empty_split() the wrong
value is checked for error.

Fixes: 58e185a0dc35 ("libbpf: Add btf__distill_base() creating split BTF with distilled base BTF")
Reported-by: Andrii Nakryiko <andrii@kernel.org>
Signed-off-by: Alan Maguire <alan.maguire@oracle.com>
Signed-off-by: Daniel Borkmann <daniel@iogearbox.net>
Link: https://lore.kernel.org/bpf/20240629100058.2866763-1-alan.maguire@oracle.com

  Parent Hashes: c77e572d3a8c0e21c5dca4cc2883c7cd8cbe981f
  Refs: 

- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'Fix error handling in btf__distill_base() function in libbpf.', 'keywords': 'libbpf,error handling,btf__distill_base', 'commit_classification': "It's a bug fix.", 'commit_complexity': 'Simple, can be used without much configuration. For example, a simple helper function.', 'Major related component': 'The libbpf library', 'program_types_related': ['It improves the overall eBPF infrastructure (e.g., verifier, runtime, etc.).']}
--------------------
--------------------
Processing Commit ID: c77e572d3a8c0e21c5dca4cc2883c7cd8cbe981f
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: c77e572d3a8c0e21c5dca4cc2883c7cd8cbe981f
  Author Name: Lorenzo Bianconi
  Author Email: lorenzo@kernel.org
  Commit Date: 1719846191
  Commit Message:
    selftests/bpf: Add selftest for bpf_xdp_flow_lookup kfunc

Introduce e2e selftest for bpf_xdp_flow_lookup kfunc through
xdp_flowtable utility.

Signed-off-by: Lorenzo Bianconi <lorenzo@kernel.org>
Signed-off-by: Daniel Borkmann <daniel@iogearbox.net>
Link: https://lore.kernel.org/bpf/b74393fb4539aecbbd5ac7883605f86a95fb0b6b.1719698275.git.lorenzo@kernel.org

  Parent Hashes: 391bb6594fd3a567efb1cd3efc8136c78c4c9e31
  Refs: 

- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'Introduce an end-to-end selftest for bpf_xdp_flow_lookup kfunc using xdp_flowtable utility.', 'keywords': 'selftest,bpf_xdp_flow_lookup,xdp_flowtable', 'commit_classification': "It's a test case or test infrastructure change.", 'commit_complexity': 'Moderate, requires some setup or understanding of the system. For example, a new map type or a new link type.', 'Major related component': 'The test cases and makefiles', 'program_types_related': ['xdp like programs']}
--------------------
--------------------
Processing Commit ID: 391bb6594fd3a567efb1cd3efc8136c78c4c9e31
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: 391bb6594fd3a567efb1cd3efc8136c78c4c9e31
  Author Name: Lorenzo Bianconi
  Author Email: lorenzo@kernel.org
  Commit Date: 1719846181
  Commit Message:
    netfilter: Add bpf_xdp_flow_lookup kfunc

Introduce bpf_xdp_flow_lookup kfunc in order to perform the lookup
of a given flowtable entry based on a fib tuple of incoming traffic.
bpf_xdp_flow_lookup can be used as building block to offload in xdp
the processing of sw flowtable when hw flowtable is not available.

Signed-off-by: Lorenzo Bianconi <lorenzo@kernel.org>
Signed-off-by: Daniel Borkmann <daniel@iogearbox.net>
Acked-by: Kumar Kartikeya Dwivedi <memxor@gmail.com>
Acked-by: Pablo Neira Ayuso <pablo@netfilter.org>
Link: https://lore.kernel.org/bpf/55d38a4e5856f6d1509d823ff4e98aaa6d356097.1719698275.git.lorenzo@kernel.org

  Parent Hashes: 89cc8f1c5f22568142b7ad118c738204708e4207
  Refs: 

- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'This commit introduces the bpf_xdp_flow_lookup kfunc to facilitate flowtable entry lookup based on a FIB tuple in XDP programs.', 'keywords': 'bpf_xdp_flow_lookup, netfilter, flowtable', 'commit_classification': "It's a new feature.", 'commit_complexity': 'Moderate, requires some setup or understanding of the system. For example, a new map type or a new link type.', 'Major related component': 'The helper and kfuncs', 'program_types_related': ['xdp like programs', 'tc/netfilter like programs']}
--------------------
--------------------
Processing Commit ID: 89cc8f1c5f22568142b7ad118c738204708e4207
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: 89cc8f1c5f22568142b7ad118c738204708e4207
  Author Name: Florian Westphal
  Author Email: fw@strlen.de
  Commit Date: 1719846113
  Commit Message:
    netfilter: nf_tables: Add flowtable map for xdp offload

This adds a small internal mapping table so that a new bpf (xdp) kfunc
can perform lookups in a flowtable.

As-is
  Parent Hashes: a12978712d9001b060bcc10eaae42ad5102abe2b
  Refs:  xdp program has access to the device pointer

- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'The commit adds a flowtable map for XDP offload in the nf_tables subsystem.', 'keywords': 'flowtable,XDP,netfilter', 'commit_classification': "It's a new feature.", 'commit_complexity': 'Moderate, requires some setup or understanding of the system. For example, a new map type or a new link type.', 'Major related component': 'The eBPF maps', 'program_types_related': ['xdp like programs']}
--------------------
--------------------
Processing Commit ID: f58e7f404da44c94e46bfe657b8707195aebd25a
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: f58e7f404da44c94e46bfe657b8707195aebd25a
  Author Name: Benjamin Tissoires
  Author Email: bentiss@kernel.org
  Commit Date: 1719838124
  Commit Message:
    HID: bpf: Thrustmaster TCA Yoke Boeing joystick fix

This joystick's original HID descriptor is wrong & it shows a
ABS_MISC axis in Linux that doesn't exist on the hardware.

Link: https://gitlab.freedesktop.org/libevdev/udev-hid-bpf/-/merge_requests/82
Signed-off-by: K S Iyer <kumar.s.iyer65@gmail.com>
Link: https://patch.msgid.link/20240627-import-bpf-v1-6-0dbcda4a5b1f@kernel.org
Signed-off-by: Benjamin Tissoires <bentiss@kernel.org>

  Parent Hashes: 9b52d81115db681efc1f83ded1d572e5b0b4fd49
  Refs: 

- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'Fixes incorrect HID descriptor for the Thrustmaster TCA Yoke Boeing joystick.', 'keywords': 'HID, joystick, fix', 'commit_classification': "It's a bug fix.", 'commit_complexity': 'Simple, can be used without much configuration. For example, a simple helper function.', 'Major related component': 'Other component related to eBPF but not listed above.', 'program_types_related': ['HID driver like programs']}
--------------------
--------------------
Processing Commit ID: 9b52d81115db681efc1f83ded1d572e5b0b4fd49
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: 9b52d81115db681efc1f83ded1d572e5b0b4fd49
  Author Name: Benjamin Tissoires
  Author Email: bentiss@kernel.org
  Commit Date: 1719838119
  Commit Message:
    HID: bpf: Add Huion Dial 2 bpf fixup

Pretty much similar to the Inspiroy 2
  Parent Hashes: f03741540dbab48f8a65da44aaadbe04216d9a42
  Refs:  but with 2 wheels and 8 buttons.

This bpf also works in both normal and vendor mode. If the device is
switched into vendor mode by huion-switcher

- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'Add bpf fixup for Huion Dial 2 devices to ensure compatibility with normal and vendor modes.', 'keywords': 'HID, bpf, Huion', 'commit_classification': "It's a new feature.", 'commit_complexity': 'Moderate, requires some setup or understanding of the system. For example, a new map type or a new link type.', 'Major related component': 'Other component related to eBPF but not listed above.', 'program_types_related': ['HID driver like programs']}
--------------------
--------------------
Processing Commit ID: f03741540dbab48f8a65da44aaadbe04216d9a42
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: f03741540dbab48f8a65da44aaadbe04216d9a42
  Author Name: Benjamin Tissoires
  Author Email: bentiss@kernel.org
  Commit Date: 1719838117
  Commit Message:
    HID: bpf: Add support for the XP-PEN Deco Mini 4

The XP-PEN Deco Mini 4 is a UGEE device with a frame with 6 buttons.
Its pen has 2 buttons and supports pressure reporting.

Fix their report descriptors and transform the frame button events to
support it.

Link: https://gitlab.freedesktop.org/libevdev/udev-hid-bpf/-/merge_requests/88
Signed-off-by: José Expósito <jose.exposito89@gmail.com>
Link: https://patch.msgid.link/20240627-import-bpf-v1-4-0dbcda4a5b1f@kernel.org
Signed-off-by: Benjamin Tissoires <bentiss@kernel.org>

  Parent Hashes: c4015aa7d8faa43ca53608dccad681eafc22db09
  Refs: 

- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'Add support for XP-PEN Deco Mini 4 device in HID BPF framework.', 'keywords': 'XP-PEN, HID, support', 'commit_classification': "It's a new feature.", 'commit_complexity': 'Moderate, requires some setup or understanding of the system. For example, a new map type or a new link type.', 'Major related component': 'Other component related to eBPF but not listed above.', 'program_types_related': ['HID driver like programs']}
--------------------
--------------------
Processing Commit ID: c4015aa7d8faa43ca53608dccad681eafc22db09
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: c4015aa7d8faa43ca53608dccad681eafc22db09
  Author Name: Benjamin Tissoires
  Author Email: bentiss@kernel.org
  Commit Date: 1719838113
  Commit Message:
    HID: bpf: move the BIT() macro to hid_bpf_helpers.h

This macro can be useful in mopre than one place

Link: https://gitlab.freedesktop.org/libevdev/udev-hid-bpf/-/commit/7970a9c17aa0756bad63e89fccb6ee4f2ec83ccc
Signed-off-by: José Expósito <jose.exposito89@gmail.com>
Link: https://patch.msgid.link/20240627-import-bpf-v1-3-0dbcda4a5b1f@kernel.org
Signed-off-by: Benjamin Tissoires <bentiss@kernel.org>

  Parent Hashes: 09c555faedb855b07d62503e0a4cd8cdf726da20
  Refs: 

- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'The BIT() macro is moved to hid_bpf_helpers.h for broader utility.', 'keywords': 'BIT macro, hid_bpf_helpers.h, utility', 'commit_classification': "It's a cleanup or refactoring in the code.", 'commit_complexity': 'Simple, can be used without much configuration. For example, a simple helper function.', 'Major related component': 'Other component related to eBPF but not listed above.', 'program_types_related': ['HID driver like programs']}
--------------------
--------------------
Processing Commit ID: 09c555faedb855b07d62503e0a4cd8cdf726da20
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: 09c555faedb855b07d62503e0a4cd8cdf726da20
  Author Name: Benjamin Tissoires
  Author Email: bentiss@kernel.org
  Commit Date: 1719838103
  Commit Message:
    HID: bpf: add a driver for the Huion Inspiroy 2S (H641P)

This is a a driver for the Huion Inspiroy 2S in both modes (firmware mode
and tablet mode). This device has 6 buttons and a wheel
  Parent Hashes: 8a89db51873ca574de45b25fce68103f34266459
  Refs:  all of which
send key combinations (see the comments for the defaults). Luckily the
device is quite limited in that it only supports one button down at a
time

- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'This commit adds a driver for the Huion Inspiroy 2S tablet supporting firmware and tablet modes.', 'keywords': 'driver, Huion, tablet', 'commit_classification': "It's other type of commit.", 'commit_complexity': 'Moderate, requires some setup or understanding of the system. For example, a new map type or a new link type.', 'Major related component': 'Other component related to eBPF but not listed above.', 'program_types_related': ['HID driver like programs']}
--------------------
--------------------
Processing Commit ID: 8a89db51873ca574de45b25fce68103f34266459
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: 8a89db51873ca574de45b25fce68103f34266459
  Author Name: Benjamin Tissoires
  Author Email: bentiss@kernel.org
  Commit Date: 1719838098
  Commit Message:
    HID: bpf: Add a HID report composition helper macros

These macros make it slightly easier and more modular to create
a HID report descriptor from scratch. Since they carry the annotation
we don't need to comment it and they cannot get stale.

For comparison
  Parent Hashes: c79de517a226b86419a5baa867e65e3f8118829f
  Refs:  before we had this:

        0x15

- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'Added helper macros for easier and modular creation of HID report descriptors.', 'keywords': 'HID,bpf,macros', 'commit_classification': "It's a new feature.", 'commit_complexity': 'Moderate, requires some setup or understanding of the system. For example, a new map type or a new link type.', 'Major related component': 'Other component related to eBPF but not listed above.', 'program_types_related': ['HID driver like programs']}
--------------------
--------------------
Processing Commit ID: c79de517a226b86419a5baa867e65e3f8118829f
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: c79de517a226b86419a5baa867e65e3f8118829f
  Author Name: Benjamin Tissoires
  Author Email: bentiss@kernel.org
  Commit Date: 1719838096
  Commit Message:
    HID: bpf: doc fixes for hid_hw_request() hooks

We had the following errors while doing make htmldocs:

Documentation/hid/hid-bpf:185: include/linux/hid_bpf.h:167:
	ERROR: Unexpected indentation.

Also ensure consistency with the rest of the __u64 vs u64.

Reported-by: Stephen Rothwell <sfr@canb.auug.org.au>
Fixes: 9286675a2aed ("HID: bpf: add HID-BPF hooks for hid_hw_output_report")
Link: https://patch.msgid.link/20240701-fix-cki-v2-4-20564e2e1393@kernel.org
Signed-off-by: Benjamin Tissoires <bentiss@kernel.org>

  Parent Hashes: 260ffc9676b635c2ededc39285bfa41f83536ee1
  Refs: 

- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'Fixes documentation errors related to HID-BPF hooks in hid_hw_request().', 'keywords': 'HID, BPF, documentation', 'commit_classification': "It's a documentation change or typo fix.", 'commit_complexity': 'Simple, can be used without much configuration. For example, a simple helper function.', 'Major related component': 'Other component related to eBPF but not listed above.', 'program_types_related': ['HID driver like programs']}
--------------------
--------------------
Processing Commit ID: 260ffc9676b635c2ededc39285bfa41f83536ee1
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: 260ffc9676b635c2ededc39285bfa41f83536ee1
  Author Name: Benjamin Tissoires
  Author Email: bentiss@kernel.org
  Commit Date: 1719838094
  Commit Message:
    HID: bpf: doc fixes for hid_hw_request() hooks

We had the following errors while doing make htmldocs:
Documentation/hid/hid-bpf:185: include/linux/hid_bpf.h:144:
	ERROR: Unexpected indentation.
Documentation/hid/hid-bpf:185: include/linux/hid_bpf.h:145:
	WARNING: Block quote ends without a blank line;
	unexpected unindent.
Documentation/hid/hid-bpf:185: include/linux/hid_bpf.h:147:
	ERROR: Unexpected indentation.

Reported-by: Stephen Rothwell <sfr@canb.auug.org.au>
Fixes: 8bd0488b5ea5 ("HID: bpf: add HID-BPF hooks for hid_hw_raw_requests")
Link: https://patch.msgid.link/20240701-fix-cki-v2-3-20564e2e1393@kernel.org
Signed-off-by: Benjamin Tissoires <bentiss@kernel.org>

  Parent Hashes: 762ced1630a97a457ad2fd5f5a36849009808431
  Refs: 

- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'Fix documentation errors for HID-BPF related to hid_hw_request() hooks.', 'keywords': 'HID,BPF,documentation', 'commit_classification': "It's a documentation change or typo fix.", 'commit_complexity': 'Simple, can be used without much configuration. For example, a simple helper function.', 'Major related component': 'Other component related to eBPF but not listed above.', 'program_types_related': ['HID driver like programs']}
--------------------
--------------------
Processing Commit ID: 762ced1630a97a457ad2fd5f5a36849009808431
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: 762ced1630a97a457ad2fd5f5a36849009808431
  Author Name: Benjamin Tissoires
  Author Email: bentiss@kernel.org
  Commit Date: 1719838091
  Commit Message:
    HID: bpf: fix gcc warning and unify __u64 into u64

I've got multiple reports of:
error: cast from pointer to integer of different size
[-Werror=pointer-to-int-cast].

Let's use the same trick than kernel/bpf/helpers.c to shut up that warning.

Even if we were on an architecture with addresses on more than 64 bits
  Parent Hashes: fcdf830ea634cf0ee6543b6cd6a4932f92464fc7
  Refs: 
this isn't much of an issue as the address is not used as a pointer

- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'Fixes a gcc warning by unifying pointer casting to consistent u64 type in HID BPF implementation.', 'keywords': 'gcc warning, unify u64, pointer casting', 'commit_classification': "It's a bug fix.", 'commit_complexity': 'Simple, can be used without much configuration. For example, a simple helper function.', 'Major related component': 'The helper and kfuncs', 'program_types_related': ['HID driver like programs']}
--------------------
--------------------
Processing Commit ID: fcdf830ea634cf0ee6543b6cd6a4932f92464fc7
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: fcdf830ea634cf0ee6543b6cd6a4932f92464fc7
  Author Name: Benjamin Tissoires
  Author Email: bentiss@kernel.org
  Commit Date: 1719838083
  Commit Message:
    selftests/hid: ensure CKI can compile our new tests on old kernels

In the same way than commit ae7487d112cf ("selftests/hid: ensure we can
compile the tests on kernels pre-6.3") we should expose struct hid_bpf_ops
when it's not available in vmlinux.h.

So unexpose an eventual struct hid_bpf_ops
  Parent Hashes: d3e15189bfd4d0a9d3a7ad8bd0e6ebb1c0419f93
  Refs:  include vmlinux.h

- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'Modify selftests to ensure compatibility with older kernels by managing the struct hid_bpf_ops exposure.', 'keywords': 'selftests, compatibility, hid_bpf_ops', 'commit_classification': "It's a test case or test infrastructure change.", 'commit_complexity': 'Moderate, requires some setup or understanding of the system. For example, a new map type or a new link type.', 'Major related component': 'Other component related to eBPF but not listed above.', 'program_types_related': ['HID driver like programs']}
--------------------
--------------------
Processing Commit ID: d04bccd8c19d601232ed3e3c9e248c0040167d47
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: d04bccd8c19d601232ed3e3c9e248c0040167d47
  Author Name: Christian Brauner
  Author Email: brauner@kernel.org
  Commit Date: 1719561209
  Commit Message:
    listmount: allow listing in reverse order

util-linux is about to implement listmount() and statmount() support.
Karel requested the ability to scan the mount table in backwards order
because that's what libmount currently does in order to get the latest
mount first. We currently don't support this in listmount(). Add a new
LISTMOUNT_REVERSE flag to allow listing mounts in reverse order. For
example
  Parent Hashes: 17e70161281bb66316e94e63a15d1a8498bf6f01
  Refs:  listing all child mounts of /sys without LISTMOUNT_REVERSE
gives:

    /sys/kernel/security @ mnt_id: 4294968369
    /sys/fs/cgroup @ mnt_id: 4294968370
    /sys/firmware/efi/efivars @ mnt_id: 4294968371
    /sys/fs/bpf @ mnt_id: 4294968372
    /sys/kernel/tracing @ mnt_id: 4294968373
    /sys/kernel/debug @ mnt_id: 4294968374
    /sys/fs/fuse/connections @ mnt_id: 4294968375
    /sys/kernel/config @ mnt_id: 4294968376

whereas with LISTMOUNT_REVERSE it gives:

    /sys/kernel/config @ mnt_id: 4294968376
    /sys/fs/fuse/connections @ mnt_id: 4294968375
    /sys/kernel/debug @ mnt_id: 4294968374
    /sys/kernel/tracing @ mnt_id: 4294968373
    /sys/fs/bpf @ mnt_id: 4294968372
    /sys/firmware/efi/efivars @ mnt_id: 4294968371
    /sys/fs/cgroup @ mnt_id: 4294968370
    /sys/kernel/security @ mnt_id: 4294968369

Link: https://lore.kernel.org/r/20240607-vfs-listmount-reverse-v1-4-7877a2bfa5e5@kernel.org
Reviewed-by: Josef Bacik <josef@toxicpanda.com>
Signed-off-by: Christian Brauner <brauner@kernel.org>


- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'The commit adds a LISTMOUNT_REVERSE flag to support listing mount points in reverse order.', 'keywords': 'listmount, reverse, mount', 'commit_classification': "It's a new feature.", 'commit_complexity': 'Simple, can be used without much configuration. For example, a simple helper function.', 'Major related component': 'Other component related to eBPF but not listed above.', 'program_types_related': ["It's not related to any of the above."]}
--------------------
--------------------
Processing Commit ID: fd19d4a492af77b1e8fb0439781a3048d1d1f554
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: fd19d4a492af77b1e8fb0439781a3048d1d1f554
  Author Name: Linus Torvalds
  Author Email: torvalds@linux-foundation.org
  Commit Date: 1719507935
  Commit Message:
    Merge tag 'net-6.10-rc6' of git://git.kernel.org/pub/scm/linux/kernel/git/netdev/net

Pull networking fixes from Paolo Abeni:
 "Including fixes from can
  Parent Hashes: 3c1d29e53d34537063e60f5eafe0482780a1735a b62cb6a7e83622783100182d9b70e9c70393cfbe
  Refs:  bpf and netfilter.

  There are a bunch of regressions addressed here

- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'This commit merges networking fixes addressing regressions in the kernel from the netdev and netfilter repositories.', 'keywords': 'networking, fixes, regressions', 'commit_classification': "It's other type of commit.", 'commit_complexity': 'Moderate, requires some setup or understanding of the system. For example, a new map type or a new link type.', 'Major related component': "It's not related to any of the above, it's not related to bpf subsystem in Linux kernel, may be wrong data.", 'program_types_related': ["It's not related to any of the above."]}
--------------------
--------------------
Processing Commit ID: 7e1f4eb9a60d40dd17a97d9b76818682a024a127
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: 7e1f4eb9a60d40dd17a97d9b76818682a024a127
  Author Name: Arnd Bergmann
  Author Email: arnd@arndb.de
  Commit Date: 1719503020
  Commit Message:
    kallsyms: rework symbol lookup return codes

Building with W=1 in some configurations produces a false positive
warning for kallsyms:

kernel/kallsyms.c: In function '__sprint_symbol.isra':
kernel/kallsyms.c:503:17: error: 'strcpy' source argument is the same as destination [-Werror=restrict]
  503 |                 strcpy(buffer
  Parent Hashes: 0fa8ab5f3533b307a7d0e438ab08ecd92725dad7
  Refs:  name);
      |                 ^~~~~~~~~~~~~~~~~~~~

This originally showed up while building with -O3

- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'Reworked symbol lookup return codes to fix a false positive warning in kallsyms when built with W=1.', 'keywords': 'kallsyms, symbol lookup, warning', 'commit_classification': "It's a bug fix.", 'commit_complexity': 'Moderate, requires some setup or understanding of the system. For example, a new map type or a new link type.', 'Major related component': 'Other component related to eBPF but not listed above.', 'program_types_related': ["It's not related to any of the above."]}
--------------------
--------------------
Processing Commit ID: d3e15189bfd4d0a9d3a7ad8bd0e6ebb1c0419f93
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: d3e15189bfd4d0a9d3a7ad8bd0e6ebb1c0419f93
  Author Name: Benjamin Tissoires
  Author Email: bentiss@kernel.org
  Commit Date: 1719478849
  Commit Message:
    selftests/hid: add an infinite loop test for hid_bpf_try_input_report

We don't want this call to allow an infinite loop in HID-BPF
  Parent Hashes: 62f2e1a096cd4380eca7e55fa4369d50a8536ab8
  Refs:  so let's
have some tests.

Link: https://patch.msgid.link/20240626-hid_hw_req_bpf-v2-13-cfd60fb6c79f@kernel.org
Acked-by: Jiri Kosina <jkosina@suse.com>
Signed-off-by: Benjamin Tissoires <bentiss@kernel.org>


- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'Add infinite loop test case for hid_bpf_try_input_report in HID selftests.', 'keywords': 'infinite loop, HID, tests', 'commit_classification': "It's a test case or test infrastructure change.", 'commit_complexity': 'Simple, can be used without much configuration. For example, a simple helper function.', 'Major related component': 'The test cases and makefiles', 'program_types_related': ['HID driver like programs']}
--------------------
--------------------
Processing Commit ID: 62f2e1a096cd4380eca7e55fa4369d50a8536ab8
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: 62f2e1a096cd4380eca7e55fa4369d50a8536ab8
  Author Name: Benjamin Tissoires
  Author Email: bentiss@kernel.org
  Commit Date: 1719478849
  Commit Message:
    selftests/hid: add another test for injecting an event from an event hook

Similar to test_multiply_events_wq: we receive one event and inject a
new one. But given that this time we are already in the event hook
  Parent Hashes: 9acbb7ba4589d4715141d4e14230a828ddc95f3d
  Refs:  we
can use hid_bpf_try_input_report() directly as this function will not
sleep.

Note that the injected event gets processed before the original one this
way.

Link: https://patch.msgid.link/20240626-hid_hw_req_bpf-v2-12-cfd60fb6c79f@kernel.org
Acked-by: Jiri Kosina <jkosina@suse.com>
Signed-off-by: Benjamin Tissoires <bentiss@kernel.org>


- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'Add a selftest for event injection in HID drivers using an event hook.', 'keywords': 'selftest,HID,event injection', 'commit_classification': "It's a test case or test infrastructure change.", 'commit_complexity': 'Moderate, requires some setup or understanding of the system. For example, a new map type or a new link type.', 'Major related component': 'The test cases and makefiles', 'program_types_related': ['HID driver like programs']}
--------------------
--------------------
Processing Commit ID: 9acbb7ba4589d4715141d4e14230a828ddc95f3d
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: 9acbb7ba4589d4715141d4e14230a828ddc95f3d
  Author Name: Benjamin Tissoires
  Author Email: bentiss@kernel.org
  Commit Date: 1719478848
  Commit Message:
    HID: bpf: allow hid_device_event hooks to inject input reports on self

This is the same logic than hid_hw_raw_request or hid_hw_output_report:
we can allow hid_bpf_try_input_report to be called from a hook on
hid_input_report if we ensure that the call can not be made twice in a
row.

There is one extra subtlety in which there is a lock in hid_input_report.
But given that we can detect if we are already in the hook
  Parent Hashes: fe8d561db3e82a1130c59ebc143d557b0bdb0cff
  Refs:  we can notify
hid_input_report to not take the lock. This is done by checking if
ctx_kern data is valid or null

- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'The commit allows HID BPF hooks to inject input reports on the device itself, ensuring no repeated calls.', 'keywords': 'HID, input, hook', 'commit_classification': "It's a new feature.", 'commit_complexity': 'Moderate, requires some setup or understanding of the system. For example, a new map type or a new link type.', 'Major related component': 'Other component related to eBPF but not listed above.', 'program_types_related': ['HID driver like programs']}
--------------------
--------------------
Processing Commit ID: fe8d561db3e82a1130c59ebc143d557b0bdb0cff
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: fe8d561db3e82a1130c59ebc143d557b0bdb0cff
  Author Name: Benjamin Tissoires
  Author Email: bentiss@kernel.org
  Commit Date: 1719478848
  Commit Message:
    selftests/hid: add wq test for hid_bpf_input_report()

Now that bpf_wq is available
  Parent Hashes: fa03f398a8ac46f46927e0b509b302ebe0ed7e8a
  Refs:  we can write a test with it. Having
hid_bpf_input_report() waiting for the device means that we can
directly call it

- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'Add selftest for hid_bpf_input_report using bpf_wq in HID driver.', 'keywords': 'selftests,hid_bpf_input_report,bpf_wq', 'commit_classification': "It's a test case or test infrastructure change.", 'commit_complexity': 'Moderate, requires some setup or understanding of the system. For example, a new map type or a new link type.', 'Major related component': 'The test cases and makefiles', 'program_types_related': ['HID driver like programs']}
--------------------
--------------------
Processing Commit ID: fa03f398a8ac46f46927e0b509b302ebe0ed7e8a
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: fa03f398a8ac46f46927e0b509b302ebe0ed7e8a
  Author Name: Benjamin Tissoires
  Author Email: bentiss@kernel.org
  Commit Date: 1719478848
  Commit Message:
    HID: bpf: make hid_bpf_input_report() sleep until the device is ready

hid_bpf_input_report() is already marked to be used in sleepable context
only. So instead of hammering with timers the device to hopefully get
an available slot where the device is not sending events
  Parent Hashes: 3ac83fcd6e67c86d25040e6818972f2c36b51d23
  Refs:  we can make
that kfunc wait for the current event to be terminated before it goes in.

This allows to work with the following pseudo code:

in struct_ops/hid_device_event:
  - schedule a bpf_wq

- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'The commit modifies hid_bpf_input_report() to wait until the device is ready.', 'keywords': 'HID,sleep,context', 'commit_classification': "It's a cleanup or refactoring in the code.", 'commit_complexity': 'Moderate, requires some setup or understanding of the system. For example, a new map type or a new link type.', 'Major related component': 'The helper and kfuncs', 'program_types_related': ['HID driver like programs']}
--------------------
--------------------
Processing Commit ID: 3ac83fcd6e67c86d25040e6818972f2c36b51d23
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: 3ac83fcd6e67c86d25040e6818972f2c36b51d23
  Author Name: Benjamin Tissoires
  Author Email: bentiss@kernel.org
  Commit Date: 1719478848
  Commit Message:
    selftests/hid: add tests for hid_hw_output_report HID-BPF hooks

We add 3 new tests:
- first
  Parent Hashes: 9286675a2aed40a517be8cc4e283a04f473275b5
  Refs:  we make sure we can prevent the output_report to happen
- second

- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'Added three new selftests for hid_hw_output_report HID-BPF hooks.', 'keywords': 'selftests,hid,BPF', 'commit_classification': "It's a test case or test infrastructure change.", 'commit_complexity': 'Simple, can be used without much configuration. For example, a simple helper function.', 'Major related component': 'The test cases and makefiles', 'program_types_related': ['HID driver like programs']}
--------------------
--------------------
Processing Commit ID: 9286675a2aed40a517be8cc4e283a04f473275b5
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: 9286675a2aed40a517be8cc4e283a04f473275b5
  Author Name: Benjamin Tissoires
  Author Email: bentiss@kernel.org
  Commit Date: 1719478845
  Commit Message:
    HID: bpf: add HID-BPF hooks for hid_hw_output_report

Same story than hid_hw_raw_requests:

This allows to intercept and prevent or change the behavior of
hid_hw_output_report() from a bpf program.

The intent is to solve a couple of use case:
  - firewalling a HID device: a firewall can monitor who opens the hidraw
    nodes and then prevent or allow access to write operations on that
    hidraw node.
  - change the behavior of a device and emulate a new HID feature request

The hook is allowed to be run as sleepable so it can itself call
hid_hw_output_report()
  Parent Hashes: 015a4a2a439b285943da471d38b2721bbe4d8b39
  Refs:  which allows to "convert" one feature request into
another or even call the feature request on a different HID device on the
same physical device.

Link: https://patch.msgid.link/20240626-hid_hw_req_bpf-v2-7-cfd60fb6c79f@kernel.org
Acked-by: Jiri Kosina <jkosina@suse.com>
Signed-off-by: Benjamin Tissoires <bentiss@kernel.org>


- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'The commit introduces HID-BPF hooks for intercepting and modifying hid_hw_output_report behaviors.', 'keywords': 'HID-BPF, hooks, intercept', 'commit_classification': "It's a new feature.", 'commit_complexity': 'Moderate, requires some setup or understanding of the system. For example, a new map type or a new link type.', 'Major related component': 'The attach events and bpf link. e.g. perf events, tracepoints, etc.', 'program_types_related': ['HID driver like programs']}
--------------------
--------------------
Processing Commit ID: 015a4a2a439b285943da471d38b2721bbe4d8b39
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: 015a4a2a439b285943da471d38b2721bbe4d8b39
  Author Name: Benjamin Tissoires
  Author Email: bentiss@kernel.org
  Commit Date: 1719478812
  Commit Message:
    selftests/hid: add tests for hid_hw_raw_request HID-BPF hooks

We add 3 new tests:
- first
  Parent Hashes: 75839101ce52e319cb2154a027d14f1f0aa3be09
  Refs:  we make sure we can prevent the raw_request to happen
- second

- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'Added self-tests for HID-BPF hooks using hid_hw_raw_request.', 'keywords': 'self-tests,HID-BPF,hooks', 'commit_classification': "It's a test case or test infrastructure change.", 'commit_complexity': 'Moderate, requires some setup or understanding of the system. For example, a new map type or a new link type.', 'Major related component': 'The test cases and makefiles', 'program_types_related': ['HID driver like programs']}
--------------------
--------------------
Processing Commit ID: 75839101ce52e319cb2154a027d14f1f0aa3be09
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: 75839101ce52e319cb2154a027d14f1f0aa3be09
  Author Name: Benjamin Tissoires
  Author Email: bentiss@kernel.org
  Commit Date: 1719478812
  Commit Message:
    HID: bpf: prevent infinite recursions with hid_hw_raw_requests hooks

When we attach a sleepable hook to hid_hw_raw_requests
  Parent Hashes: 8bd0488b5ea58655ad6fdcbe0408ef49b16882b1
  Refs:  we can (and in
many cases should) call ourself hid_bpf_raw_request()

- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'Prevent infinite recursion in HID BPF raw requests with sleepable hooks.', 'keywords': 'HID,BPF,infinite recursion', 'commit_classification': "It's a bug fix.", 'commit_complexity': 'Moderate, requires some setup or understanding of the system. For example, a new map type or a new link type.', 'Major related component': 'Other component related to eBPF but not listed above.', 'program_types_related': ['HID driver like programs']}
--------------------
--------------------
Processing Commit ID: 8bd0488b5ea58655ad6fdcbe0408ef49b16882b1
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: 8bd0488b5ea58655ad6fdcbe0408ef49b16882b1
  Author Name: Benjamin Tissoires
  Author Email: bentiss@kernel.org
  Commit Date: 1719478807
  Commit Message:
    HID: bpf: add HID-BPF hooks for hid_hw_raw_requests

This allows to intercept and prevent or change the behavior of
hid_hw_raw_request() from a bpf program.

The intent is to solve a couple of use case:
- firewalling a HID device: a firewall can monitor who opens the hidraw
  nodes and then prevent or allow access to write operations on that
  hidraw node.
- change the behavior of a device and emulate a new HID feature request

The hook is allowed to be run as sleepable so it can itself call
hid_bpf_hw_request()
  Parent Hashes: 6cd735f0e57a6c8510ad92f5b63837a8d0cff3a7
  Refs:  which allows to "convert" one feature request into
another or even call the feature request on a different HID device on the
same physical device.

Link: https://patch.msgid.link/20240626-hid_hw_req_bpf-v2-4-cfd60fb6c79f@kernel.org
Acked-by: Jiri Kosina <jkosina@suse.com>
Signed-off-by: Benjamin Tissoires <bentiss@kernel.org>


- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'Added HID-BPF hooks to intercept and modify hid_hw_raw_requests.', 'keywords': 'HID-BPF,hooks,intercept', 'commit_classification': "It's a new feature.", 'commit_complexity': "Complex, needs expert knowledge or significant changes to existing systems. Like adding a completely new subsystem support or a completely new program type don't exist before.", 'Major related component': 'The attach events and bpf link. e.g. perf events, tracepoints, etc.', 'program_types_related': ['HID driver like programs']}
--------------------
--------------------
Processing Commit ID: 6cd735f0e57a6c8510ad92f5b63837a8d0cff3a7
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: 6cd735f0e57a6c8510ad92f5b63837a8d0cff3a7
  Author Name: Benjamin Tissoires
  Author Email: bentiss@kernel.org
  Commit Date: 1719478702
  Commit Message:
    HID: bpf: protect HID-BPF prog_list access by a SRCU

We want to add sleepable callbacks for hid_hw_raw_request() and
hid_hw_output_report()
  Parent Hashes: 67eccf151d76a9939ad8a50c6db5cb486b01df24
  Refs:  but we can not use a plain RCU for those.

Prepare for a SRCU so we can extend HID-BPF.

This changes a little bit how hid_bpf_device_init() behaves

- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'Introduce SRCU to protect HID-BPF prog_list access and enable sleepable callbacks for certain HID functions.', 'keywords': 'SRCU,HID-BPF,callbacks', 'commit_classification': "It's a new feature.", 'commit_complexity': 'Moderate, requires some setup or understanding of the system. For example, a new map type or a new link type.', 'Major related component': 'The attach events and bpf link. e.g. perf events, tracepoints, etc.', 'program_types_related': ['HID driver like programs']}
--------------------
--------------------
Processing Commit ID: 67eccf151d76a9939ad8a50c6db5cb486b01df24
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: 67eccf151d76a9939ad8a50c6db5cb486b01df24
  Author Name: Benjamin Tissoires
  Author Email: bentiss@kernel.org
  Commit Date: 1719478699
  Commit Message:
    HID: add source argument to HID low level functions

This allows to know who actually sent what when we process the request
to the device.
This will be useful for a BPF firewall program to allow or not requests
coming from a dedicated hidraw node client.

Link: https://patch.msgid.link/20240626-hid_hw_req_bpf-v2-2-cfd60fb6c79f@kernel.org
Acked-by: Jiri Kosina <jkosina@suse.com>
Signed-off-by: Benjamin Tissoires <bentiss@kernel.org>

  Parent Hashes: ebae0b2a6f4b3b949f30f076fbc65d3b0bb04785
  Refs: 

- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'Added a source argument to HID low-level functions for BPF firewall use in managing requests.', 'keywords': 'HID,BPF,firewall', 'commit_classification': "It's a new feature.", 'commit_complexity': 'Moderate, requires some setup or understanding of the system. For example, a new map type or a new link type.', 'Major related component': 'Other component related to eBPF but not listed above.', 'program_types_related': ['HID driver like programs', 'It improves the overall eBPF infrastructure (e.g., verifier, runtime, etc.).']}
--------------------
--------------------
Processing Commit ID: ebae0b2a6f4b3b949f30f076fbc65d3b0bb04785
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: ebae0b2a6f4b3b949f30f076fbc65d3b0bb04785
  Author Name: Benjamin Tissoires
  Author Email: bentiss@kernel.org
  Commit Date: 1719478680
  Commit Message:
    HID: bpf: fix dispatch_hid_bpf_device_event uninitialized ret value

Looks like if a bpf program gets inserted and then removed
  Parent Hashes: 9e16bada9299d74fcce1f6b03606a08a2c16da81
  Refs: 
hdev->bpf.device_data is then allocated

- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'Fixes uninitialized return value in dispatch_hid_bpf_device_event function.', 'keywords': 'fix, HID, uninitialized', 'commit_classification': "It's a bug fix.", 'commit_complexity': 'Simple, can be used without much configuration. For example, a simple helper function.', 'Major related component': 'Other component related to eBPF but not listed above.', 'program_types_related': ['HID driver like programs']}
--------------------
--------------------
Processing Commit ID: 9e16bada9299d74fcce1f6b03606a08a2c16da81
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: 9e16bada9299d74fcce1f6b03606a08a2c16da81
  Author Name: Luis Felipe Hernandez
  Author Email: luis.hernandez093@gmail.com
  Commit Date: 1719472900
  Commit Message:
    hid: bpf: Fix grammar

* spelling fix: XBox -> Xbox
  Parent Hashes: 33c0fb85b571b0f1bbdbf466e770eebeb29e6f41
  Refs:  lowercase 'b' as per Microsoft branding
* rephrase: paddle -> paddles

- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'This commit fixes grammatical and spelling issues in the HID BPF documentation, including correct branding of Xbox.', 'keywords': 'grammar, spelling, Xbox', 'commit_classification': "It's a documentation change or typo fix.", 'commit_complexity': 'Simple, can be used without much configuration. For example, a simple helper function.', 'Major related component': 'The helper and kfuncs', 'program_types_related': ['HID driver like programs']}
--------------------
--------------------
Processing Commit ID: a12978712d9001b060bcc10eaae42ad5102abe2b
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: a12978712d9001b060bcc10eaae42ad5102abe2b
  Author Name: Jiri Olsa
  Author Email: jolsa@kernel.org
  Commit Date: 1719446923
  Commit Message:
    selftests/bpf: Move ARRAY_SIZE to bpf_misc.h

ARRAY_SIZE is used on multiple places
  Parent Hashes: 0f31c2c61f6923747628c65a0fe36b2d4d7e21b0
  Refs:  move its definition in
bpf_misc.h header.

Signed-off-by: Jiri Olsa <jolsa@kernel.org>
Signed-off-by: Andrii Nakryiko <andrii@kernel.org>
Reviewed-by: Alan Maguire <alan.maguire@oracle.com>
Link: https://lore.kernel.org/bpf/20240626134719.3893748-1-jolsa@kernel.org


- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'The commit moves ARRAY_SIZE definition to bpf_misc.h to centralize its usage.', 'keywords': 'ARRAY_SIZE, bpf_misc.h, selftests', 'commit_classification': "It's a cleanup or refactoring in the code.", 'commit_complexity': 'Simple, can be used without much configuration. For example, a simple helper function.', 'Major related component': 'The test cases and makefiles', 'program_types_related': ["It's not related to any of the above."]}
--------------------
--------------------
Processing Commit ID: 0f31c2c61f6923747628c65a0fe36b2d4d7e21b0
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: 0f31c2c61f6923747628c65a0fe36b2d4d7e21b0
  Author Name: Alan Maguire
  Author Email: alan.maguire@oracle.com
  Commit Date: 1719445139
  Commit Message:
    libbpf: Fix clang compilation error in btf_relocate.c

When building with clang for ARCH=i386
  Parent Hashes: d07980f7373b4c57c85478f8e815cc7b9b394c05
  Refs:  the following errors are
observed:

  CC      kernel/bpf/btf_relocate.o
./tools/lib/bpf/btf_relocate.c:206:23: error: implicit truncation from 'int' to a one-bit wide bit-field changes value from 1 to -1 [-Werror

- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'Fixed a clang compilation error in btf_relocate.c for i386 architecture.', 'keywords': 'clang, compilation, btf_relocate.c', 'commit_classification': "It's a bug fix.", 'commit_complexity': 'Moderate, requires some setup or understanding of the system. For example, a new map type or a new link type.', 'Major related component': 'The libbpf library', 'program_types_related': ['It improves the overall eBPF infrastructure (e.g., verifier, runtime, etc.).']}
--------------------
--------------------
Processing Commit ID: d07980f7373b4c57c85478f8e815cc7b9b394c05
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: d07980f7373b4c57c85478f8e815cc7b9b394c05
  Author Name: Ma Ke
  Author Email: make24@iscas.ac.cn
  Commit Date: 1719445019
  Commit Message:
    selftests/bpf: Don't close(-1) in serial_test_fexit_stress()

Guard close() with extra link_fd[i] > 0 and fexit_fd[i] > 0
check to prevent close(-1).

Signed-off-by: Ma Ke <make24@iscas.ac.cn>
Signed-off-by: Andrii Nakryiko <andrii@kernel.org>
Link: https://lore.kernel.org/bpf/20240623131753.2133829-1-make24@iscas.ac.cn

  Parent Hashes: aa293983d2020390e286544b120f3cd0a3d40749
  Refs: 

- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'Add checks to prevent closing file descriptors with invalid values in fexit_stress test.', 'keywords': 'close, file descriptors, serial_test_fexit_stress', 'commit_classification': "It's a test case or test infrastructure change.", 'commit_complexity': 'Simple, can be used without much configuration. For example, a simple helper function.', 'Major related component': 'The test cases and makefiles', 'program_types_related': ['other']}
--------------------
--------------------
Processing Commit ID: aa293983d2020390e286544b120f3cd0a3d40749
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: aa293983d2020390e286544b120f3cd0a3d40749
  Author Name: Matt Bobrowski
  Author Email: mattbobrowski@google.com
  Commit Date: 1719433052
  Commit Message:
    bpf: add new negative selftests to cover missing check_func_arg_reg_off() and reg->type check

Add new negative selftests which are intended to cover the
out-of-bounds memory access that could be performed on a
CONST_PTR_TO_DYNPTR within functions taking a ARG_PTR_TO_DYNPTR |
MEM_RDONLY as an argument
  Parent Hashes: ec2b9a5e11e51fea1bb04c1e7e471952e887e874
  Refs:  and acceptance of invalid register types
i.e. PTR_TO_BTF_ID within functions taking a ARG_PTR_TO_DYNPTR |
MEM_RDONLY.

Reported-by: Kumar Kartikeya Dwivedi <memxor@gmail.com>
Acked-by: Kumar Kartikeya Dwivedi <memxor@gmail.com>
Acked-by: Eduard Zingerman <eddyz87@gmail.com>
Signed-off-by: Matt Bobrowski <mattbobrowski@google.com>
Link: https://lore.kernel.org/r/20240625062857.92760-2-mattbobrowski@google.com
Signed-off-by: Alexei Starovoitov <ast@kernel.org>


- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'Added new negative selftests to check out-of-bounds access and invalid register types in eBPF functions.', 'keywords': 'negative selftests,bpf,eBPF', 'commit_classification': "It's a test case or test infrastructure change.", 'commit_complexity': 'Moderate, requires some setup or understanding of the system. For example, a new map type or a new link type.', 'Major related component': 'The test cases and makefiles', 'program_types_related': ['It improves the overall eBPF infrastructure (e.g., verifier, runtime, etc.).']}
--------------------
--------------------
Processing Commit ID: ec2b9a5e11e51fea1bb04c1e7e471952e887e874
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: ec2b9a5e11e51fea1bb04c1e7e471952e887e874
  Author Name: Matt Bobrowski
  Author Email: mattbobrowski@google.com
  Commit Date: 1719433052
  Commit Message:
    bpf: add missing check_func_arg_reg_off() to prevent out-of-bounds memory accesses

Currently
  Parent Hashes: d65f3767de20782e75d8a665fdc54f822f344802
  Refs:  it's possible to pass in a modified CONST_PTR_TO_DYNPTR to
a global function as an argument. The adverse effects of this is that
BPF helpers can continue to make use of this modified
CONST_PTR_TO_DYNPTR from within the context of the global function

- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'Add missing check in BPF to prevent out-of-bounds memory access with CONST_PTR_TO_DYNPTR.', 'keywords': 'check memory access', 'commit_classification': "It's a bug fix.", 'commit_complexity': 'Moderate, requires some setup or understanding of the system. For example, a new map type or a new link type.', 'Major related component': 'The helper and kfuncs', 'program_types_related': ['It improves the overall eBPF infrastructure (e.g., verifier, runtime, etc.).']}
--------------------
--------------------
Processing Commit ID: e8b86f0311a4b721663df8105a680e5968f21d4c
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: e8b86f0311a4b721663df8105a680e5968f21d4c
  Author Name: Veronika Molnarova
  Author Email: vmolnaro@redhat.com
  Commit Date: 1719425458
  Commit Message:
    perf test stat_bpf_counter.sh: Stabilize the test results

The test has been failing for some time when two separate runs of
perf benchmarks are recorded for cycles events and their counts are
compared
  Parent Hashes: e4b19e2cc3e5f9be8f159ba0b4ba6aed8d993abf
  Refs:  while once the recording was done with option --bpf-counters
and once without it. It is expected that the count of the samples
should be within a certain range

- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': "The commit stabilizes test results for perf's stat_bpf_counter.sh by ensuring cycle event counts match expectations with and without --bpf-counters.", 'keywords': 'stabilize,test results,perf', 'commit_classification': "It's a test case or test infrastructure change.", 'commit_complexity': 'Moderate, requires some setup or understanding of the system. For example, a new map type or a new link type.', 'Major related component': 'The test cases and makefiles', 'program_types_related': ['tracepoints like programs']}
--------------------
--------------------
Processing Commit ID: 9dabf4003423c8d3a2f4f8915c3ff2f1158302a0
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: 9dabf4003423c8d3a2f4f8915c3ff2f1158302a0
  Author Name: Ian Rogers
  Author Email: irogers@google.com
  Commit Date: 1719425280
  Commit Message:
    perf python: Switch module to linking libraries from building source

setup.py was building most perf sources causing setup.py to mimic the
Makefile logic as well as flex/bison code to be stubbed out
  Parent Hashes: e467705a9fb37f51595aa6deaca085ccb4005454
  Refs:  due to
complexity building. By using libraries fewer functions are stubbed
out

- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'Switch perf Python module to link libraries instead of building from source for reduced complexity.', 'keywords': 'perf, libraries, setup.py', 'commit_classification': "It's a build system or CI/CD change.", 'commit_complexity': 'Moderate, requires some setup or understanding of the system. For example, a new map type or a new link type.', 'Major related component': "It's not related to any of the above, it's not related to bpf subsystem in Linux kernel, may be wrong data.", 'program_types_related': ["It's not related to any of the above."]}
--------------------
--------------------
Processing Commit ID: 60a6707f582ebbdfb6b378f45d7bf929106a1cd5
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: 60a6707f582ebbdfb6b378f45d7bf929106a1cd5
  Author Name: Palmer Dabbelt
  Author Email: palmer@rivosinc.com
  Commit Date: 1719416587
  Commit Message:
    Merge patch series "riscv: Memory Hot(Un)Plug support"

Björn Töpel <bjorn@kernel.org> says:

From: Björn Töpel <bjorn@rivosinc.com>

================================================================
Memory Hot(Un)Plug support (and ZONE_DEVICE) for the RISC-V port
================================================================

Introduction
============

To quote "Documentation/admin-guide/mm/memory-hotplug.rst": "Memory
hot(un)plug allows for increasing and decreasing the size of physical
memory available to a machine at runtime."

This series adds memory hot(un)plugging
  Parent Hashes: d6ecd188937fcddeffb37efc61b67a56809b266a 4705c1571ad39d9469321d2817faf4c4b78ddffb
  Refs:  and ZONE_DEVICE support for
the RISC-V Linux port.

MM configuration
================

RISC-V MM has the following configuration:

 * Memory blocks are 128M

- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'Adds memory hot(un)plug and ZONE_DEVICE support for RISC-V in the Linux port.', 'keywords': 'RISC-V, memory hotplug, ZONE_DEVICE', 'commit_classification': "It's a new feature.", 'commit_complexity': "Complex, needs expert knowledge or significant changes to existing systems. Like adding a completely new subsystem support or a completely new program type don't exist before.", 'Major related component': 'Other component related to eBPF but not listed above.', 'program_types_related': ["It's not related to any of the above."]}
--------------------
--------------------
Processing Commit ID: 66673099f734fd6512055fee353b5c81dafec216
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: 66673099f734fd6512055fee353b5c81dafec216
  Author Name: Björn Töpel
  Author Email: bjorn@rivosinc.com
  Commit Date: 1719416559
  Commit Message:
    riscv: mm: Pre-allocate vmemmap/direct map/kasan PGD entries

The RISC-V port copies the PGD table from init_mm/swapper_pg_dir to
all userland page tables
  Parent Hashes: e3ecf2fdc8f39a898f9e06481e935b460a097e10
  Refs:  which means that if the PGD level table is
changed

- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'This commit pre-allocates vmemmap/direct map/kasan PGD entries for RISC-V architecture in Linux kernel.', 'keywords': 'RISC-V, PGD, pre-allocate', 'commit_classification': "It's other type of commit.", 'commit_complexity': 'Moderate, requires some setup or understanding of the system. For example, a new map type or a new link type.', 'Major related component': 'Other component related to eBPF but not listed above.', 'program_types_related': ["It's not related to any of the above."]}
--------------------
--------------------
Processing Commit ID: d65f3767de20782e75d8a665fdc54f822f344802
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: d65f3767de20782e75d8a665fdc54f822f344802
  Author Name: Leon Hwang
  Author Email: hffilwlqm@gmail.com
  Commit Date: 1719364364
  Commit Message:
    bpf: Fix tailcall cases in test_bpf

Since f663a03c8e35 ("bpf
  Parent Hashes: c73a9683cb21012b6c0f14217974837151c527a8
  Refs:  x64: Remove tail call detection")

- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'Fixes issues with tailcall execution in BPF test cases.', 'keywords': 'bpf, tailcall, test', 'commit_classification': "It's a bug fix.", 'commit_complexity': 'Simple, can be used without much configuration. For example, a simple helper function.', 'Major related component': 'The test cases and makefiles', 'program_types_related': ['It improves the overall eBPF infrastructure (e.g., verifier, runtime, etc.).']}
--------------------
--------------------
Processing Commit ID: 637c26f9b02d9c72448fcd5c9c4e3b08015404fc
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: 637c26f9b02d9c72448fcd5c9c4e3b08015404fc
  Author Name: Andrii Nakryiko
  Author Email: andrii@kernel.org
  Commit Date: 1719278138
  Commit Message:
    selftests/bpf: add test validating uprobe/uretprobe stack traces

Add a set of tests to validate that stack traces captured from or in the
presence of active uprobes and uretprobes are valid and complete.

For this we use BPF program that are installed either on entry or exit
of user function
  Parent Hashes: 4a365eb8a6d9940e838739935f1ce21f1ec8e33f
  Refs:  plus deep-nested USDT. One of target funtions
(target_1) is recursive to generate two different entries in the stack
trace for the same uprobe/uretprobe

- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'Add tests for validating stack traces with active uprobes and uretprobes in selftests.', 'keywords': 'test,uprobes,stack traces', 'commit_classification': "It's a test case or test infrastructure change.", 'commit_complexity': 'Moderate, requires some setup or understanding of the system. For example, a new map type or a new link type.', 'Major related component': 'The test cases and makefiles', 'program_types_related': ['kprobe/uprobe/ftrace like programs']}
--------------------
--------------------
Processing Commit ID: 482000cf7fd5ff42214c0d71f30ed42c55bcb00a
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: 482000cf7fd5ff42214c0d71f30ed42c55bcb00a
  Author Name: Jakub Kicinski
  Author Email: kuba@kernel.org
  Commit Date: 1719278122
  Commit Message:
    Merge tag 'for-netdev' of ssh://gitolite.kernel.org/pub/scm/linux/kernel/git/bpf/bpf

Daniel Borkmann says:

====================
pull-request: bpf 2024-06-24

We've added 12 non-merge commits during the last 10 day(s) which contain
a total of 10 files changed
  Parent Hashes: 058722ee350c0bdd664e467156feb2bf5d9cc271 7e9f79428372c6eab92271390851be34ab26bfb4
  Refs:  412 insertions(+)

- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'Merge pull request for bpf branch containing 12 non-merge commits and 412 insertions over 10 days.', 'keywords': 'merge, pull request, bpf', 'commit_classification': "It's other type of commit.", 'commit_complexity': 'Moderate, requires some setup or understanding of the system. For example, a new map type or a new link type.', 'Major related component': 'Other component related to eBPF but not listed above.', 'program_types_related': ["It's not related to any of the above."]}
--------------------
--------------------
Processing Commit ID: bf2468f9afba8001c7432d104756a5dd3537bc76
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: bf2468f9afba8001c7432d104756a5dd3537bc76
  Author Name: Jakub Kicinski
  Author Email: kuba@kernel.org
  Commit Date: 1719272486
  Commit Message:
    Merge branch 'locking-introduce-nested-bh-locking'

Sebastian Andrzej Siewior says:

====================
locking: Introduce nested-BH locking.

Disabling bottoms halves acts as per-CPU BKL. On PREEMPT_RT code within
local_bh_disable() section remains preemtible. As a result high prior
tasks (or threaded interrupts) will be blocked by lower-prio task (or
threaded interrupts) which are long running which includes softirq
sections.

The proposed way out is to introduce explicit per-CPU locks for
resources which are protected by local_bh_disable() and use those only
on PREEMPT_RT so there is no additional overhead for !PREEMPT_RT builds.

The series introduces the infrastructure and converts large parts of
networking which is largest stake holder here. Once this done the
per-CPU lock from local_bh_disable() on PREEMPT_RT can be lifted.

Performance testing. Baseline is net-next as of commit 93bda33046e7a
("Merge branch'net-constify-ctl_table-arguments-of-utility-functions'")
plus v6.10-rc1. A 10GiG link is used between two hosts. The command
   xdp-bench redirect-cpu --cpu 3 --remote-action drop eth1 -e

was invoked on the receiving side with a ixgbe. The sending side uses
pktgen_sample03_burst_single_flow.sh on i40e.

Baseline:
| eth1->?                 9
  Parent Hashes: 568ebdaba6370c03360860f1524f646ddd5ca523 3f9fe37d9e16a6cfd5f4d1f536686ea71db3196f
  Refs: 018

- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'Introduce nested bottom halves locking for improved task and interrupt handling on PREEMPT_RT systems.', 'keywords': 'nested-BH locking, PREEMPT_RT, networking', 'commit_classification': "It's a new feature.", 'commit_complexity': "Complex, needs expert knowledge or significant changes to existing systems. Like adding a completely new subsystem support or a completely new program type don't exist before.", 'Major related component': 'Other component related to eBPF but not listed above.', 'program_types_related': ['It improves the overall eBPF infrastructure (e.g., verifier, runtime, etc.).']}
--------------------
--------------------
Processing Commit ID: 3f9fe37d9e16a6cfd5f4d1f536686ea71db3196f
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: 3f9fe37d9e16a6cfd5f4d1f536686ea71db3196f
  Author Name: Sebastian Andrzej Siewior
  Author Email: bigeasy@linutronix.de
  Commit Date: 1719272484
  Commit Message:
    net: Move per-CPU flush-lists to bpf_net_context on PREEMPT_RT.

The per-CPU flush lists
  Parent Hashes: 401cb7dae8130fd34eb84648e02ab4c506df7d5e
  Refs:  which are accessed from within the NAPI callback
(xdp_do_flush() for instance)

- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'Move per-CPU flush lists to bpf_net_context on PREEMPT_RT for improved performance.', 'keywords': 'per-CPU, PREEMPT_RT, bpf_net_context', 'commit_classification': "It's a performance optimization.", 'commit_complexity': 'Moderate, requires some setup or understanding of the system. For example, a new map type or a new link type.', 'Major related component': 'The attach events and bpf link. e.g. perf events, tracepoints, etc.', 'program_types_related': ['xdp like programs']}
--------------------
--------------------
Processing Commit ID: 401cb7dae8130fd34eb84648e02ab4c506df7d5e
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: 401cb7dae8130fd34eb84648e02ab4c506df7d5e
  Author Name: Sebastian Andrzej Siewior
  Author Email: bigeasy@linutronix.de
  Commit Date: 1719272484
  Commit Message:
    net: Reference bpf_redirect_info via task_struct on PREEMPT_RT.

The XDP redirect process is two staged:
- bpf_prog_run_xdp() is invoked to run a eBPF program which inspects the
  packet and makes decisions. While doing that
  Parent Hashes: 78f520b7bbe579438dfc202226b3dac5607d8c7f
  Refs:  the per-CPU variable
  bpf_redirect_info is used.

- Afterwards xdp_do_redirect() is invoked and accesses bpf_redirect_info
  and it may also access other per-CPU variables like xskmap_flush_list.

At the very end of the NAPI callback

- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'Enhance reference handling of bpf_redirect_info via task_struct in XDP for PREEMPT_RT.', 'keywords': 'bpf_redirect_info, xdp, PREEMPT_RT', 'commit_classification': "It's a cleanup or refactoring in the code.", 'commit_complexity': 'Moderate, requires some setup or understanding of the system. For example, a new map type or a new link type.', 'Major related component': 'The attach events and bpf link. e.g. perf events, tracepoints, etc.', 'program_types_related': ['xdp like programs']}
--------------------
--------------------
Processing Commit ID: 78f520b7bbe579438dfc202226b3dac5607d8c7f
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: 78f520b7bbe579438dfc202226b3dac5607d8c7f
  Author Name: Sebastian Andrzej Siewior
  Author Email: bigeasy@linutronix.de
  Commit Date: 1719272483
  Commit Message:
    net: Use nested-BH locking for bpf_scratchpad.

bpf_scratchpad is a per-CPU variable and relies on disabled BH for its
locking. Without per-CPU locking in local_bh_disable() on PREEMPT_RT
this data structure requires explicit locking.

Add a local_lock_t to the data structure and use local_lock_nested_bh()
for locking. This change adds only lockdep coverage and does not alter
the functional behaviour for !PREEMPT_RT.

Cc: Alexei Starovoitov <ast@kernel.org>
Cc: Andrii Nakryiko <andrii@kernel.org>
Cc: Hao Luo <haoluo@google.com>
Cc: Jiri Olsa <jolsa@kernel.org>
Cc: John Fastabend <john.fastabend@gmail.com>
Cc: KP Singh <kpsingh@kernel.org>
Cc: Martin KaFai Lau <martin.lau@linux.dev>
Cc: Song Liu <song@kernel.org>
Cc: Stanislav Fomichev <sdf@google.com>
Cc: Yonghong Song <yonghong.song@linux.dev>
Signed-off-by: Sebastian Andrzej Siewior <bigeasy@linutronix.de>
Link: https://patch.msgid.link/20240620132727.660738-14-bigeasy@linutronix.de
Signed-off-by: Jakub Kicinski <kuba@kernel.org>

  Parent Hashes: d1542d4ae4dfdc47c9b3205ebe849ed23af213dd
  Refs: 

- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'Introduce nested-BH locking for bpf_scratchpad for better lockdep coverage in PREEMPT_RT.', 'keywords': 'nested-BH, bpf_scratchpad, locking', 'commit_classification': "It's a cleanup or refactoring in the code.", 'commit_complexity': 'Moderate, requires some setup or understanding of the system. For example, a new map type or a new link type.', 'Major related component': 'The helper and kfuncs', 'program_types_related': ['It improves the overall eBPF infrastructure (e.g., verifier, runtime, etc.).']}
--------------------
--------------------
Processing Commit ID: d1542d4ae4dfdc47c9b3205ebe849ed23af213dd
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: d1542d4ae4dfdc47c9b3205ebe849ed23af213dd
  Author Name: Sebastian Andrzej Siewior
  Author Email: bigeasy@linutronix.de
  Commit Date: 1719272483
  Commit Message:
    seg6: Use nested-BH locking for seg6_bpf_srh_states.

The access to seg6_bpf_srh_states is protected by disabling preemption.
Based on the code
  Parent Hashes: 3414adbd6a6ad3702d0bdc49081ee7c9e9e1c600
  Refs:  the entry point is input_action_end_bpf() and
every other function (the bpf helper functions bpf_lwt_seg6_*())

- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'Use nested-BH locking for seg6_bpf_srh_states to protect access by disabling preemption.', 'keywords': 'nested-BH locking, seg6_bpf_srh_states, preemption', 'commit_classification': "It's a bug fix.", 'commit_complexity': 'Moderate, requires some setup or understanding of the system. For example, a new map type or a new link type.', 'Major related component': 'The attach events and bpf link. e.g. perf events, tracepoints, etc.', 'program_types_related': ['tracepoints like programs']}
--------------------
--------------------
Processing Commit ID: c73a9683cb21012b6c0f14217974837151c527a8
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: c73a9683cb21012b6c0f14217974837151c527a8
  Author Name: Antoine Tenart
  Author Email: atenart@kernel.org
  Commit Date: 1719245982
  Commit Message:
    libbpf: Skip base btf sanity checks

When upgrading to libbpf 1.3 we noticed a big performance hit while
loading programs using CORE on non base-BTF symbols. This was tracked
down to the new BTF sanity check logic. The issue is the base BTF
definitions are checked first for the base BTF and then again for every
module BTF.

Loading 5 dummy programs (using libbpf-rs) that are using CORE on a
non-base BTF symbol on my system:
- Before this fix: 3s.
- With this fix: 0.1s.

Fix this by only checking the types starting at the BTF start id. This
should ensure the base BTF is still checked as expected but only once
(btf->start_id == 1 when creating the base BTF)
  Parent Hashes: 5a532459aa919d055d822d8db4ea2c5c8d511568
  Refs:  and then only
additional types are checked for each module BTF.

Fixes: 3903802bb99a ("libbpf: Add basic BTF sanity validation")
Signed-off-by: Antoine Tenart <atenart@kernel.org>
Signed-off-by: Andrii Nakryiko <andrii@kernel.org>
Reviewed-by: Alan Maguire <alan.maguire@oracle.com>
Link: https://lore.kernel.org/bpf/20240624090908.171231-1-atenart@kernel.org


- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'The commit optimizes BTF sanity checks in libbpf to improve performance when loading programs using CORE on non-base BTF symbols.', 'keywords': 'libbpf, BTF, performance', 'commit_classification': "It's a performance optimization.", 'commit_complexity': 'Moderate, requires some setup or understanding of the system. For example, a new map type or a new link type.', 'Major related component': 'The libbpf library', 'program_types_related': ['It improves the overall eBPF infrastructure (e.g., verifier, runtime, etc.).']}
--------------------
--------------------
Processing Commit ID: 7e9f79428372c6eab92271390851be34ab26bfb4
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: 7e9f79428372c6eab92271390851be34ab26bfb4
  Author Name: Daniil Dulov
  Author Email: d.dulov@aladdin.ru
  Commit Date: 1719229442
  Commit Message:
    xdp: Remove WARN() from __xdp_reg_mem_model()

syzkaller reports a warning in __xdp_reg_mem_model().

The warning occurs only if __mem_id_init_hash_table() returns an error. It
returns the error in two cases:

  1. memory allocation fails;
  2. rhashtable_init() fails when some fields of rhashtable_params
     struct are not initialized properly.

The second case cannot happen since there is a static const rhashtable_params
struct with valid fields. So
  Parent Hashes: 280e4ebffd16ea1b55dc09761448545e216f60a9
  Refs:  warning is only triggered when there is a
problem with memory allocation.

Thus

- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'Remove unnecessary warning in __xdp_reg_mem_model() related to memory allocation failures.', 'keywords': 'WARN, xdp, memory', 'commit_classification': "It's a bug fix.", 'commit_complexity': 'Simple, can be used without much configuration. For example, a simple helper function.', 'Major related component': 'The eBPF maps', 'program_types_related': ['xdp like programs']}
--------------------
--------------------
Processing Commit ID: 280e4ebffd16ea1b55dc09761448545e216f60a9
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: 280e4ebffd16ea1b55dc09761448545e216f60a9
  Author Name: Alexei Starovoitov
  Author Email: ast@kernel.org
  Commit Date: 1719229442
  Commit Message:
    selftests/bpf: Add tests for may_goto with negative offset.

Add few tests with may_goto and negative offset.

Signed-off-by: Alexei Starovoitov <ast@kernel.org>
Signed-off-by: Andrii Nakryiko <andrii@kernel.org>
Signed-off-by: Daniel Borkmann <daniel@iogearbox.net>
Link: https://lore.kernel.org/bpf/20240619235355.85031-2-alexei.starovoitov@gmail.com

  Parent Hashes: 2b2efe1937ca9f8815884bd4dcd5b32733025103
  Refs: 

- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'Add selftests for may_goto functionality with negative offset in BPF.', 'keywords': 'selftests, may_goto, negative offset', 'commit_classification': "It's a test case or test infrastructure change.", 'commit_complexity': 'Simple, can be used without much configuration. For example, a simple helper function.', 'Major related component': 'The test cases and makefiles', 'program_types_related': ['It improves the overall eBPF infrastructure (e.g., verifier, runtime, etc.).']}
--------------------
--------------------
Processing Commit ID: 2b2efe1937ca9f8815884bd4dcd5b32733025103
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: 2b2efe1937ca9f8815884bd4dcd5b32733025103
  Author Name: Alexei Starovoitov
  Author Email: ast@kernel.org
  Commit Date: 1719229442
  Commit Message:
    bpf: Fix may_goto with negative offset.

Zac's syzbot crafted a bpf prog that exposed two bugs in may_goto.
The 1st bug is the way may_goto is patched. When offset is negative
it should be patched differently.
The 2nd bug is in the verifier:
when current state may_goto_depth is equal to visited state may_goto_depth
it means there is an actual infinite loop. It's not correct to prune
exploration of the program at this point.
Note
  Parent Hashes: 316930d06b92a2419d8e767193266e678545b31d
  Refs:  that this check doesn't limit the program to only one may_goto insn

- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'This commit fixes two issues in the bpf verifier related to may_goto with negative offsets.', 'keywords': 'bpf,may_goto,verifier', 'commit_classification': "It's a bug fix.", 'commit_complexity': 'Moderate, requires some setup or understanding of the system. For example, a new map type or a new link type.', 'Major related component': 'The eBPF verifier', 'program_types_related': ['It improves the overall eBPF infrastructure (e.g., verifier, runtime, etc.).']}
--------------------
--------------------
Processing Commit ID: 316930d06b92a2419d8e767193266e678545b31d
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: 316930d06b92a2419d8e767193266e678545b31d
  Author Name: Daniel Borkmann
  Author Email: daniel@iogearbox.net
  Commit Date: 1719229435
  Commit Message:
    selftests/bpf: Add more ring buffer test coverage

Add test coverage for reservations beyond the ring buffer size in order
to validate that bpf_ringbuf_reserve() rejects the request with NULL
  Parent Hashes: cfa1a2329a691ffd991fcf7248a57d752e712881
  Refs:  all
other ring buffer tests keep passing as well:

  # ./vmtest.sh -- ./test_progs -t ringbuf
  [...]
  ./test_progs -t ringbuf
  [    1.165434] bpf_testmod: loading out-of-tree module taints kernel.
  [    1.165825] bpf_testmod: module verification failed: signature and/or required key missing - tainting kernel
  [    1.284001] tsc: Refined TSC clocksource calibration: 3407.982 MHz
  [    1.286871] clocksource: tsc: mask: 0xffffffffffffffff max_cycles: 0x311fc34e357

- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'Add additional test coverage for ring buffer reservations exceeding size to ensure proper rejection in bpf_ringbuf_reserve().', 'keywords': 'ring buffer, test coverage, bpf_ringbuf_reserve', 'commit_classification': "It's a test case or test infrastructure change.", 'commit_complexity': 'Moderate, requires some setup or understanding of the system. For example, a new map type or a new link type.', 'Major related component': 'The test cases and makefiles', 'program_types_related': ['It improves the overall eBPF infrastructure (e.g., verifier, runtime, etc.).']}
--------------------
--------------------
Processing Commit ID: 5a532459aa919d055d822d8db4ea2c5c8d511568
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: 5a532459aa919d055d822d8db4ea2c5c8d511568
  Author Name: Alan Maguire
  Author Email: alan.maguire@oracle.com
  Commit Date: 1719172202
  Commit Message:
    bpf: fix build when CONFIG_DEBUG_INFO_BTF[_MODULES] is undefined

Kernel test robot reports that kernel build fails with
resilient split BTF changes.

Examining the associated config and code we see that
btf_relocate_id() is defined under CONFIG_DEBUG_INFO_BTF_MODULES.
Moving it outside the #ifdef solves the issue.

Reported-by: kernel test robot <lkp@intel.com>
Closes: https://lore.kernel.org/oe-kbuild-all/202406221742.d2srFLVI-lkp@intel.com/
Signed-off-by: Alan Maguire <alan.maguire@oracle.com>
Link: https://lore.kernel.org/r/20240623135224.27981-1-alan.maguire@oracle.com
Signed-off-by: Alexei Starovoitov <ast@kernel.org>

  Parent Hashes: 04efaebd72d1d3d9991841051fafc6b195f3676d
  Refs: 

- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'Fix kernel build failure by relocating btf_relocate_id() outside the CONFIG_DEBUG_INFO_BTF_MODULES conditional compilation block.', 'keywords': 'kernel,build,BTF', 'commit_classification': "It's a bug fix.", 'commit_complexity': 'Simple, can be used without much configuration. For example, a simple helper function.', 'Major related component': 'The BPF Type Format (BTF)', 'program_types_related': ['It improves the overall eBPF infrastructure (e.g., verifier, runtime, etc.).']}
--------------------
--------------------
Processing Commit ID: 04efaebd72d1d3d9991841051fafc6b195f3676d
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: 04efaebd72d1d3d9991841051fafc6b195f3676d
  Author Name: Dave Thaler
  Author Email: dthaler1968@googlemail.com
  Commit Date: 1719159026
  Commit Message:
    bpf
  Parent Hashes: 93265a0b79e48fde8ee23fb6e1195d7d99717063
  Refs:  docs: Address comments from IETF Area Directors

This patch does the following to address IETF feedback:

* Remove mention of "program type" and reference future
  docs (and mention platform-specific docs exist) for
  helper functions and BTF. Addresses Roman Danyliw's
  comments based on GENART review from Ines Robles [0].

* Add reference for endianness as requested by John
  Scudder [1].

* Added bit numbers to top of 32-bit wide format diagrams
  as requested by Paul Wouters [2].

* Added more text about why BPF doesn't stand for anything

- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'The commit addresses IETF feedback by modifying documentation, adding references, and updating diagrams related to BPF.', 'keywords': 'documentation, IETF, feedback', 'commit_classification': "It's a documentation change or typo fix.", 'commit_complexity': 'Simple, can be used without much configuration. For example, a simple helper function.', 'Major related component': 'The BPF Type Format (BTF)', 'program_types_related': ["It's not related to any of the above."]}
--------------------
--------------------
Processing Commit ID: 93265a0b79e48fde8ee23fb6e1195d7d99717063
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: 93265a0b79e48fde8ee23fb6e1195d7d99717063
  Author Name: Andrii Nakryiko
  Author Email: andrii@kernel.org
  Commit Date: 1719006393
  Commit Message:
    Merge branch 'bpf-resilient-split-btf-followups'

Alan Maguire says:

====================
bpf: resilient split BTF followups

Follow-up to resilient split BTF series [1]
  Parent Hashes: cd387ce54834bc7808082c471fd745ce85a0e21f 47a8cf0c5b3f6769b9d558301735c75119a0a165
  Refs: 

- cleaning up libbpf relocation code (patch 1);
- adding 'struct module' support for base BTF data (patch 2);
- splitting out field iteration code into separate file (patch 3);
- sharing libbpf relocation code with the kernel (patch 4);
- adding a kbuild --btf_features flag to generate distilled base
  BTF in the module-specific case where KBUILD_EXTMOD is true
  (patch 5); and
- adding test coverage for module-based kfunc dtor (patch 6)

Generation of distilled base BTF for modules requires the pahole patch
at [2]

- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'This commit introduces follow-ups to the resilient split BTF series focusing on libbpf improvements and test coverage additions.', 'keywords': 'resilient,BTF,libbpf', 'commit_classification': "It's a cleanup or refactoring in the code.", 'commit_complexity': 'Moderate, requires some setup or understanding of the system. For example, a new map type or a new link type.', 'Major related component': 'The libbpf library', 'program_types_related': ['It improves the overall eBPF infrastructure (e.g., verifier, runtime, etc.).']}
--------------------
--------------------
Processing Commit ID: 47a8cf0c5b3f6769b9d558301735c75119a0a165
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: 47a8cf0c5b3f6769b9d558301735c75119a0a165
  Author Name: Alan Maguire
  Author Email: alan.maguire@oracle.com
  Commit Date: 1719006389
  Commit Message:
    selftests/bpf: Add kfunc_call test for simple dtor in bpf_testmod

add simple kfuncs to create/destroy a context type to bpf_testmod
  Parent Hashes: 46fb0b62ea29c0dbcb3e44f1d67aafe79bc6e045
  Refs: 
register them and add a kfunc_call test to use them.  This provides
test coverage for registration of dtor kfuncs from modules.

By transferring the context pointer to a map value as a __kptr
we also trigger the map-based dtor cleanup logic

- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'Added kfunc_call test for destructor logic in bpf_testmod selftests.', 'keywords': 'kfuncs,selftests,destructor', 'commit_classification': "It's a test case or test infrastructure change.", 'commit_complexity': 'Moderate, requires some setup or understanding of the system. For example, a new map type or a new link type.', 'Major related component': 'The test cases and makefiles', 'program_types_related': ['It improves the overall eBPF infrastructure (e.g., verifier, runtime, etc.).']}
--------------------
--------------------
Processing Commit ID: 46fb0b62ea29c0dbcb3e44f1d67aafe79bc6e045
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: 46fb0b62ea29c0dbcb3e44f1d67aafe79bc6e045
  Author Name: Alan Maguire
  Author Email: alan.maguire@oracle.com
  Commit Date: 1719006307
  Commit Message:
    kbuild
  Parent Hashes: 8646db238997df36c6ad71a9d7e0b52ceee221b2
  Refs: bpf: Add module-specific pahole flags for distilled base BTF

Support creation of module BTF along with distilled base BTF;
the latter is stored in a .BTF.base ELF section and supplements
split BTF references to base BTF with information about base types

- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'The commit adds support for module BTF and distilled base BTF with corresponding pahole flags.', 'keywords': 'module BTF, distilled BTF, pahole flags', 'commit_classification': "It's a new feature.", 'commit_complexity': 'Moderate, requires some setup or understanding of the system. For example, a new map type or a new link type.', 'Major related component': 'The BPF Type Format (BTF)', 'program_types_related': ['tracepoints like programs', 'It improves the overall eBPF infrastructure (e.g., verifier, runtime, etc.).']}
--------------------
--------------------
Processing Commit ID: 8646db238997df36c6ad71a9d7e0b52ceee221b2
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: 8646db238997df36c6ad71a9d7e0b52ceee221b2
  Author Name: Alan Maguire
  Author Email: alan.maguire@oracle.com
  Commit Date: 1719006307
  Commit Message:
    libbpf
  Parent Hashes: e7ac331b30555cf1a0826784a346f36dbf800451
  Refs: bpf: Share BTF relocate-related code with kernel

Share relocation implementation with the kernel.  As part of this

- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'Share BTF relocation implementation code between libbpf and the kernel for unified handling.', 'keywords': 'BTF,relocation,kernel', 'commit_classification': "It's a cleanup or refactoring in the code.", 'commit_complexity': 'Moderate, requires some setup or understanding of the system. For example, a new map type or a new link type.', 'Major related component': 'The BPF Type Format (BTF)', 'program_types_related': ['It improves the overall eBPF infrastructure (e.g., verifier, runtime, etc.).']}
--------------------
--------------------
Processing Commit ID: e7ac331b30555cf1a0826784a346f36dbf800451
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: e7ac331b30555cf1a0826784a346f36dbf800451
  Author Name: Alan Maguire
  Author Email: alan.maguire@oracle.com
  Commit Date: 1719006307
  Commit Message:
    libbpf: Split field iter code into its own file kernel

This will allow it to be shared with the kernel.  No functional change.

Suggested-by: Andrii Nakryiko <andrii@kernel.org>
Signed-off-by: Alan Maguire <alan.maguire@oracle.com>
Signed-off-by: Andrii Nakryiko <andrii@kernel.org>
Link: https://lore.kernel.org/bpf/20240620091733.1967885-4-alan.maguire@oracle.com

  Parent Hashes: d4e48e3dd45017abdd69a19285d197de897ef44f
  Refs: 

- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'Refactor field iterator code in libbpf to a separate file for kernel sharing.', 'keywords': 'libbpf, refactor, kernel', 'commit_classification': "It's a cleanup or refactoring in the code.", 'commit_complexity': 'Simple, can be used without much configuration. For example, a simple helper function.', 'Major related component': 'The libbpf library', 'program_types_related': ['It improves the overall eBPF infrastructure (e.g., verifier, runtime, etc.).']}
--------------------
--------------------
Processing Commit ID: d4e48e3dd45017abdd69a19285d197de897ef44f
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: d4e48e3dd45017abdd69a19285d197de897ef44f
  Author Name: Alan Maguire
  Author Email: alan.maguire@oracle.com
  Commit Date: 1719006307
  Commit Message:
    module
  Parent Hashes: d1cf840854bb603c0718a011bc993f69f2df014e
  Refs:  bpf: Store BTF base pointer in struct module

...as this will allow split BTF modules with a base BTF
representation (rather than the full vmlinux BTF at time of
BTF encoding) to resolve their references to kernel types in a
way that is more resilient to small changes in kernel types.

This will allow modules that are not built every time the kernel
is to provide more resilient BTF

- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'The commit stores the BTF base pointer in struct module to improve BTF resilience in split BTF modules.', 'keywords': 'BTF, module, resilience', 'commit_classification': "It's a new feature.", 'commit_complexity': 'Moderate, requires some setup or understanding of the system. For example, a new map type or a new link type.', 'Major related component': 'The BPF Type Format (BTF)', 'program_types_related': ['It improves the overall eBPF infrastructure (e.g., verifier, runtime, etc.).']}
--------------------
--------------------
Processing Commit ID: d1cf840854bb603c0718a011bc993f69f2df014e
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: d1cf840854bb603c0718a011bc993f69f2df014e
  Author Name: Alan Maguire
  Author Email: alan.maguire@oracle.com
  Commit Date: 1719006307
  Commit Message:
    libbpf: BTF relocation followup fixing naming
  Parent Hashes: cd387ce54834bc7808082c471fd745ce85a0e21f
  Refs:  loop logic

Use less verbose names in BTF relocation code and fix off-by-one error
and typo in btf_relocate.c.  Simplify loop over matching distilled
types

- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'Fix naming issues and simplify loop logic in BTF relocation code of libbpf.', 'keywords': 'BTF relocation, naming, fix', 'commit_classification': "It's a cleanup or refactoring in the code.", 'commit_complexity': 'Simple, can be used without much configuration. For example, a simple helper function.', 'Major related component': 'The libbpf library', 'program_types_related': ["It's not related to any of the above."]}
--------------------
--------------------
Processing Commit ID: cd387ce54834bc7808082c471fd745ce85a0e21f
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: cd387ce54834bc7808082c471fd745ce85a0e21f
  Author Name: Mykyta Yatsenko
  Author Email: yatsenko@meta.com
  Commit Date: 1719005663
  Commit Message:
    selftests/bpf: Test struct_ops bpf map auto-attach

Adding selftest to verify that struct_ops maps are auto attached by
bpf skeleton's `*__attach` function.

Signed-off-by: Mykyta Yatsenko <yatsenko@meta.com>
Signed-off-by: Andrii Nakryiko <andrii@kernel.org>
Link: https://lore.kernel.org/bpf/20240621180324.238379-1-yatsenko@meta.com

  Parent Hashes: 2bb138cb20a6a347cfed84381430cd25e05f118e
  Refs: 

- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'Add selftest for verifying auto-attachment of struct_ops bpf maps by bpf skeleton.', 'keywords': 'selftest, struct_ops, auto-attach', 'commit_classification': "It's a test case or test infrastructure change.", 'commit_complexity': 'Moderate, requires some setup or understanding of the system. For example, a new map type or a new link type.', 'Major related component': 'The test cases and makefiles', 'program_types_related': ['It improves the overall eBPF infrastructure (e.g., verifier, runtime, etc.).']}
--------------------
--------------------
Processing Commit ID: 2bb138cb20a6a347cfed84381430cd25e05f118e
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: 2bb138cb20a6a347cfed84381430cd25e05f118e
  Author Name: Puranjay Mohan
  Author Email: puranjay@kernel.org
  Commit Date: 1719005313
  Commit Message:
    bpf
  Parent Hashes: 2807db78ab302eab2c86c5924e4079adb63fd7c8
  Refs:  arm64: Inline bpf_get_current_task/_btf() helpers

On ARM64

- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'Inline bpf_get_current_task and bpf_get_current_btf helpers for ARM64 architecture.', 'keywords': 'bpf, ARM64, helpers', 'commit_classification': "It's a performance optimization.", 'commit_complexity': 'Moderate, requires some setup or understanding of the system. For example, a new map type or a new link type.', 'Major related component': 'The helper and kfuncs', 'program_types_related': ['other']}
--------------------
--------------------
Processing Commit ID: 3e23c99764d465ae411f0729fd6d2e0e3edd0ade
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: 3e23c99764d465ae411f0729fd6d2e0e3edd0ade
  Author Name: Cupertino Miranda
  Author Email: cupertino.miranda@oracle.com
  Commit Date: 1719003263
  Commit Message:
    selftests/bpf: Match tests against regular expression

This patch changes a few tests to make use of regular expressions.
Fixed tests otherwise fail when compiled with GCC.

Signed-off-by: Cupertino Miranda <cupertino.miranda@oracle.com>
Signed-off-by: Andrii Nakryiko <andrii@kernel.org>
Acked-by: Eduard Zingerman <eddyz87@gmail.com>
Link: https://lore.kernel.org/bpf/20240617141458.471620-3-cupertino.miranda@oracle.com

  Parent Hashes: f06ae6194f278444201e0b041a00192d794f83b6
  Refs: 

- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'This patch updates selftests to use regular expressions to fix compatibility issues with GCC.', 'keywords': 'selftests, regular expressions, GCC', 'commit_classification': "It's a test case or test infrastructure change.", 'commit_complexity': 'Simple, can be used without much configuration. For example, a simple helper function.', 'Major related component': 'The test cases and makefiles', 'program_types_related': ["It's not related to any of the above."]}
--------------------
--------------------
Processing Commit ID: f06ae6194f278444201e0b041a00192d794f83b6
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: f06ae6194f278444201e0b041a00192d794f83b6
  Author Name: Cupertino Miranda
  Author Email: cupertino.miranda@oracle.com
  Commit Date: 1719003263
  Commit Message:
    selftests/bpf: Support checks against a regular expression

Add support for __regex and __regex_unpriv macros to check the test
execution output against a regular expression. This is similar to __msg
and __msg_unpriv
  Parent Hashes: cc5083d1f3881624ad2de1f3cbb3a07e152cb254
  Refs:  however those expect do substring matching.

Signed-off-by: Cupertino Miranda <cupertino.miranda@oracle.com>
Signed-off-by: Andrii Nakryiko <andrii@kernel.org>
Acked-by: Eduard Zingerman <eddyz87@gmail.com>
Link: https://lore.kernel.org/bpf/20240617141458.471620-2-cupertino.miranda@oracle.com


- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'Added support for regex matching in selftests to verify test outputs against regular expressions.', 'keywords': 'regex,selftests,macros', 'commit_classification': "It's a test case or test infrastructure change.", 'commit_complexity': 'Moderate, requires some setup or understanding of the system. For example, a new map type or a new link type.', 'Major related component': 'The test cases and makefiles', 'program_types_related': ['It improves the overall eBPF infrastructure (e.g., verifier, runtime, etc.).']}
--------------------
--------------------
Processing Commit ID: cfa1a2329a691ffd991fcf7248a57d752e712881
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: cfa1a2329a691ffd991fcf7248a57d752e712881
  Author Name: Daniel Borkmann
  Author Email: daniel@iogearbox.net
  Commit Date: 1719000261
  Commit Message:
    bpf: Fix overrunning reservations in ringbuf

The BPF ring buffer internally is implemented as a power-of-2 sized circular
buffer
  Parent Hashes: 2673315947c9f3890ad34a8196f62142e4ddef5a
  Refs:  with two logical and ever-increasing counters: consumer_pos is the
consumer counter to show which logical position the consumer consumed the
data

- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'The commit fixes an issue of overrunning reservations in the eBPF ring buffer.', 'keywords': 'bpf, ringbuf, fix', 'commit_classification': "It's a bug fix.", 'commit_complexity': 'Moderate, requires some setup or understanding of the system. For example, a new map type or a new link type.', 'Major related component': 'The eBPF maps', 'program_types_related': ['It improves the overall eBPF infrastructure (e.g., verifier, runtime, etc.).']}
--------------------
--------------------
Processing Commit ID: 2673315947c9f3890ad34a8196f62142e4ddef5a
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: 2673315947c9f3890ad34a8196f62142e4ddef5a
  Author Name: Alexei Starovoitov
  Author Email: ast@kernel.org
  Commit Date: 1718993929
  Commit Message:
    selftests/bpf: Tests with may_goto and jumps to the 1st insn

Add few tests with may_goto and jumps to the 1st insn.

Signed-off-by: Alexei Starovoitov <ast@kernel.org>
Signed-off-by: Daniel Borkmann <daniel@iogearbox.net>
Acked-by: Eduard Zingerman <eddyz87@gmail.com>
Link: https://lore.kernel.org/bpf/20240619011859.79334-2-alexei.starovoitov@gmail.com

  Parent Hashes: 5337ac4c9b807bc46baa0713121a0afa8beacd70
  Refs: 

- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'Add test cases for may_goto and jumps to the first instruction in selftests/bpf.', 'keywords': 'tests,may_goto,jumps', 'commit_classification': "It's a test case or test infrastructure change.", 'commit_complexity': 'Simple, can be used without much configuration. For example, a simple helper function.', 'Major related component': 'The test cases and makefiles', 'program_types_related': ['It improves the overall eBPF infrastructure (e.g., verifier, runtime, etc.).']}
--------------------
--------------------
Processing Commit ID: 5337ac4c9b807bc46baa0713121a0afa8beacd70
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: 5337ac4c9b807bc46baa0713121a0afa8beacd70
  Author Name: Alexei Starovoitov
  Author Email: ast@kernel.org
  Commit Date: 1718993920
  Commit Message:
    bpf: Fix the corner case with may_goto and jump to the 1st insn.

When the following program is processed by the verifier:
L1: may_goto L2
    goto L1
L2: w0 = 0
    exit

the may_goto insn is first converted to:
L1: r11 = *(u64 *)(r10 -8)
    if r11 == 0x0 goto L2
    r11 -= 1
    *(u64 *)(r10 -8) = r11
    goto L1
L2: w0 = 0
    exit

then later as the last step the verifier inserts:
  *(u64 *)(r10 -8) = BPF_MAX_LOOPS
as the first insn of the program to initialize loop count.

When the first insn happens to be a branch target of some jmp the
bpf_patch_insn_data() logic will produce:
L1: *(u64 *)(r10 -8) = BPF_MAX_LOOPS
    r11 = *(u64 *)(r10 -8)
    if r11 == 0x0 goto L2
    r11 -= 1
    *(u64 *)(r10 -8) = r11
    goto L1
L2: w0 = 0
    exit

because instruction patching adjusts all jmps and calls
  Parent Hashes: 66b5867150630e8f9c9a2b7430e55a3beaa83a5b
  Refs:  but for this
particular corner case it's incorrect and the L1 label should be one
instruction down

- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'Fixes a corner case in the eBPF verifier related to jump target and loop initialization.', 'keywords': 'verifier, jump, loop', 'commit_classification': "It's a bug fix.", 'commit_complexity': 'Moderate, requires some setup or understanding of the system. For example, a new map type or a new link type.', 'Major related component': 'The eBPF verifier', 'program_types_related': ['It improves the overall eBPF infrastructure (e.g., verifier, runtime, etc.).']}
--------------------
--------------------
Processing Commit ID: cc5083d1f3881624ad2de1f3cbb3a07e152cb254
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: cc5083d1f3881624ad2de1f3cbb3a07e152cb254
  Author Name: Donglin Peng
  Author Email: dolinux.peng@gmail.com
  Commit Date: 1718992817
  Commit Message:
    libbpf: Checking the btf_type kind when fixing variable offsets

I encountered an issue when building the test_progs from the repository [1]:

  $ pwd
  /work/Qemu/x86_64/linux-6.10-rc2/tools/testing/selftests/bpf/

  $ make test_progs V=1
  [...]
  ./tools/sbin/bpftool gen object ./ip_check_defrag.bpf.linked2.o ./ip_check_defrag.bpf.linked1.o
  libbpf: failed to find symbol for variable 'bpf_dynptr_slice' in section '.ksyms'
  Error: failed to link './ip_check_defrag.bpf.linked1.o': No such file or directory (2)
  [...]

Upon investigation
  Parent Hashes: 6ddf3a9abd9fdfdd63d8c906fc1393f7950c23f4
  Refs:  I discovered that the btf_types referenced in the '.ksyms'
section had a kind of BTF_KIND_FUNC instead of BTF_KIND_VAR:

  $ bpftool btf dump file ./ip_check_defrag.bpf.linked1.o
  [...]
  [2] DATASEC '.ksyms' size=0 vlen=2
        type_id=16 offset=0 size=0 (FUNC 'bpf_dynptr_from_skb')
        type_id=17 offset=0 size=0 (FUNC 'bpf_dynptr_slice')
  [...]
  [16] FUNC 'bpf_dynptr_from_skb' type_id=82 linkage=extern
  [17] FUNC 'bpf_dynptr_slice' type_id=85 linkage=extern
  [...]

For a detailed analysis

- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'This commit addresses an issue with BTF_KIND_FUNC being incorrectly used instead of BTF_KIND_VAR in the libbpf component.', 'keywords': 'btf_type, libbpf, variable', 'commit_classification': "It's a bug fix.", 'commit_complexity': 'Moderate, requires some setup or understanding of the system. For example, a new map type or a new link type.', 'Major related component': 'The libbpf library', 'program_types_related': ['It improves the overall eBPF infrastructure (e.g., verifier, runtime, etc.).']}
--------------------
--------------------
Processing Commit ID: 6ddf3a9abd9fdfdd63d8c906fc1393f7950c23f4
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: 6ddf3a9abd9fdfdd63d8c906fc1393f7950c23f4
  Author Name: Matt Bobrowski
  Author Email: mattbobrowski@google.com
  Commit Date: 1718992557
  Commit Message:
    bpf: Add security_file_post_open() LSM hook to sleepable_lsm_hooks

The new generic LSM hook security_file_post_open() was recently added
to the LSM framework in commit 8f46ff5767b0b ("security: Introduce
file_post_open hook"). Let's proactively add this generic LSM hook to
the sleepable_lsm_hooks BTF ID set
  Parent Hashes: 651337c7ca82c259bf5c8fe9beda9673531a0031
  Refs:  because I can't see there being
any strong reasons not to

- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'Add security_file_post_open LSM hook to sleepable_lsm_hooks BTF ID set in eBPF.', 'keywords': 'security,Lsm hook,sleepable_lsm_hooks', 'commit_classification': "It's a new feature.", 'commit_complexity': 'Moderate, requires some setup or understanding of the system. For example, a new map type or a new link type.', 'Major related component': 'The BPF Type Format (BTF)', 'program_types_related': ['LSM like programs']}
--------------------
--------------------
Processing Commit ID: 651337c7ca82c259bf5c8fe9beda9673531a0031
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: 651337c7ca82c259bf5c8fe9beda9673531a0031
  Author Name: Andrii Nakryiko
  Author Email: andrii@kernel.org
  Commit Date: 1718992389
  Commit Message:
    bpftool: Allow compile-time checks of BPF map auto-attach support in skeleton

New versions of bpftool now emit additional link placeholders for BPF
maps (struct_ops maps are the only maps right now that support
attachment)
  Parent Hashes: 717d6313bba1b3179f0bf1026aaec6b7e26f484e
  Refs:  and set up BPF skeleton in such a way that libbpf will
auto-attach BPF maps automatically

- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'The commit enhances bpftool to support compile-time checks for BPF map auto-attach in skeletons.', 'keywords': 'bpftool,BPF map,auto-attach', 'commit_classification': "It's a new feature.", 'commit_complexity': 'Moderate, requires some setup or understanding of the system. For example, a new map type or a new link type.', 'Major related component': 'The bpftool utility', 'program_types_related': ['It improves the overall eBPF infrastructure (e.g., verifier, runtime, etc.).']}
--------------------
--------------------
Processing Commit ID: 717d6313bba1b3179f0bf1026aaec6b7e26f484e
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: 717d6313bba1b3179f0bf1026aaec6b7e26f484e
  Author Name: Jiri Olsa
  Author Email: jolsa@kernel.org
  Commit Date: 1718991156
  Commit Message:
    bpf: Change bpf_session_cookie return value to __u64 *

This reverts [1] and changes return value for bpf_session_cookie
in bpf selftests. Having long * might lead to problems on 32-bit
architectures.

Fixes: 2b8dd87332cd ("bpf: Make bpf_session_cookie() kfunc return long *")
Suggested-by: Andrii Nakryiko <andrii@kernel.org>
Signed-off-by: Jiri Olsa <jolsa@kernel.org>
Signed-off-by: Daniel Borkmann <daniel@iogearbox.net>
Acked-by: Andrii Nakryiko <andrii@kernel.org>
Link: https://lore.kernel.org/bpf/20240619081624.1620152-1-jolsa@kernel.org

  Parent Hashes: 1ae7a19e37630d3235bc68cac9da4e032cad8136
  Refs: 

- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'The commit reverts and modifies the return type of bpf_session_cookie to __u64 * for compatibility with 32-bit architectures.', 'keywords': 'bpf, session_cookie, architectures', 'commit_classification': "It's a bug fix.", 'commit_complexity': 'Simple, can be used without much configuration. For example, a simple helper function.', 'Major related component': 'The helper and kfuncs', 'program_types_related': ['It improves the overall eBPF infrastructure (e.g., verifier, runtime, etc.).']}
--------------------
--------------------
Processing Commit ID: c28947de2bed40217cf256c5d0d16880054fcf13
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: c28947de2bed40217cf256c5d0d16880054fcf13
  Author Name: Ido Schimmel
  Author Email: idosch@nvidia.com
  Commit Date: 1718976632
  Commit Message:
    mlxsw: spectrum_buffers: Fix memory corruptions on Spectrum-4 systems

The following two shared buffer operations make use of the Shared Buffer
Status Register (SBSR):

 # devlink sb occupancy snapshot pci/0000:01:00.0
 # devlink sb occupancy clearmax pci/0000:01:00.0

The register has two masks of 256 bits to denote on which ingress /
egress ports the register should operate on. Spectrum-4 has more than
256 ports
  Parent Hashes: 0602697d6f4d72b0bc5edbc76afabf6aaa029a69
  Refs:  so the register was extended by cited commit with a new
'port_page' field.

However

- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'Fixed memory corruption issues on Spectrum-4 systems by adjusting shared buffer register operations.', 'keywords': 'memory corruption,Spectrum-4,register', 'commit_classification': "It's a bug fix.", 'commit_complexity': 'Moderate, requires some setup or understanding of the system. For example, a new map type or a new link type.', 'Major related component': 'Other component related to eBPF but not listed above.', 'program_types_related': ['other']}
--------------------
--------------------
Processing Commit ID: 8cab7cdcf5aebec354ede98bca28c08dd9df924c
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: 8cab7cdcf5aebec354ede98bca28c08dd9df924c
  Author Name: Geliang Tang
  Author Email: tanggeliang@kylinos.cn
  Commit Date: 1718941364
  Commit Message:
    selftests/bpf: Use start_server_str in test_tcp_check_syncookie_user

Since start_server_str() is added now
  Parent Hashes: fb69f71cf585aabb2f59c6d7958bccfaebe64f5d
  Refs:  it can be used in script
test_tcp_check_syncookie_user.c instead of start_server_addr() to
simplify the code.

Acked-by: Eduard Zingerman <eddyz87@gmail.com>
Signed-off-by: Geliang Tang <tanggeliang@kylinos.cn>
Link: https://lore.kernel.org/r/5d2f442261d37cff16c1f1b21a2b188508ab67fa.1718932493.git.tanggeliang@kylinos.cn
Signed-off-by: Alexei Starovoitov <ast@kernel.org>


- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'Refactor test_tcp_check_syncookie_user.c to use start_server_str for code simplification.', 'keywords': 'selftests,bpf,simplify', 'commit_classification': "It's a cleanup or refactoring in the code.", 'commit_complexity': 'Simple, can be used without much configuration. For example, a simple helper function.', 'Major related component': 'The test cases and makefiles', 'program_types_related': ["It's not related to any of the above."]}
--------------------
--------------------
Processing Commit ID: fb69f71cf585aabb2f59c6d7958bccfaebe64f5d
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: fb69f71cf585aabb2f59c6d7958bccfaebe64f5d
  Author Name: Geliang Tang
  Author Email: tanggeliang@kylinos.cn
  Commit Date: 1718941364
  Commit Message:
    selftests/bpf: Use start_server_str in mptcp

Since start_server_str() is added now
  Parent Hashes: 7f0d5140a6d69d3e63467a220a2a1e0c9ec1463a
  Refs:  it can be used in mptcp.c in
start_mptcp_server() instead of using helpers make_sockaddr() and
start_server_addr() to simplify the code.

Acked-by: Eduard Zingerman <eddyz87@gmail.com>
Signed-off-by: Geliang Tang <tanggeliang@kylinos.cn>
Link: https://lore.kernel.org/r/16fb3e2cd60b64b5470b0e69f1aa233feaf2717c.1718932493.git.tanggeliang@kylinos.cn
Signed-off-by: Alexei Starovoitov <ast@kernel.org>


- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'Simplify mptcp selftest code by using start_server_str function instead of additional helpers.', 'keywords': 'mptcp,selftests,simplify', 'commit_classification': "It's a cleanup or refactoring in the code.", 'commit_complexity': 'Simple, can be used without much configuration. For example, a simple helper function.', 'Major related component': 'The test cases and makefiles', 'program_types_related': ['socket like programs', "It's not related to any of the above."]}
--------------------
--------------------
Processing Commit ID: 7f0d5140a6d69d3e63467a220a2a1e0c9ec1463a
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: 7f0d5140a6d69d3e63467a220a2a1e0c9ec1463a
  Author Name: Geliang Tang
  Author Email: tanggeliang@kylinos.cn
  Commit Date: 1718941364
  Commit Message:
    selftests/bpf: Drop noconnect from network_helper_opts

In test_bpf_ip_check_defrag_ok()
  Parent Hashes: bbca57aa378b43d25af2ec360b3e8bc4185d65cf
  Refs:  the new helper client_socket() can be
used to replace connect_to_fd_opts() with "noconnect" opts

- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': "The commit removes 'noconnect' option from network_helper_opts in selftests/bpf.", 'keywords': 'noconnect, network_helper_opts, selftests', 'commit_classification': "It's a test case or test infrastructure change.", 'commit_complexity': 'Simple, can be used without much configuration. For example, a simple helper function.', 'Major related component': 'The test cases and makefiles', 'program_types_related': ['It improves the overall eBPF infrastructure (e.g., verifier, runtime, etc.).']}
--------------------
--------------------
Processing Commit ID: bbca57aa378b43d25af2ec360b3e8bc4185d65cf
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: bbca57aa378b43d25af2ec360b3e8bc4185d65cf
  Author Name: Geliang Tang
  Author Email: tanggeliang@kylinos.cn
  Commit Date: 1718941364
  Commit Message:
    selftests/bpf: Add client_socket helper

This patch extracts a new helper client_socket() from connect_to_fd_opts()
to create the client socket
  Parent Hashes: 08a5206240d3763e0c6d91a9a4a9bfbb8fc9600c
  Refs:  but don't connect to the server. Then
connect_to_fd_opts() can be implemented using client_socket() and
connect_fd_to_addr(). This helper can be used in connect_to_addr() too

- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'This commit introduces a new client_socket helper function for socket management in selftests/bpf.', 'keywords': 'helper, client_socket, selftests', 'commit_classification': "It's a cleanup or refactoring in the code.", 'commit_complexity': 'Moderate, requires some setup or understanding of the system. For example, a new map type or a new link type.', 'Major related component': 'The test cases and makefiles', 'program_types_related': ['socket like programs']}
--------------------
--------------------
Processing Commit ID: 08a5206240d3763e0c6d91a9a4a9bfbb8fc9600c
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: 08a5206240d3763e0c6d91a9a4a9bfbb8fc9600c
  Author Name: Geliang Tang
  Author Email: tanggeliang@kylinos.cn
  Commit Date: 1718941364
  Commit Message:
    selftests/bpf: Use connect_to_addr in connect_to_fd_opt

This patch moves "post_socket_cb" and "noconnect" into connect_to_addr()
  Parent Hashes: 34ad6ec972525b903d4680202d7b8360f71d0d89
  Refs: 
then connect_to_fd_opts() can be implemented by getsockname() and
connect_to_addr(). This change makes connect_to_* interfaces more unified.

Acked-by: Eduard Zingerman <eddyz87@gmail.com>
Signed-off-by: Geliang Tang <tanggeliang@kylinos.cn>
Link: https://lore.kernel.org/r/4569c30533e14c22fae6c05070aad809720551c1.1718932493.git.tanggeliang@kylinos.cn
Signed-off-by: Alexei Starovoitov <ast@kernel.org>


- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'The commit unifies the connect_to_fd_opts and connect_to_addr interfaces in selftests/bpf by moving "post_socket_cb" and "noconnect" into connect_to_addr.', 'keywords': 'selftests,bpf,connect_to_addr', 'commit_classification': "It's a cleanup or refactoring in the code.", 'commit_complexity': 'Moderate, requires some setup or understanding of the system. For example, a new map type or a new link type.', 'Major related component': 'The test cases and makefiles', 'program_types_related': ['It improves the overall eBPF infrastructure (e.g., verifier, runtime, etc.).']}
--------------------
--------------------
Processing Commit ID: 34ad6ec972525b903d4680202d7b8360f71d0d89
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: 34ad6ec972525b903d4680202d7b8360f71d0d89
  Author Name: Geliang Tang
  Author Email: tanggeliang@kylinos.cn
  Commit Date: 1718941364
  Commit Message:
    selftests/bpf: Drop type from network_helper_opts

The opts.{type
  Parent Hashes: bf977ee4a9e2ad8a41b3a2497aada5e7eb09eaea
  Refs:  noconnect} is at least a bit non intuitive or unnecessary.
The only use case now is in test_bpf_ip_check_defrag_ok which ends up
bypassing most (or at least some) of the connect_to_fd_opts() logic. It's
much better that test should have its own connect_to_fd_opts() instead.

This patch adds a new "type" parameter for connect_to_fd_opts()

- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'This commit modifies test logic in connect_to_fd_opts for better functionality separation in selftests/bpf.', 'keywords': 'selftests, network_helper_opts, connect_to_fd_opts', 'commit_classification': "It's a test case or test infrastructure change.", 'commit_complexity': 'Simple, can be used without much configuration. For example, a simple helper function.', 'Major related component': 'The test cases and makefiles', 'program_types_related': ['It improves the overall eBPF infrastructure (e.g., verifier, runtime, etc.).']}
--------------------
--------------------
Processing Commit ID: bf977ee4a9e2ad8a41b3a2497aada5e7eb09eaea
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: bf977ee4a9e2ad8a41b3a2497aada5e7eb09eaea
  Author Name: Alexei Starovoitov
  Author Email: ast@kernel.org
  Commit Date: 1718938233
  Commit Message:
    Merge branch 'fix-compiler-warnings-looking-for-suggestions'

Rafael Passos says:

====================
Fix compiler warnings
  Parent Hashes: 3b06304370931f90cd6f50ea9dd55603429b13dc 21ab4980e02d495174bc64c00ceb4d3cf87fadb1
  Refs:  looking for suggestions

Hi

- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'This commit fixes compiler warnings by merging relevant changes.', 'keywords': 'fix,compiler,warnings', 'commit_classification': "It's a bug fix.", 'commit_complexity': 'Simple, can be used without much configuration. For example, a simple helper function.', 'Major related component': 'Other component related to eBPF but not listed above.', 'program_types_related': ["It's not related to any of the above."]}
--------------------
--------------------
Processing Commit ID: 21ab4980e02d495174bc64c00ceb4d3cf87fadb1
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: 21ab4980e02d495174bc64c00ceb4d3cf87fadb1
  Author Name: Rafael Passos
  Author Email: rafael@rcpassos.me
  Commit Date: 1718938226
  Commit Message:
    bpf: remove redeclaration of new_n in bpf_verifier_vlog

This new_n is defined in the start of this function.
Its value is overwritten by `new_n = min(n
  Parent Hashes: ab224b9ef7c4eaa752752455ea79bd7022209d5d
  Refs:  log->len_total);`
a couple lines before my change

- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'Removed redundant redeclaration of variable new_n in bpf_verifier_vlog function.', 'keywords': 'redundant,declaration,bpf_verifier', 'commit_classification': "It's a cleanup or refactoring in the code.", 'commit_complexity': 'Simple, can be used without much configuration. For example, a simple helper function.', 'Major related component': 'The eBPF verifier', 'program_types_related': ['It improves the overall eBPF infrastructure (e.g., verifier, runtime, etc.).']}
--------------------
--------------------
Processing Commit ID: ab224b9ef7c4eaa752752455ea79bd7022209d5d
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: ab224b9ef7c4eaa752752455ea79bd7022209d5d
  Author Name: Rafael Passos
  Author Email: rafael@rcpassos.me
  Commit Date: 1718938226
  Commit Message:
    bpf: remove unused parameter in __bpf_free_used_btfs

Fixes a compiler warning. The __bpf_free_used_btfs function
was taking an extra unused struct bpf_prog_aux *aux param

Signed-off-by: Rafael Passos <rafael@rcpassos.me>
Link: https://lore.kernel.org/r/20240615022641.210320-3-rafael@rcpassos.me
Signed-off-by: Alexei Starovoitov <ast@kernel.org>

  Parent Hashes: 9919c5c98cb25dbf7e76aadb9beab55a2a25f830
  Refs: 

- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'Remove unused parameter in __bpf_free_used_btfs function to fix compiler warning.', 'keywords': 'unused parameter, compiler warning, bpf', 'commit_classification': "It's a cleanup or refactoring in the code.", 'commit_complexity': 'Simple, can be used without much configuration. For example, a simple helper function.', 'Major related component': 'The helper and kfuncs', 'program_types_related': ['It improves the overall eBPF infrastructure (e.g., verifier, runtime, etc.).']}
--------------------
--------------------
Processing Commit ID: 9919c5c98cb25dbf7e76aadb9beab55a2a25f830
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: 9919c5c98cb25dbf7e76aadb9beab55a2a25f830
  Author Name: Rafael Passos
  Author Email: rafael@rcpassos.me
  Commit Date: 1718938226
  Commit Message:
    bpf: remove unused parameter in bpf_jit_binary_pack_finalize

Fixes a compiler warning. the bpf_jit_binary_pack_finalize function
was taking an extra bpf_prog parameter that went unused.
This removves it and updates the callers accordingly.

Signed-off-by: Rafael Passos <rafael@rcpassos.me>
Link: https://lore.kernel.org/r/20240615022641.210320-2-rafael@rcpassos.me
Signed-off-by: Alexei Starovoitov <ast@kernel.org>

  Parent Hashes: 3b06304370931f90cd6f50ea9dd55603429b13dc
  Refs: 

- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'Remove unused parameter from bpf_jit_binary_pack_finalize to fix compiler warning.', 'keywords': 'unused parameter, compiler warning, bpf_jit_binary_pack_finalize', 'commit_classification': "It's a cleanup or refactoring in the code.", 'commit_complexity': 'Simple, can be used without much configuration. For example, a simple helper function.', 'Major related component': 'The JIT compiler', 'program_types_related': ['It improves the overall eBPF infrastructure (e.g., verifier, runtime, etc.).']}
--------------------
--------------------
Processing Commit ID: 3b06304370931f90cd6f50ea9dd55603429b13dc
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: 3b06304370931f90cd6f50ea9dd55603429b13dc
  Author Name: Alexei Starovoitov
  Author Email: ast@kernel.org
  Commit Date: 1718938109
  Commit Message:
    Merge branch 'bpf-verifier-correct-tail_call_reachable-for-bpf-prog'

Leon Hwang says:

====================
bpf
  Parent Hashes: f6afdaf72af7583d251bd569ded8d7d1eeb849c2 f663a03c8e35c5156bad073a4a8f5e673d656e3f
  Refs:  verifier: Correct tail_call_reachable for bpf prog

It's confusing to inspect 'prog->aux->tail_call_reachable' with drgn[0]

- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'Merge branch to correct tail_call_reachable for BPF programs.', 'keywords': 'merge, verifier, tail_call_reachable', 'commit_classification': "It's a bug fix.", 'commit_complexity': 'Moderate, requires some setup or understanding of the system. For example, a new map type or a new link type.', 'Major related component': 'The eBPF verifier', 'program_types_related': ['It improves the overall eBPF infrastructure (e.g., verifier, runtime, etc.).']}
--------------------
--------------------
Processing Commit ID: f663a03c8e35c5156bad073a4a8f5e673d656e3f
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: f663a03c8e35c5156bad073a4a8f5e673d656e3f
  Author Name: Leon Hwang
  Author Email: hffilwlqm@gmail.com
  Commit Date: 1718938109
  Commit Message:
    bpf
  Parent Hashes: 01793ed86b5d7df1e956520b5474940743eb7ed8
  Refs:  x64: Remove tail call detection

As 'prog->aux->tail_call_reachable' is correct for tail call present

- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'The commit removes tail call detection from x64, relying on prog->aux->tail_call_reachable.', 'keywords': 'tail call detection, x64, prog->aux->tail_call_reachable', 'commit_classification': "It's a cleanup or refactoring in the code.", 'commit_complexity': 'Moderate, requires some setup or understanding of the system. For example, a new map type or a new link type.', 'Major related component': 'The eBPF verifier', 'program_types_related': ['It improves the overall eBPF infrastructure (e.g., verifier, runtime, etc.).']}
--------------------
--------------------
Processing Commit ID: 01793ed86b5d7df1e956520b5474940743eb7ed8
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: 01793ed86b5d7df1e956520b5474940743eb7ed8
  Author Name: Leon Hwang
  Author Email: hffilwlqm@gmail.com
  Commit Date: 1718938109
  Commit Message:
    bpf
  Parent Hashes: f6afdaf72af7583d251bd569ded8d7d1eeb849c2
  Refs:  verifier: Correct tail_call_reachable for bpf prog

It's confusing to inspect 'prog->aux->tail_call_reachable' with drgn[0]

- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': "Corrects faulty 'tail_call_reachable' inspection in eBPF verifier.", 'keywords': 'verifier, tail_call_reachable, bpf', 'commit_classification': "It's a bug fix.", 'commit_complexity': 'Moderate, requires some setup or understanding of the system. For example, a new map type or a new link type.', 'Major related component': 'The eBPF verifier', 'program_types_related': ['It improves the overall eBPF infrastructure (e.g., verifier, runtime, etc.).']}
--------------------
--------------------
Processing Commit ID: d5a7fc58da039903b332041e8c67daae36f08b50
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: d5a7fc58da039903b332041e8c67daae36f08b50
  Author Name: Linus Torvalds
  Author Email: torvalds@linux-foundation.org
  Commit Date: 1718905790
  Commit Message:
    Merge tag 'net-6.10-rc5' of git://git.kernel.org/pub/scm/linux/kernel/git/netdev/net

Pull networking fixes from Jakub Kicinski:
 "Including fixes from wireless
  Parent Hashes: 042742a1ff1f37ca88c303a9e61afc8c56b23657 fba383985354e83474f95f36d7c65feb75dba19d
  Refs:  bpf and netfilter.

  Happy summer solstice! The line count is a bit inflated by a selftest
  and update to a driver's FW interface header

- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'Merge networking fixes including wireless updates and selftest enhancements.', 'keywords': 'networking, wireless, selftest', 'commit_classification': "It's a bug fix.", 'commit_complexity': "Complex, needs expert knowledge or significant changes to existing systems. Like adding a completely new subsystem support or a completely new program type don't exist before.", 'Major related component': 'Other component related to eBPF but not listed above.', 'program_types_related': ["It's not related to any of the above."]}
--------------------
--------------------
Processing Commit ID: 6cd4a78d962bebbaf8beb7d2ead3f34120e3f7b2
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: 6cd4a78d962bebbaf8beb7d2ead3f34120e3f7b2
  Author Name: Ignat Korchagin
  Author Email: ignat@cloudflare.com
  Commit Date: 1718872994
  Commit Message:
    net: do not leave a dangling sk pointer
  Parent Hashes: f9ae848904289ddb16c7c9e4553ed4c64300de49
  Refs:  when socket creation fails

It is possible to trigger a use-after-free by:
  * attaching an fentry probe to __sock_release() and the probe calling the
    bpf_get_socket_cookie() helper
  * running traceroute -I 1.1.1.1 on a freshly booted VM

A KASAN enabled kernel will log something like below (decoded and stripped):
==================================================================
BUG: KASAN: slab-use-after-free in __sock_gen_cookie (./arch/x86/include/asm/atomic64_64.h:15 ./include/linux/atomic/atomic-arch-fallback.h:2583 ./include/linux/atomic/atomic-instrumented.h:1611 net/core/sock_diag.c:29)
Read of size 8 at addr ffff888007110dd8 by task traceroute/299

CPU: 2 PID: 299 Comm: traceroute Tainted: G            E      6.10.0-rc2+ #2
Hardware name: QEMU Standard PC (i440FX + PIIX

- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'Fix use-after-free vulnerability related to dangling socket pointer during certain network operations.', 'keywords': 'use-after-free,dangling pointer,socket', 'commit_classification': "It's a bug fix.", 'commit_complexity': 'Moderate, requires some setup or understanding of the system. For example, a new map type or a new link type.', 'Major related component': 'The helper and kfuncs', 'program_types_related': ['tracepoints like programs']}
--------------------
--------------------
Processing Commit ID: 66b5867150630e8f9c9a2b7430e55a3beaa83a5b
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: 66b5867150630e8f9c9a2b7430e55a3beaa83a5b
  Author Name: Matt Bobrowski
  Author Email: mattbobrowski@google.com
  Commit Date: 1718724886
  Commit Message:
    bpf: Update BPF LSM maintainer list

After catching up with KP recently
  Parent Hashes: b90d77e5fd784ada62ddd714d15ee2400c28e1cf
  Refs:  we discussed that I will be now be
responsible for co-maintaining the BPF LSM. Adding myself as
designated maintainer of the BPF LSM

- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'Added Matt Bobrowski as a co-maintainer for the BPF LSM component.', 'keywords': 'BPF LSM, maintainer, update', 'commit_classification': "It's other type of commit.", 'commit_complexity': 'Simple, can be used without much configuration. For example, a simple helper function.', 'Major related component': 'Other component related to eBPF but not listed above.', 'program_types_related': ['LSM like programs']}
--------------------
--------------------
Processing Commit ID: b90d77e5fd784ada62ddd714d15ee2400c28e1cf
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: b90d77e5fd784ada62ddd714d15ee2400c28e1cf
  Author Name: Alexei Starovoitov
  Author Email: ast@kernel.org
  Commit Date: 1718723986
  Commit Message:
    bpf: Fix remap of arena.

The bpf arena logic didn't account for mremap operation. Add a refcnt for
multiple mmap events to prevent use-after-free in arena_vm_close.

Fixes: 317460317a02 ("bpf: Introduce bpf_arena.")
Reported-by: Pengfei Xu <pengfei.xu@intel.com>
Signed-off-by: Alexei Starovoitov <ast@kernel.org>
Signed-off-by: Daniel Borkmann <daniel@iogearbox.net>
Reviewed-by: Barret Rhoden <brho@google.com>
Tested-by: Pengfei Xu <pengfei.xu@intel.com>
Closes: https://lore.kernel.org/bpf/Zmuw29IhgyPNKnIM@xpf.sh.intel.com
Link: https://lore.kernel.org/bpf/20240617171812.76634-1-alexei.starovoitov@gmail.com

  Parent Hashes: bfbcb2c9d2978a28e9f0a77100170dc14fcf7c79
  Refs: 

- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'Fix use-after-free bug in bpf_arena by adding a refcnt for mremap operations.', 'keywords': 'bpf, arena, refcnt', 'commit_classification': "It's a bug fix.", 'commit_complexity': 'Moderate, requires some setup or understanding of the system. For example, a new map type or a new link type.', 'Major related component': 'Other component related to eBPF but not listed above.', 'program_types_related': ['It improves the overall eBPF infrastructure (e.g., verifier, runtime, etc.).']}
--------------------
--------------------
Processing Commit ID: f6afdaf72af7583d251bd569ded8d7d1eeb849c2
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: f6afdaf72af7583d251bd569ded8d7d1eeb849c2
  Author Name: Andrii Nakryiko
  Author Email: andrii@kernel.org
  Commit Date: 1718660505
  Commit Message:
    Merge branch 'bpf-support-resilient-split-btf'

Alan Maguire says:

====================
bpf: support resilient split BTF

Split BPF Type Format (BTF) provides huge advantages in that kernel
modules only have to provide type information for types that they do not
share with the core kernel; for core kernel types
  Parent Hashes: dedf56d775c0bebbc3003bfb988dddaf0a583c28 6ba77385f386053cea2a1cad33717de74a26db4e
  Refs:  split BTF refers to
core kernel BTF type ids.  So for a STRUCT sk_buff

- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'The commit adds support for resilient split BPF Type Format (BTF) to improve kernel module type handling.', 'keywords': 'resilient,BTF,kernel', 'commit_classification': "It's a new feature.", 'commit_complexity': "Complex, needs expert knowledge or significant changes to existing systems. Like adding a completely new subsystem support or a completely new program type don't exist before.", 'Major related component': 'The BPF Type Format (BTF)', 'program_types_related': ['It improves the overall eBPF infrastructure (e.g., verifier, runtime, etc.).']}
--------------------
--------------------
Processing Commit ID: 6ba77385f386053cea2a1cad33717de74a26db4e
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: 6ba77385f386053cea2a1cad33717de74a26db4e
  Author Name: Alan Maguire
  Author Email: alan.maguire@oracle.com
  Commit Date: 1718660311
  Commit Message:
    resolve_btfids: Handle presence of .BTF.base section

Now that btf_parse_elf() handles .BTF.base section presence
  Parent Hashes: c86f180ffc993975fed5907a869fc9b1555d0cfb
  Refs: 
we need to ensure that resolve_btfids uses .BTF.base when present
rather than the vmlinux base BTF passed in via the -B option.
Detect .BTF.base section presence and unset the base BTF path
to ensure that BTF ELF parsing will do the right thing.

Signed-off-by: Alan Maguire <alan.maguire@oracle.com>
Signed-off-by: Andrii Nakryiko <andrii@kernel.org>
Reviewed-by: Eduard Zingerman <eddyz87@gmail.com>
Link: https://lore.kernel.org/bpf/20240613095014.357981-7-alan.maguire@oracle.com


- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'This commit ensures resolve_btfids uses the .BTF.base section when present for BTF ELF parsing.', 'keywords': 'BTF base, resolve_btfids, BTF ELF parsing', 'commit_classification': "It's a cleanup or refactoring in the code.", 'commit_complexity': 'Moderate, requires some setup or understanding of the system. For example, a new map type or a new link type.', 'Major related component': 'The BPF Type Format (BTF)', 'program_types_related': ['It improves the overall eBPF infrastructure (e.g., verifier, runtime, etc.).']}
--------------------
--------------------
Processing Commit ID: c86f180ffc993975fed5907a869fc9b1555d0cfb
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: c86f180ffc993975fed5907a869fc9b1555d0cfb
  Author Name: Eduard Zingerman
  Author Email: eddyz87@gmail.com
  Commit Date: 1718660311
  Commit Message:
    libbpf: Make btf_parse_elf process .BTF.base transparently

Update btf_parse_elf() to check if .BTF.base section is present.
The logic is as follows:

  if .BTF.base section exists:
     distilled_base := btf_new(.BTF.base)
  if distilled_base:
     btf := btf_new(.BTF
  Parent Hashes: affdeb50616b190c3236cc2bf116e1b931a43be2
  Refs:  .base_btf=distilled_base)
     if base_btf:
        btf_relocate(btf

- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'Enhance libbpf to handle .BTF.base section transparently in btf_parse_elf function.', 'keywords': 'libbpf,BTF,parse_elf', 'commit_classification': "It's a new feature.", 'commit_complexity': 'Moderate, requires some setup or understanding of the system. For example, a new map type or a new link type.', 'Major related component': 'The libbpf library', 'program_types_related': ['It improves the overall eBPF infrastructure (e.g., verifier, runtime, etc.).']}
--------------------
--------------------
Processing Commit ID: affdeb50616b190c3236cc2bf116e1b931a43be2
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: affdeb50616b190c3236cc2bf116e1b931a43be2
  Author Name: Alan Maguire
  Author Email: alan.maguire@oracle.com
  Commit Date: 1718660311
  Commit Message:
    selftests/bpf: Extend distilled BTF tests to cover BTF relocation

Ensure relocated BTF looks as expected; in this case identical to
original split BTF
  Parent Hashes: 19e00c897d5031bed969dd79af28e899e038009f
  Refs:  with a few duplicate anonymous types added to
split BTF by the relocation process.  Also add relocation tests
for edge cases like missing type in base BTF and multiple types
of the same name.

Signed-off-by: Alan Maguire <alan.maguire@oracle.com>
Signed-off-by: Andrii Nakryiko <andrii@kernel.org>
Acked-by: Eduard Zingerman <eddyz87@gmail.com>
Link: https://lore.kernel.org/bpf/20240613095014.357981-5-alan.maguire@oracle.com


- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'Extend selftests for BPF to cover BTF relocation scenarios, ensuring consistency with original BTF.', 'keywords': 'BTF,relocation,selftests', 'commit_classification': "It's a test case or test infrastructure change.", 'commit_complexity': 'Moderate, requires some setup or understanding of the system. For example, a new map type or a new link type.', 'Major related component': 'The BPF Type Format (BTF)', 'program_types_related': ['It improves the overall eBPF infrastructure (e.g., verifier, runtime, etc.).']}
--------------------
--------------------
Processing Commit ID: 19e00c897d5031bed969dd79af28e899e038009f
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: 19e00c897d5031bed969dd79af28e899e038009f
  Author Name: Alan Maguire
  Author Email: alan.maguire@oracle.com
  Commit Date: 1718660311
  Commit Message:
    libbpf: Split BTF relocation

Map distilled base BTF type ids referenced in split BTF and their
references to the base BTF passed in
  Parent Hashes: eb20e727c4343ad591cff2bef243590c77f62cf1
  Refs:  and if the mapping succeeds

- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'The commit refactors BTF relocation to map base BTF type ids in libbpf.', 'keywords': 'BTF, libbpf, relocation', 'commit_classification': "It's a cleanup or refactoring in the code.", 'commit_complexity': 'Moderate, requires some setup or understanding of the system. For example, a new map type or a new link type.', 'Major related component': 'The libbpf library', 'program_types_related': ['It improves the overall eBPF infrastructure (e.g., verifier, runtime, etc.).']}
--------------------
--------------------
Processing Commit ID: eb20e727c4343ad591cff2bef243590c77f62cf1
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: eb20e727c4343ad591cff2bef243590c77f62cf1
  Author Name: Alan Maguire
  Author Email: alan.maguire@oracle.com
  Commit Date: 1718660311
  Commit Message:
    selftests/bpf: Test distilled base
  Parent Hashes: 58e185a0dc359a6c1c9eff348d7badfc9f722159
  Refs:  split BTF generation

Test generation of split+distilled base BTF

- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'Test case added for generating split and distilled base BTF.', 'keywords': 'selftests, BPF, BTF', 'commit_classification': "It's a test case or test infrastructure change.", 'commit_complexity': 'Moderate, requires some setup or understanding of the system. For example, a new map type or a new link type.', 'Major related component': 'The test cases and makefiles', 'program_types_related': ['It improves the overall eBPF infrastructure (e.g., verifier, runtime, etc.).']}
--------------------
--------------------
Processing Commit ID: 58e185a0dc359a6c1c9eff348d7badfc9f722159
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: 58e185a0dc359a6c1c9eff348d7badfc9f722159
  Author Name: Alan Maguire
  Author Email: alan.maguire@oracle.com
  Commit Date: 1718660311
  Commit Message:
    libbpf: Add btf__distill_base() creating split BTF with distilled base BTF

To support more robust split BTF
  Parent Hashes: dedf56d775c0bebbc3003bfb988dddaf0a583c28
  Refs:  adding supplemental context for the
base BTF type ids that split BTF refers to is required.  Without such
references

- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'The commit introduces a new function btf__distill_base() to handle split BTF with distilled base BTF.', 'keywords': 'libbpf, split, BTF', 'commit_classification': "It's a new feature.", 'commit_complexity': 'Moderate, requires some setup or understanding of the system. For example, a new map type or a new link type.', 'Major related component': 'The BPF Type Format (BTF)', 'program_types_related': ['It improves the overall eBPF infrastructure (e.g., verifier, runtime, etc.).']}
--------------------
--------------------
Processing Commit ID: bfbcb2c9d2978a28e9f0a77100170dc14fcf7c79
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: bfbcb2c9d2978a28e9f0a77100170dc14fcf7c79
  Author Name: Alexei Starovoitov
  Author Email: ast@kernel.org
  Commit Date: 1718646356
  Commit Message:
    Merge branch 'bpf-fix-missed-var_off-related-to-movsx-in-verifier'

Yonghong Song says:

====================
bpf: Fix missed var_off related to movsx in verifier

Zac reported a verification issue ([1]) where verification unexpectedly succeeded.
This is due to missing proper var_off setting in verifier related to
movsx insn. I found another similar issue as well. This patch set fixed
both problems and added three inline asm tests to test these fixes.

  [1] https://lore.kernel.org/bpf/CAADnVQLPU0Shz7dWV4bn2BgtGdxN3uFHPeobGBA72tpg5Xoykw@mail.gmail.com/
====================

Acked-by: Eduard Zingerman <eddyz87@gmail.com>
Link: https://lore.kernel.org/r/20240615174621.3994321-1-yonghong.song@linux.dev
Signed-off-by: Alexei Starovoitov <ast@kernel.org>

  Parent Hashes: 143492fce36161402fa2f45a0756de7ff69c366a a62293c33b058415237c55058a6d20de313a2e61
  Refs: 

- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'This commit fixes a missed var_off issue related to movsx in the eBPF verifier and adds inline asm tests.', 'keywords': 'fix, var_off, verifier', 'commit_classification': "It's a bug fix.", 'commit_complexity': 'Moderate, requires some setup or understanding of the system. For example, a new map type or a new link type.', 'Major related component': 'The eBPF verifier', 'program_types_related': ['It improves the overall eBPF infrastructure (e.g., verifier, runtime, etc.).']}
--------------------
--------------------
Processing Commit ID: a62293c33b058415237c55058a6d20de313a2e61
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: a62293c33b058415237c55058a6d20de313a2e61
  Author Name: Yonghong Song
  Author Email: yonghong.song@linux.dev
  Commit Date: 1718646347
  Commit Message:
    selftests/bpf: Add a few tests to cover

Add three unit tests in verifier_movsx.c to cover
cases where missed var_off setting can cause
unexpected verification success or failure.

Signed-off-by: Yonghong Song <yonghong.song@linux.dev>
Link: https://lore.kernel.org/r/20240615174637.3995589-1-yonghong.song@linux.dev
Signed-off-by: Alexei Starovoitov <ast@kernel.org>

  Parent Hashes: 44b7f7151dfc2e0947f39ed4b9bc4b0c2ccd46fc
  Refs: 

- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'Add three unit tests in verifier_movsx.c to improve eBPF verifier coverage.', 'keywords': 'unit tests, verifier, coverage', 'commit_classification': "It's a test case or test infrastructure change.", 'commit_complexity': 'Simple, can be used without much configuration. For example, a simple helper function.', 'Major related component': 'The test cases and makefiles', 'program_types_related': ['It improves the overall eBPF infrastructure (e.g., verifier, runtime, etc.).']}
--------------------
--------------------
Processing Commit ID: 44b7f7151dfc2e0947f39ed4b9bc4b0c2ccd46fc
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: 44b7f7151dfc2e0947f39ed4b9bc4b0c2ccd46fc
  Author Name: Yonghong Song
  Author Email: yonghong.song@linux.dev
  Commit Date: 1718646346
  Commit Message:
    bpf: Add missed var_off setting in coerce_subreg_to_size_sx()

In coerce_subreg_to_size_sx()
  Parent Hashes: 380d5f89a4815ff88461a45de2fb6f28533df708
  Refs:  for the case where upper
sign extension bits are the same for smax32 and smin32
values

- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'The commit adds missing var_off setting in the coerce_subreg_to_size_sx() function for sign extension bits handling.', 'keywords': 'var_off, sign extension, coerce_subreg_to_size_sx', 'commit_classification': "It's a bug fix.", 'commit_complexity': 'Moderate, requires some setup or understanding of the system. For example, a new map type or a new link type.', 'Major related component': 'The eBPF verifier', 'program_types_related': ['It improves the overall eBPF infrastructure (e.g., verifier, runtime, etc.).']}
--------------------
--------------------
Processing Commit ID: 380d5f89a4815ff88461a45de2fb6f28533df708
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: 380d5f89a4815ff88461a45de2fb6f28533df708
  Author Name: Yonghong Song
  Author Email: yonghong.song@linux.dev
  Commit Date: 1718646346
  Commit Message:
    bpf: Add missed var_off setting in set_sext32_default_val()

Zac reported a verification failure and Alexei reproduced the issue
with a simple reproducer ([1]). The verification failure is due to missed
setting for var_off.

The following is the reproducer in [1]:
  0: R1=ctx() R10=fp0
  0: (71) r3 = *(u8 *)(r10 -387)        ;
     R3_w=scalar(smin=smin32=0
  Parent Hashes: 143492fce36161402fa2f45a0756de7ff69c366a
  Refs: smax=umax=smax32=umax32=255

- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'Fixes a verification failure by adding a missed var_off setting in set_sext32_default_val function.', 'keywords': 'verification, var_off, sext32', 'commit_classification': "It's a bug fix.", 'commit_complexity': 'Moderate, requires some setup or understanding of the system. For example, a new map type or a new link type.', 'Major related component': 'The eBPF verifier', 'program_types_related': ['It improves the overall eBPF infrastructure (e.g., verifier, runtime, etc.).']}
--------------------
--------------------
Processing Commit ID: 4314175af49668ab20c0d60d7d7657986e1d0c7c
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: 4314175af49668ab20c0d60d7d7657986e1d0c7c
  Author Name: David S. Miller
  Author Email: davem@davemloft.net
  Commit Date: 1718626449
  Commit Message:
    Merge branch 'net-smc-IPPROTO_SMC'

D. Wythe says:

====================
Introduce IPPROTO_SMC

This patch allows to create smc socket via AF_INET
  Parent Hashes: f22b4b55edb507a2b30981e133b66b642be4d13f d25a92ccae6bed02327b63d138e12e7806830f78
  Refs: 
similar to the following code

- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'This commit introduces new support for creating sockets using the IPPROTO_SMC protocol in the AF_INET socket family.', 'keywords': 'IPPROTO_SMC, smc socket, AF_INET', 'commit_classification': "It's a new feature.", 'commit_complexity': 'Moderate, requires some setup or understanding of the system. For example, a new map type or a new link type.', 'Major related component': 'Other component related to eBPF but not listed above.', 'program_types_related': ['socket like programs']}
--------------------
--------------------
Processing Commit ID: d25a92ccae6bed02327b63d138e12e7806830f78
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: d25a92ccae6bed02327b63d138e12e7806830f78
  Author Name: D. Wythe
  Author Email: alibuda@linux.alibaba.com
  Commit Date: 1718626449
  Commit Message:
    net/smc: Introduce IPPROTO_SMC

This patch allows to create smc socket via AF_INET
  Parent Hashes: 13543d02c90d6195b31bef8fb51dfeff77c0b368
  Refs: 
similar to the following code

- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'This commit introduces IPPROTO_SMC to allow creating smc sockets via AF_INET.', 'keywords': 'IPPROTO_SMC, smc, socket', 'commit_classification': "It's a new feature.", 'commit_complexity': 'Moderate, requires some setup or understanding of the system. For example, a new map type or a new link type.', 'Major related component': 'The syscall interface', 'program_types_related': ['socket like programs']}
--------------------
--------------------
Processing Commit ID: c64da10adb57a135bf91e32202d7077931472533
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: c64da10adb57a135bf91e32202d7077931472533
  Author Name: Jakub Kicinski
  Author Email: kuba@kernel.org
  Commit Date: 1718413030
  Commit Message:
    Merge tag 'for-netdev' of https://git.kernel.org/pub/scm/linux/kernel/git/bpf/bpf

Daniel Borkmann says:

====================
pull-request: bpf 2024-06-14

We've added 8 non-merge commits during the last 2 day(s) which contain
a total of 9 files changed
  Parent Hashes: 1afe4a64379f65e7bd0c841e6ba7adf312b4c928 7bdcedd5c8fb88e7176b93812b139eca5fe0aa46
  Refs:  92 insertions(+)

- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'Merge tag for-netdev from BPF repository, incorporating 8 non-merge commits affecting 9 files.', 'keywords': 'merge, non-merge, netdev', 'commit_classification': "It's other type of commit.", 'commit_complexity': 'Moderate, requires some setup or understanding of the system. For example, a new map type or a new link type.', 'Major related component': 'Other component related to eBPF but not listed above.', 'program_types_related': ['It improves the overall eBPF infrastructure (e.g., verifier, runtime, etc.).']}
--------------------
--------------------
Processing Commit ID: dedf56d775c0bebbc3003bfb988dddaf0a583c28
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: dedf56d775c0bebbc3003bfb988dddaf0a583c28
  Author Name: Alexei Starovoitov
  Author Email: ast@kernel.org
  Commit Date: 1718394760
  Commit Message:
    selftests/bpf: Add tests for add_const

Improve arena based tests and add several C and asm tests
with specific pattern.
These tests would have failed without add_const verifier support.

Also add several loop_inside_iter*() tests that are not related to add_const
  Parent Hashes: 6870bdb3f4f2991193449f9de57109b3e263f55c
  Refs: 
but nice to have.

Signed-off-by: Alexei Starovoitov <ast@kernel.org>
Signed-off-by: Daniel Borkmann <daniel@iogearbox.net>
Link: https://lore.kernel.org/bpf/20240613013815.953-5-alexei.starovoitov@gmail.com


- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'Add and improve eBPF selftests for the add_const verifier feature.', 'keywords': 'selftests, add_const, verifier', 'commit_classification': "It's a test case or test infrastructure change.", 'commit_complexity': 'Moderate, requires some setup or understanding of the system. For example, a new map type or a new link type.', 'Major related component': 'The test cases and makefiles', 'program_types_related': ['It improves the overall eBPF infrastructure (e.g., verifier, runtime, etc.).']}
--------------------
--------------------
Processing Commit ID: 6870bdb3f4f2991193449f9de57109b3e263f55c
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: 6870bdb3f4f2991193449f9de57109b3e263f55c
  Author Name: Alexei Starovoitov
  Author Email: ast@kernel.org
  Commit Date: 1718394760
  Commit Message:
    bpf: Support can_loop/cond_break on big endian

Add big endian support for can_loop/cond_break macros.

Signed-off-by: Alexei Starovoitov <ast@kernel.org>
Signed-off-by: Daniel Borkmann <daniel@iogearbox.net>
Acked-by: Yonghong Song <yonghong.song@linux.dev>
Link: https://lore.kernel.org/bpf/20240613013815.953-4-alexei.starovoitov@gmail.com

  Parent Hashes: 98d7ca374ba4b39e7535613d40e159f09ca14da2
  Refs: 

- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'Add support for can_loop and cond_break macros on big endian systems.', 'keywords': 'big endian,can_loop,cond_break', 'commit_classification': "It's a new feature.", 'commit_complexity': 'Moderate, requires some setup or understanding of the system. For example, a new map type or a new link type.', 'Major related component': 'Other component related to eBPF but not listed above.', 'program_types_related': ['It improves the overall eBPF infrastructure (e.g., verifier, runtime, etc.).']}
--------------------
--------------------
Processing Commit ID: 98d7ca374ba4b39e7535613d40e159f09ca14da2
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: 98d7ca374ba4b39e7535613d40e159f09ca14da2
  Author Name: Alexei Starovoitov
  Author Email: ast@kernel.org
  Commit Date: 1718394759
  Commit Message:
    bpf: Track delta between "linked" registers.

Compilers can generate the code
  r1 = r2
  r1 += 0x1
  if r2 < 1000 goto ...
  use knowledge of r2 range in subsequent r1 operations

So remember constant delta between r2 and r1 and update r1 after 'if' condition.

Unfortunately LLVM still uses this pattern for loops with 'can_loop' construct:
for (i = 0; i < 1000 && can_loop; i++)

The "undo" pass was introduced in LLVM
https://reviews.llvm.org/D121937
to prevent this optimization
  Parent Hashes: 124e8c2b1b5d08a10d3a44ed082eaaf98a78c91f
  Refs:  but it cannot cover all cases.
Instead of fighting middle end optimizer in BPF backend teach the verifier
about this pattern.

Signed-off-by: Alexei Starovoitov <ast@kernel.org>
Signed-off-by: Daniel Borkmann <daniel@iogearbox.net>
Acked-by: Eduard Zingerman <eddyz87@gmail.com>
Link: https://lore.kernel.org/bpf/20240613013815.953-3-alexei.starovoitov@gmail.com


- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'The commit teaches the eBPF verifier to track the delta between linked registers for improved optimization handling.', 'keywords': 'delta, verifier, registers', 'commit_classification': "It's a new feature.", 'commit_complexity': 'Moderate, requires some setup or understanding of the system. For example, a new map type or a new link type.', 'Major related component': 'The eBPF verifier', 'program_types_related': ['It improves the overall eBPF infrastructure (e.g., verifier, runtime, etc.).']}
--------------------
--------------------
Processing Commit ID: 124e8c2b1b5d08a10d3a44ed082eaaf98a78c91f
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: 124e8c2b1b5d08a10d3a44ed082eaaf98a78c91f
  Author Name: Alexei Starovoitov
  Author Email: ast@kernel.org
  Commit Date: 1718394759
  Commit Message:
    bpf: Relax tuple len requirement for sk helpers.

__bpf_skc_lookup() safely handles incorrect values of tuple len
  Parent Hashes: cdbde084d163835ef41cabb59be2292bb0421c51
  Refs: 
hence we can allow zero to be passed as tuple len.
This patch alone doesn't make an observable verifier difference.
It's a trivial improvement that might simplify bpf programs.

Signed-off-by: Alexei Starovoitov <ast@kernel.org>
Signed-off-by: Daniel Borkmann <daniel@iogearbox.net>
Acked-by: Eduard Zingerman <eddyz87@gmail.com>
Link: https://lore.kernel.org/bpf/20240613013815.953-2-alexei.starovoitov@gmail.com


- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'The commit relaxes tuple length requirements in bpf_skc_lookup for sk helpers to simplify BPF programs.', 'keywords': 'bpf, tuple len, sk helpers', 'commit_classification': "It's a cleanup or refactoring in the code.", 'commit_complexity': 'Simple, can be used without much configuration. For example, a simple helper function.', 'Major related component': 'The helper and kfuncs', 'program_types_related': ['socket like programs']}
--------------------
--------------------
Processing Commit ID: 7bdcedd5c8fb88e7176b93812b139eca5fe0aa46
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: 7bdcedd5c8fb88e7176b93812b139eca5fe0aa46
  Author Name: Tony Ambardar
  Author Email: tony.ambardar@gmail.com
  Commit Date: 1718385277
  Commit Message:
    bpf: Harden __bpf_kfunc tag against linker kfunc removal

BPF kfuncs are often not directly referenced and may be inadvertently
removed by optimization steps during kernel builds
  Parent Hashes: 0a5d3258d7c97295a89d22e54733b54aacb62562
  Refs:  thus the __bpf_kfunc
tag mitigates against this removal by including the __used macro. However

- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'The commit hardens the __bpf_kfunc tag to prevent linker from removing BPF kfuncs during kernel build optimization.', 'keywords': 'bpf, kfunc, linker', 'commit_classification': "It's a security fix.", 'commit_complexity': 'Moderate, requires some setup or understanding of the system. For example, a new map type or a new link type.', 'Major related component': 'The helper and kfuncs', 'program_types_related': ['It improves the overall eBPF infrastructure (e.g., verifier, runtime, etc.).']}
--------------------
--------------------
Processing Commit ID: 0a5d3258d7c97295a89d22e54733b54aacb62562
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: 0a5d3258d7c97295a89d22e54733b54aacb62562
  Author Name: Tony Ambardar
  Author Email: tony.ambardar@gmail.com
  Commit Date: 1718384912
  Commit Message:
    compiler_types.h: Define __retain for __attribute__((__retain__))

Some code includes the __used macro to prevent functions and data from
being optimized out. This macro implements __attribute__((__used__))
  Parent Hashes: 2bbe3e5a2f4ef69d13be54f1cf895b4658287080
  Refs: 
which operates at the compiler and IR-level

- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'The commit defines a new __retain macro using __attribute__ to enhance compiler-level function and data retention.', 'keywords': 'macro, attribute, retain', 'commit_classification': "It's a cleanup or refactoring in the code.", 'commit_complexity': 'Simple, can be used without much configuration. For example, a simple helper function.', 'Major related component': 'Other component related to eBPF but not listed above.', 'program_types_related': ["It's not related to any of the above."]}
--------------------
--------------------
Processing Commit ID: 2bbe3e5a2f4ef69d13be54f1cf895b4658287080
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: 2bbe3e5a2f4ef69d13be54f1cf895b4658287080
  Author Name: Florian Westphal
  Author Email: fw@strlen.de
  Commit Date: 1718378421
  Commit Message:
    bpf: Avoid splat in pskb_pull_reason

syzkaller builds (CONFIG_DEBUG_NET=y) frequently trigger a debug
hint in pskb_may_pull.

We'd like to retain this debug check because it might hint at integer
overflows and other issues (kernel code should pull headers
  Parent Hashes: b99a95bc56c52a428befbce12d9451fd7a0f3bc2
  Refs:  not huge
value).

In bpf case

- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'The commit addresses a debug issue in pskb_may_pull to prevent potential integer overflows when pull headers in BPF.', 'keywords': 'debug, pskb_may_pull, integer overflows', 'commit_classification': "It's a bug fix.", 'commit_complexity': 'Moderate, requires some setup or understanding of the system. For example, a new map type or a new link type.', 'Major related component': 'The attach events and bpf link. e.g. perf events, tracepoints, etc.', 'program_types_related': ['tracepoints like programs', 'It improves the overall eBPF infrastructure (e.g., verifier, runtime, etc.).']}
--------------------
--------------------
Processing Commit ID: 33c0fb85b571b0f1bbdbf466e770eebeb29e6f41
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: 33c0fb85b571b0f1bbdbf466e770eebeb29e6f41
  Author Name: Benjamin Tissoires
  Author Email: bentiss@kernel.org
  Commit Date: 1718356821
  Commit Message:
    HID: bpf: make part of struct hid_device writable

It is useful to change the name
  Parent Hashes: f1a5fb6c7cf637e991cedc799e1470e01e148669
  Refs:  the phys and/or the uniq of a
struct hid_device during .rdesc_fixup().

For example

- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'The commit makes part of the struct hid_device writable in the BPF subsystem.', 'keywords': 'HID, struct, writable', 'commit_classification': "It's a new feature.", 'commit_complexity': 'Moderate, requires some setup or understanding of the system. For example, a new map type or a new link type.', 'Major related component': 'Other component related to eBPF but not listed above.', 'program_types_related': ['HID driver like programs']}
--------------------
--------------------
Processing Commit ID: f1a5fb6c7cf637e991cedc799e1470e01e148669
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: f1a5fb6c7cf637e991cedc799e1470e01e148669
  Author Name: Benjamin Tissoires
  Author Email: bentiss@kernel.org
  Commit Date: 1718356821
  Commit Message:
    HID: bpf: rework hid_bpf_ops_btf_struct_access

The idea is to provide a list of stucts and their editable fields.

Currently no functional changes are introduced here
  Parent Hashes: bd0747543b3d973df6af0f43965f58965375d524
  Refs:  we will add some
more writeable fields in the next patch.

Acked-by: Alexei Starovoitov <ast@kernel.org>
Link: https://lore.kernel.org/r/20240608-hid_bpf_struct_ops-v3-15-6ac6ade58329@kernel.org
Signed-off-by: Benjamin Tissoires <bentiss@kernel.org>


- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'Rework hid_bpf_ops_btf_struct_access to list structs and editable fields without functional changes.', 'keywords': 'HID,BPF,structs', 'commit_classification': "It's a cleanup or refactoring in the code.", 'commit_complexity': 'Moderate, requires some setup or understanding of the system. For example, a new map type or a new link type.', 'Major related component': 'Other component related to eBPF but not listed above.', 'program_types_related': ['HID driver like programs']}
--------------------
--------------------
Processing Commit ID: bd0747543b3d973df6af0f43965f58965375d524
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: bd0747543b3d973df6af0f43965f58965375d524
  Author Name: Benjamin Tissoires
  Author Email: bentiss@kernel.org
  Commit Date: 1718356821
  Commit Message:
    bpf: allow bpf helpers to be used into HID-BPF struct_ops

Without this helpers like bpf_printk() or bpf_map_update() are not
available
  Parent Hashes: c94ae2189acac38b01be60e3b878605fb328782c
  Refs:  making anything but change of bytes impossible to do.

Link: https://lore.kernel.org/r/20240608-hid_bpf_struct_ops-v3-14-6ac6ade58329@kernel.org
Signed-off-by: Benjamin Tissoires <bentiss@kernel.org>


- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'Enable bpf helpers within HID-BPF struct_ops to access functions like bpf_printk or bpf_map_update.', 'keywords': 'bpf helpers,HID-BPF,struct_ops', 'commit_classification': "It's a new feature.", 'commit_complexity': 'Moderate, requires some setup or understanding of the system. For example, a new map type or a new link type.', 'Major related component': 'The helper and kfuncs', 'program_types_related': ['HID driver like programs']}
--------------------
--------------------
Processing Commit ID: c94ae2189acac38b01be60e3b878605fb328782c
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: c94ae2189acac38b01be60e3b878605fb328782c
  Author Name: Benjamin Tissoires
  Author Email: bentiss@kernel.org
  Commit Date: 1718356820
  Commit Message:
    HID: bpf: error on warnings when compiling bpf objects

There is no real reasons to paper over warnings for such small programs.

Link: https://lore.kernel.org/r/20240608-hid_bpf_struct_ops-v3-13-6ac6ade58329@kernel.org
Signed-off-by: Benjamin Tissoires <bentiss@kernel.org>

  Parent Hashes: 26ba1e0a982b9efe8b121d7e41dae4fdf118b048
  Refs: 

- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'This commit ensures BPF object compilation errors on warnings for HID programs.', 'keywords': 'HID,BPF,compilation', 'commit_classification': "It's a build system or CI/CD change.", 'commit_complexity': 'Simple, can be used without much configuration. For example, a simple helper function.', 'Major related component': 'Other component related to eBPF but not listed above.', 'program_types_related': ['HID driver like programs']}
--------------------
--------------------
Processing Commit ID: 26ba1e0a982b9efe8b121d7e41dae4fdf118b048
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: 26ba1e0a982b9efe8b121d7e41dae4fdf118b048
  Author Name: Benjamin Tissoires
  Author Email: bentiss@kernel.org
  Commit Date: 1718356820
  Commit Message:
    HID: bpf: Artist24: remove unused variable

warning: unused variable ‘tilt’ [-Wunused-variable]

Signed-off-by: Peter Hutterer <peter.hutterer@who-t.net>
Link: https://lore.kernel.org/r/20240608-hid_bpf_struct_ops-v3-12-6ac6ade58329@kernel.org
Signed-off-by: Benjamin Tissoires <bentiss@kernel.org>

  Parent Hashes: 5f42e19de53faf9e6d4455638f75b7c3a3f8d58f
  Refs: 

- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': "Remove unused variable 'tilt' from HID bpf code.", 'keywords': 'remove, unused, variable', 'commit_classification': "It's a cleanup or refactoring in the code.", 'commit_complexity': 'Simple, can be used without much configuration. For example, a simple helper function.', 'Major related component': 'Other component related to eBPF but not listed above.', 'program_types_related': ['HID driver like programs']}
--------------------
--------------------
Processing Commit ID: 5f42e19de53faf9e6d4455638f75b7c3a3f8d58f
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: 5f42e19de53faf9e6d4455638f75b7c3a3f8d58f
  Author Name: Benjamin Tissoires
  Author Email: bentiss@kernel.org
  Commit Date: 1718356820
  Commit Message:
    Documentation: HID: add a small blurb on udev-hid-bpf

This is the current decision we took: we don't provide automatic loading
of HID-BPF by the kernel directly
  Parent Hashes: c5958697a5fa29d3ba9332205a88725afe9ed912
  Refs:  but rely on an external tool for it.

This tool is currently udev-hid-bpf

- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'This commit adds documentation about using udev-hid-bpf for loading HID-BPF programs.', 'keywords': 'Documentation,HID-BPF,udev-hid-bpf', 'commit_classification': "It's a documentation change or typo fix.", 'commit_complexity': 'Simple, can be used without much configuration. For example, a simple helper function.', 'Major related component': 'Other component related to eBPF but not listed above.', 'program_types_related': ['HID driver like programs']}
--------------------
--------------------
Processing Commit ID: c5958697a5fa29d3ba9332205a88725afe9ed912
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: c5958697a5fa29d3ba9332205a88725afe9ed912
  Author Name: Benjamin Tissoires
  Author Email: bentiss@kernel.org
  Commit Date: 1718356820
  Commit Message:
    Documentation: HID: amend HID-BPF for struct_ops

Now that we are using struct_ops
  Parent Hashes: 05b3b8f19441b6bf039cec1990de3c75bb9dbbd9
  Refs:  the docs need to be changed.

Link: https://lore.kernel.org/r/20240608-hid_bpf_struct_ops-v3-10-6ac6ade58329@kernel.org
Signed-off-by: Benjamin Tissoires <bentiss@kernel.org>


- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'The commit updates HID-BPF documentation to reflect changes involving struct_ops.', 'keywords': 'Documentation, HID, struct_ops', 'commit_classification': "It's a documentation change or typo fix.", 'commit_complexity': 'Simple, can be used without much configuration. For example, a simple helper function.', 'Major related component': 'The helper and kfuncs', 'program_types_related': ['HID driver like programs']}
--------------------
--------------------
Processing Commit ID: 05b3b8f19441b6bf039cec1990de3c75bb9dbbd9
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: 05b3b8f19441b6bf039cec1990de3c75bb9dbbd9
  Author Name: Benjamin Tissoires
  Author Email: bentiss@kernel.org
  Commit Date: 1718356820
  Commit Message:
    selftests/hid: add subprog call test

I got a weird verifier error with a subprog once
  Parent Hashes: 4a86220e046da009bef0948e9f51d1d26d68f93c
  Refs:  so let's have a test
for it.

Link: https://lore.kernel.org/r/20240608-hid_bpf_struct_ops-v3-9-6ac6ade58329@kernel.org
Signed-off-by: Benjamin Tissoires <bentiss@kernel.org>


- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'Add a subprogram call test to HID selftests to debug a verifier error.', 'keywords': 'HID,selftests,subprog', 'commit_classification': "It's a test case or test infrastructure change.", 'commit_complexity': 'Simple, can be used without much configuration. For example, a simple helper function.', 'Major related component': 'The test cases and makefiles', 'program_types_related': ['HID driver like programs']}
--------------------
--------------------
Processing Commit ID: 4a86220e046da009bef0948e9f51d1d26d68f93c
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: 4a86220e046da009bef0948e9f51d1d26d68f93c
  Author Name: Benjamin Tissoires
  Author Email: bentiss@kernel.org
  Commit Date: 1718356820
  Commit Message:
    HID: bpf: remove tracing HID-BPF capability

We can now rely on struct_ops as we cleared the users in-tree.

Link: https://lore.kernel.org/r/20240608-hid_bpf_struct_ops-v3-8-6ac6ade58329@kernel.org
Signed-off-by: Benjamin Tissoires <bentiss@kernel.org>

  Parent Hashes: 50fe0fc6e206c9b85a0a6cc183ee5513d70179d1
  Refs: 

- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'Remove HID-BPF tracing capability using struct_ops after clearing in-tree users.', 'keywords': 'HID,BPF,struct_ops', 'commit_classification': "It's a cleanup or refactoring in the code.", 'commit_complexity': 'Moderate, requires some setup or understanding of the system. For example, a new map type or a new link type.', 'Major related component': 'Other component related to eBPF but not listed above.', 'program_types_related': ['HID driver like programs']}
--------------------
--------------------
Processing Commit ID: 50fe0fc6e206c9b85a0a6cc183ee5513d70179d1
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: 50fe0fc6e206c9b85a0a6cc183ee5513d70179d1
  Author Name: Benjamin Tissoires
  Author Email: bentiss@kernel.org
  Commit Date: 1718356820
  Commit Message:
    HID: bpf: convert in-tree fixes into struct_ops

Very mechanical:
- Change HID_BPF_DEVICE_EVENT and HID_BPF_RDESC_FIXUP #defines
- add a matching SEC(".struct_ops.link")
- in ArtistPro16Gen2 make the 2 functions static and have a new one
  calling them

Link: https://lore.kernel.org/r/20240608-hid_bpf_struct_ops-v3-7-6ac6ade58329@kernel.org
Signed-off-by: Benjamin Tissoires <bentiss@kernel.org>

  Parent Hashes: df67602fb8d5a02e40f37efcf4b5cb958c8ca880
  Refs: 

- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'Convert in-tree HID fixes into struct_ops for improved organization and functionality.', 'keywords': 'HID, struct_ops, conversion', 'commit_classification': "It's a cleanup or refactoring in the code.", 'commit_complexity': 'Moderate, requires some setup or understanding of the system. For example, a new map type or a new link type.', 'Major related component': 'Other component related to eBPF but not listed above.', 'program_types_related': ['HID driver like programs']}
--------------------
--------------------
Processing Commit ID: df67602fb8d5a02e40f37efcf4b5cb958c8ca880
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: df67602fb8d5a02e40f37efcf4b5cb958c8ca880
  Author Name: Benjamin Tissoires
  Author Email: bentiss@kernel.org
  Commit Date: 1718356820
  Commit Message:
    HID: bpf: add defines for HID-BPF SEC in in-tree bpf fixes

We are going to switch over struct_ops
  Parent Hashes: e342d6f6f7d82b48c4540b947d8032a3b7b3e6f8
  Refs:  so instead of having to manually
replace all fields one by one

- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'Add defines for HID BPF SEC with in-tree bpf fixes and switch over struct_ops.', 'keywords': 'HID, BPF, fixes', 'commit_classification': "It's a bug fix.", 'commit_complexity': 'Moderate, requires some setup or understanding of the system. For example, a new map type or a new link type.', 'Major related component': 'Other component related to eBPF but not listed above.', 'program_types_related': ['HID driver like programs']}
--------------------
--------------------
Processing Commit ID: e342d6f6f7d82b48c4540b947d8032a3b7b3e6f8
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: e342d6f6f7d82b48c4540b947d8032a3b7b3e6f8
  Author Name: Benjamin Tissoires
  Author Email: bentiss@kernel.org
  Commit Date: 1718356820
  Commit Message:
    HID: samples: convert the 2 HID-BPF samples into struct_ops

This is mostly mechanical: attach_prog is dropped
  Parent Hashes: d7696738d66b4f1379fe77eef61cd1047d7f0773
  Refs:  and
the SEC are converted into struct_ops.

Link: https://lore.kernel.org/r/20240608-hid_bpf_struct_ops-v3-5-6ac6ade58329@kernel.org
Signed-off-by: Benjamin Tissoires <bentiss@kernel.org>


- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'Convert HID-BPF samples into struct_ops to simplify implementations.', 'keywords': 'HID,struct_ops,samples', 'commit_classification': "It's a cleanup or refactoring in the code.", 'commit_complexity': 'Simple, can be used without much configuration. For example, a simple helper function.', 'Major related component': 'Other component related to eBPF but not listed above.', 'program_types_related': ['HID driver like programs']}
--------------------
--------------------
Processing Commit ID: d7696738d66b4f1379fe77eef61cd1047d7f0773
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: d7696738d66b4f1379fe77eef61cd1047d7f0773
  Author Name: Benjamin Tissoires
  Author Email: bentiss@kernel.org
  Commit Date: 1718356819
  Commit Message:
    selftests/hid: convert the hid_bpf selftests with struct_ops

We drop the need for the attach() bpf syscall
  Parent Hashes: ebc0d8093e8c97de459615438edefad1a4ac352c
  Refs:  but we need to set up
the hid_id field before calling __load().

The .bpf.c part is mechanical: we create one struct_ops per HID-BPF
program

- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'The commit converts HID-BPF selftests to use struct_ops, removing the need for the attach() BPF syscall and setting up the hid_id field before loading.', 'keywords': 'hid_bpf,selftests,struct_ops', 'commit_classification': "It's a test case or test infrastructure change.", 'commit_complexity': 'Moderate, requires some setup or understanding of the system. For example, a new map type or a new link type.', 'Major related component': 'The test cases and makefiles', 'program_types_related': ['HID driver like programs']}
--------------------
--------------------
Processing Commit ID: ebc0d8093e8c97de459615438edefad1a4ac352c
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: ebc0d8093e8c97de459615438edefad1a4ac352c
  Author Name: Benjamin Tissoires
  Author Email: bentiss@kernel.org
  Commit Date: 1718356816
  Commit Message:
    HID: bpf: implement HID-BPF through bpf_struct_ops

We do this implementation in several steps to not have the CI failing:
- first (this patch)
  Parent Hashes: 99b40bf8053fa261d368ef78848961c04aa93c74
  Refs:  we add struct_ops while keeping the existing infra
  available
- then we change the selftests

- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'Implement HID-BPF support using bpf_struct_ops while maintaining existing infrastructure.', 'keywords': 'HIDBPF, bpf_struct_ops, implementation', 'commit_classification': "It's a new feature.", 'commit_complexity': 'Moderate, requires some setup or understanding of the system. For example, a new map type or a new link type.', 'Major related component': 'The helper and kfuncs', 'program_types_related': ['HID driver like programs']}
--------------------
--------------------
Processing Commit ID: 99b40bf8053fa261d368ef78848961c04aa93c74
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: 99b40bf8053fa261d368ef78848961c04aa93c74
  Author Name: Benjamin Tissoires
  Author Email: bentiss@kernel.org
  Commit Date: 1718356402
  Commit Message:
    HID: bpf: add hid_get/put_device() helpers

no code change
  Parent Hashes: 146a06a0d225cae240065233fd168fb0b95a10ff
  Refs:  but this way we reduce code duplication and we
can export it later.

Link: https://lore.kernel.org/r/20240608-hid_bpf_struct_ops-v3-2-6ac6ade58329@kernel.org
Signed-off-by: Benjamin Tissoires <bentiss@kernel.org>


- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'Add hid_get and hid_put_device helpers to reduce code duplication in HID.', 'keywords': 'hid_get, hid_put, helpers', 'commit_classification': "It's a cleanup or refactoring in the code.", 'commit_complexity': 'Simple, can be used without much configuration. For example, a simple helper function.', 'Major related component': 'Other component related to eBPF but not listed above.', 'program_types_related': ['HID driver like programs']}
--------------------
--------------------
Processing Commit ID: 146a06a0d225cae240065233fd168fb0b95a10ff
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: 146a06a0d225cae240065233fd168fb0b95a10ff
  Author Name: Benjamin Tissoires
  Author Email: bentiss@kernel.org
  Commit Date: 1718356402
  Commit Message:
    HID: rename struct hid_bpf_ops into hid_ops

Those operations are the ones from HID
  Parent Hashes: 061d1af7b0305227182bd9da60c7706c079348b7
  Refs:  not HID-BPF

- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'Renamed struct `hid_bpf_ops` to `hid_ops` for improved clarity.', 'keywords': 'HID, rename, ops', 'commit_classification': "It's a cleanup or refactoring in the code.", 'commit_complexity': 'Simple, can be used without much configuration. For example, a simple helper function.', 'Major related component': 'Other component related to eBPF but not listed above.', 'program_types_related': ['HID driver like programs']}
--------------------
--------------------
Processing Commit ID: cdbde084d163835ef41cabb59be2292bb0421c51
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: cdbde084d163835ef41cabb59be2292bb0421c51
  Author Name: Alexei Starovoitov
  Author Email: ast@kernel.org
  Commit Date: 1718321585
  Commit Message:
    Merge branch 'bpf-make-trusted-args-nullable'

Vadim Fedorenko says:

====================
bpf: make trusted args nullable

Current verifier checks for the arg to be nullable after checking for
certain pointer types. It prevents programs to pass NULL to kfunc args
even if they are marked as nullable. This patchset adjusts verifier and
changes bpf crypto kfuncs to allow null for IV parameter which is
optional for some ciphers. Benchmark shows ~4% improvements when there
is no need to initialise 0-sized dynptr.

v3:
- add special selftest for nullable parameters
v2:
- adjust kdoc accordingly
====================

Link: https://lore.kernel.org/r/20240613211817.1551967-1-vadfed@meta.com
Signed-off-by: Alexei Starovoitov <ast@kernel.org>

  Parent Hashes: 373a4e13ab4bc947f429fd92409d686fbec57132 2d45ab1eda469c802728d0a74e1601de5e71c098
  Refs: 

- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'Improve the eBPF verifier to allow nullable kfunc arguments for better performance.', 'keywords': 'nullable, kfunc, verifier', 'commit_classification': "It's a bug fix.", 'commit_complexity': 'Moderate, requires some setup or understanding of the system. For example, a new map type or a new link type.', 'Major related component': 'The eBPF verifier', 'program_types_related': ['It improves the overall eBPF infrastructure (e.g., verifier, runtime, etc.).']}
--------------------
--------------------
Processing Commit ID: 2d45ab1eda469c802728d0a74e1601de5e71c098
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: 2d45ab1eda469c802728d0a74e1601de5e71c098
  Author Name: Vadim Fedorenko
  Author Email: vadfed@meta.com
  Commit Date: 1718321584
  Commit Message:
    selftests: bpf: add testmod kfunc for nullable params

Add special test to be sure that only __nullable BTF params can be
replaced by NULL. This patch adds fake kfuncs in bpf_testmod to
properly test different params.

Acked-by: Eduard Zingerman <eddyz87@gmail.com>
Signed-off-by: Vadim Fedorenko <vadfed@meta.com>
Link: https://lore.kernel.org/r/20240613211817.1551967-6-vadfed@meta.com
Signed-off-by: Alexei Starovoitov <ast@kernel.org>

  Parent Hashes: 9b560751f75f7b2484fa22c781be68f4f9fec2b0
  Refs: 

- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'The commit adds a bpf_testmod test for nullable BTF parameter handling in kfuncs.', 'keywords': 'testmod,nullable,kfunc', 'commit_classification': "It's a test case or test infrastructure change.", 'commit_complexity': 'Moderate, requires some setup or understanding of the system. For example, a new map type or a new link type.', 'Major related component': 'The test cases and makefiles', 'program_types_related': ['kprobe/uprobe/ftrace like programs']}
--------------------
--------------------
Processing Commit ID: 9b560751f75f7b2484fa22c781be68f4f9fec2b0
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: 9b560751f75f7b2484fa22c781be68f4f9fec2b0
  Author Name: Vadim Fedorenko
  Author Email: vadfed@meta.com
  Commit Date: 1718321584
  Commit Message:
    selftests: bpf: crypto: adjust bench to use nullable IV

The bench shows some improvements
  Parent Hashes: 9363dc8ddc4e222c4259013ae5428070712910b9
  Refs:  around 4% faster on decrypt.

Before:

Benchmark 'crypto-decrypt' started.
Iter   0 (325.719us): hits    5.105M/s (  5.105M/prod)

- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'The commit adjusts the selftests for bpf crypto to use a nullable IV, resulting in improved decryption performance.', 'keywords': 'selftests,bpf,crypto', 'commit_classification': "It's a test case or test infrastructure change.", 'commit_complexity': 'Moderate, requires some setup or understanding of the system. For example, a new map type or a new link type.', 'Major related component': 'The test cases and makefiles', 'program_types_related': ['It improves the overall eBPF infrastructure (e.g., verifier, runtime, etc.).']}
--------------------
--------------------
Processing Commit ID: 9363dc8ddc4e222c4259013ae5428070712910b9
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: 9363dc8ddc4e222c4259013ae5428070712910b9
  Author Name: Vadim Fedorenko
  Author Email: vadfed@meta.com
  Commit Date: 1718321584
  Commit Message:
    selftests: bpf: crypto: use NULL instead of 0-sized dynptr

Adjust selftests to use nullable option for state and IV arg.

Reviewed-by: Eduard Zingerman <eddyz87@gmail.com>
Signed-off-by: Vadim Fedorenko <vadfed@meta.com>
Link: https://lore.kernel.org/r/20240613211817.1551967-4-vadfed@meta.com
Signed-off-by: Alexei Starovoitov <ast@kernel.org>

  Parent Hashes: 65d6d61d25968d1f13a478a6f303ed8d6b978a77
  Refs: 

- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'Adjusts selftests to use nullable option for state and IV argument in BPF.', 'keywords': 'selftests,bpf,crypto', 'commit_classification': "It's a test case or test infrastructure change.", 'commit_complexity': 'Simple, can be used without much configuration. For example, a simple helper function.', 'Major related component': 'The test cases and makefiles', 'program_types_related': ['It improves the overall eBPF infrastructure (e.g., verifier, runtime, etc.).']}
--------------------
--------------------
Processing Commit ID: 65d6d61d25968d1f13a478a6f303ed8d6b978a77
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: 65d6d61d25968d1f13a478a6f303ed8d6b978a77
  Author Name: Vadim Fedorenko
  Author Email: vadfed@meta.com
  Commit Date: 1718321584
  Commit Message:
    bpf: crypto: make state and IV dynptr nullable

Some ciphers do not require state and IV buffer
  Parent Hashes: a90797993afcb0eaf6bf47a062ff47eb3810a6d5
  Refs:  but with current
implementation 0-sized dynptr is always needed. With adjustment to
verifier we can provide NULL instead of 0-sized dynptr. Make crypto
kfuncs ready for this.

Reviewed-by: Eduard Zingerman <eddyz87@gmail.com>
Signed-off-by: Vadim Fedorenko <vadfed@meta.com>
Link: https://lore.kernel.org/r/20240613211817.1551967-3-vadfed@meta.com
Signed-off-by: Alexei Starovoitov <ast@kernel.org>


- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': "This commit allows the state and IV dynptr in bpf crypto functions to be nullable, supporting ciphers that don't require them.", 'keywords': 'crypto,state,dynptr', 'commit_classification': "It's a new feature.", 'commit_complexity': 'Moderate, requires some setup or understanding of the system. For example, a new map type or a new link type.', 'Major related component': 'The helper and kfuncs', 'program_types_related': ['It improves the overall eBPF infrastructure (e.g., verifier, runtime, etc.).']}
--------------------
--------------------
Processing Commit ID: a90797993afcb0eaf6bf47a062ff47eb3810a6d5
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: a90797993afcb0eaf6bf47a062ff47eb3810a6d5
  Author Name: Vadim Fedorenko
  Author Email: vadfed@meta.com
  Commit Date: 1718321584
  Commit Message:
    bpf: verifier: make kfuncs args nullalble

Some arguments to kfuncs might be NULL in some cases. But currently it's
not possible to pass NULL to any BTF structures because the check for
the suffix is located after all type checks. Move it to earlier place
to allow nullable args.

Acked-by: Eduard Zingerman <eddyz87@gmail.com>
Signed-off-by: Vadim Fedorenko <vadfed@meta.com>
Link: https://lore.kernel.org/r/20240613211817.1551967-2-vadfed@meta.com
Signed-off-by: Alexei Starovoitov <ast@kernel.org>

  Parent Hashes: 373a4e13ab4bc947f429fd92409d686fbec57132
  Refs: 

- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'Allow nullable arguments for kfuncs in the BPF verifier by adjusting type check order.', 'keywords': 'verifier, kfuncs, nullable', 'commit_classification': "It's a bug fix.", 'commit_complexity': 'Moderate, requires some setup or understanding of the system. For example, a new map type or a new link type.', 'Major related component': 'The eBPF verifier', 'program_types_related': ['It improves the overall eBPF infrastructure (e.g., verifier, runtime, etc.).']}
--------------------
--------------------
Processing Commit ID: b99a95bc56c52a428befbce12d9451fd7a0f3bc2
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: b99a95bc56c52a428befbce12d9451fd7a0f3bc2
  Author Name: Maciej Żenczykowski
  Author Email: maze@google.com
  Commit Date: 1718303085
  Commit Message:
    bpf: fix UML x86_64 compile failure

pcpu_hot (defined in arch/x86) is not available on user mode linux (ARCH=um)

Cc: Andrii Nakryiko <andrii@kernel.org>
Cc: John Fastabend <john.fastabend@gmail.com>
Cc: Alexei Starovoitov <ast@kernel.org>
Fixes: 1ae6921009e5 ("bpf: inline bpf_get_smp_processor_id() helper")
Signed-off-by: Maciej Żenczykowski <maze@google.com>
Link: https://lore.kernel.org/r/20240613173146.2524647-1-maze@google.com
Signed-off-by: Alexei Starovoitov <ast@kernel.org>

  Parent Hashes: ceb65eb60026e03e1028a99f0ec94f22065e722a
  Refs: 

- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'Fixes UML x86_64 compilation failure by addressing problem with pcpu_hot not being available.', 'keywords': 'UML,x86_64,compile', 'commit_classification': "It's a bug fix.", 'commit_complexity': 'Simple, can be used without much configuration. For example, a simple helper function.', 'Major related component': 'The helper and kfuncs', 'program_types_related': ['It improves the overall eBPF infrastructure (e.g., verifier, runtime, etc.).']}
--------------------
--------------------
Processing Commit ID: 6a8260147745fe493d733d4e5f9b327da3720905
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: 6a8260147745fe493d733d4e5f9b327da3720905
  Author Name: Daniel Xu
  Author Email: dxu@dxuuu.xyz
  Commit Date: 1718302723
  Commit Message:
    bpf: selftests: Do not use generated kfunc prototypes for arena progs

When selftests are built with a new enough clang
  Parent Hashes: 78746f93e903d022c692b9bb3a3e2570167b2dc2
  Refs:  the arena selftests
opt-in to use LLVM address_space attribute annotations for arena
pointers.

These annotations are not emitted by kfunc prototype generation. This
causes compilation errors when clang sees conflicting prototypes.

Fix by opting arena selftests out of using generated kfunc prototypes.

Fixes: 770abbb5a25a ("bpftool: Support dumping kfunc prototypes from BTF")
Reported-by: kernel test robot <lkp@intel.com>
Closes: https://lore.kernel.org/r/202406131810.c1B8hTm8-lkp@intel.com/
Signed-off-by: Daniel Xu <dxu@dxuuu.xyz>
Link: https://lore.kernel.org/r/fc59a617439ceea9ad8dfbb4786843c2169496ae.1718295425.git.dxu@dxuuu.xyz
Signed-off-by: Alexei Starovoitov <ast@kernel.org>


- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'Fix selftests by opting arena selftests out of generated kfunc prototypes due to conflicting prototypes with LLVM address_space attribute annotations.', 'keywords': 'selftests, kfunc prototypes, LLVM', 'commit_classification': "It's a bug fix.", 'commit_complexity': 'Moderate, requires some setup or understanding of the system. For example, a new map type or a new link type.', 'Major related component': 'The test cases and makefiles', 'program_types_related': ['It improves the overall eBPF infrastructure (e.g., verifier, runtime, etc.).']}
--------------------
--------------------
Processing Commit ID: 78746f93e903d022c692b9bb3a3e2570167b2dc2
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: 78746f93e903d022c692b9bb3a3e2570167b2dc2
  Author Name: Daniel Xu
  Author Email: dxu@dxuuu.xyz
  Commit Date: 1718302723
  Commit Message:
    bpf: Fix bpf_dynptr documentation comments

The function argument names were changed but the doc comment was not.
Fix htmldocs build warning by updating doc comments.

Fixes: cce4c40b9606 ("bpf: treewide: Align kfunc signatures to prog point-of-view")
Signed-off-by: Daniel Xu <dxu@dxuuu.xyz>
Link: https://lore.kernel.org/r/d0b0eb05f91e12e5795966153b11998d3fc1d433.1718295425.git.dxu@dxuuu.xyz
Signed-off-by: Alexei Starovoitov <ast@kernel.org>

  Parent Hashes: 041c1dc988fdffd5eb0c13f1ce5d1b3b0125f208
  Refs: 

- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'Fix documentation comment mismatches for bpf_dynptr to resolve htmldocs build warnings.', 'keywords': 'documentation, comments, htmldocs', 'commit_classification': "It's a documentation change or typo fix.", 'commit_complexity': 'Simple, can be used without much configuration. For example, a simple helper function.', 'Major related component': 'Other component related to eBPF but not listed above.', 'program_types_related': ["It's not related to any of the above."]}
--------------------
--------------------
Processing Commit ID: ceb65eb60026e03e1028a99f0ec94f22065e722a
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: ceb65eb60026e03e1028a99f0ec94f22065e722a
  Author Name: Daniel Borkmann
  Author Email: daniel@iogearbox.net
  Commit Date: 1718302561
  Commit Message:
    selftests/bpf: Add test coverage for reg_set_min_max handling

Add a test case for the jmp32/k fix to ensure selftests have coverage.

Before fix:

  # ./vmtest.sh -- ./test_progs -t verifier_or_jmp32_k
  [...]
  ./test_progs -t verifier_or_jmp32_k
  tester_init:PASS:tester_log_buf 0 nsec
  process_subtest:PASS:obj_open_mem 0 nsec
  process_subtest:PASS:specs_alloc 0 nsec
  run_subtest:PASS:obj_open_mem 0 nsec
  run_subtest:FAIL:unexpected_load_success unexpected success: 0
  #492/1   verifier_or_jmp32_k/or_jmp32_k: bit ops + branch on unknown value:FAIL
  #492     verifier_or_jmp32_k:FAIL
  Summary: 0/0 PASSED
  Parent Hashes: e73cd1cfc2177654e562b04f514be5f0f0b96da2
  Refs:  0 SKIPPED

- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'Add a test case for verifying reg_set_min_max handling in eBPF selftests.', 'keywords': 'test, reg_set_min_max, selftests', 'commit_classification': "It's a test case or test infrastructure change.", 'commit_complexity': 'Simple, can be used without much configuration. For example, a simple helper function.', 'Major related component': 'The test cases and makefiles', 'program_types_related': ['tracepoints like programs']}
--------------------
--------------------
Processing Commit ID: e73cd1cfc2177654e562b04f514be5f0f0b96da2
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: e73cd1cfc2177654e562b04f514be5f0f0b96da2
  Author Name: Daniel Borkmann
  Author Email: daniel@iogearbox.net
  Commit Date: 1718302561
  Commit Message:
    bpf: Reduce stack consumption in check_stack_write_fixed_off

The fake_reg moved into env->fake_reg given it consumes a lot of stack
space (120 bytes). Migrate the fake_reg in check_stack_write_fixed_off()
as well now that we have it.

Signed-off-by: Daniel Borkmann <daniel@iogearbox.net>
Link: https://lore.kernel.org/r/20240613115310.25383-2-daniel@iogearbox.net
Signed-off-by: Alexei Starovoitov <ast@kernel.org>

  Parent Hashes: 92424801261d1564a0bb759da3cf3ccd69fdf5a2
  Refs: 

- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'Reduced stack space by moving fake_reg to env->fake_reg in check_stack_write_fixed_off.', 'keywords': 'stack, fake_reg, consumption', 'commit_classification': "It's a performance optimization.", 'commit_complexity': 'Simple, can be used without much configuration. For example, a simple helper function.', 'Major related component': 'The eBPF verifier', 'program_types_related': ['It improves the overall eBPF infrastructure (e.g., verifier, runtime, etc.).']}
--------------------
--------------------
Processing Commit ID: 92424801261d1564a0bb759da3cf3ccd69fdf5a2
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: 92424801261d1564a0bb759da3cf3ccd69fdf5a2
  Author Name: Daniel Borkmann
  Author Email: daniel@iogearbox.net
  Commit Date: 1718302561
  Commit Message:
    bpf: Fix reg_set_min_max corruption of fake_reg

Juan reported that after doing some changes to buzzer [0] and implementing
a new fuzzing strategy guided by coverage
  Parent Hashes: 26ba7c3f139f843bf46ed0779e30d84641767959
  Refs:  they noticed the following in
one of the probes:

  [...]
  13: (79) r6 = *(u64 *)(r0 +0)         ; R0=map_value(ks=4

- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'The commit fixes a corruption issue in reg_set_min_max for fake registers in eBPF.', 'keywords': 'reg_set_min_max, corruption, fake_reg', 'commit_classification': "It's a bug fix.", 'commit_complexity': 'Moderate, requires some setup or understanding of the system. For example, a new map type or a new link type.', 'Major related component': 'The eBPF verifier', 'program_types_related': ['It improves the overall eBPF infrastructure (e.g., verifier, runtime, etc.).']}
--------------------
--------------------
Processing Commit ID: 041c1dc988fdffd5eb0c13f1ce5d1b3b0125f208
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: 041c1dc988fdffd5eb0c13f1ce5d1b3b0125f208
  Author Name: Vadim Fedorenko
  Author Email: vadfed@meta.com
  Commit Date: 1718281793
  Commit Message:
    selftests/bpf: Validate CHECKSUM_COMPLETE option

Adjust skb program test to run with checksum validation.

Signed-off-by: Vadim Fedorenko <vadfed@meta.com>
Signed-off-by: Daniel Borkmann <daniel@iogearbox.net>
Link: https://lore.kernel.org/bpf/20240606145851.229116-2-vadfed@meta.com

  Parent Hashes: a3cfe84cca28f205761a0450016593b0d728165e
  Refs: 

- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'Add checksum validation to skb program selftest in bpf.', 'keywords': 'checksum, skb, selftest', 'commit_classification': "It's a test case or test infrastructure change.", 'commit_complexity': 'Simple, can be used without much configuration. For example, a simple helper function.', 'Major related component': 'The test cases and makefiles', 'program_types_related': ['socket like programs']}
--------------------
--------------------
Processing Commit ID: a3cfe84cca28f205761a0450016593b0d728165e
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: a3cfe84cca28f205761a0450016593b0d728165e
  Author Name: Vadim Fedorenko
  Author Email: vadfed@meta.com
  Commit Date: 1718281787
  Commit Message:
    bpf: Add CHECKSUM_COMPLETE to bpf test progs

Add special flag to validate that TC BPF program properly updates
checksum information in skb.

Signed-off-by: Vadim Fedorenko <vadfed@meta.com>
Signed-off-by: Daniel Borkmann <daniel@iogearbox.net>
Reviewed-by: Jakub Kicinski <kuba@kernel.org>
Acked-by: Daniel Borkmann <daniel@iogearbox.net>
Link: https://lore.kernel.org/bpf/20240606145851.229116-1-vadfed@meta.com

  Parent Hashes: 4ff5747158f323939e2ce8881ca61f3c646948c4
  Refs: 

- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': "Add CHECKSUM_COMPLETE flag to test TC BPF program's checksum updates in skb.", 'keywords': 'CHECKSUM_COMPLETE, TC, skb', 'commit_classification': "It's a test case or test infrastructure change.", 'commit_complexity': 'Simple, can be used without much configuration. For example, a simple helper function.', 'Major related component': 'The test cases and makefiles', 'program_types_related': ['tc/netfilter like programs']}
--------------------
--------------------
Processing Commit ID: d2675fe95fc7e880aecad2d08626131527e084a6
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: d2675fe95fc7e880aecad2d08626131527e084a6
  Author Name: Jakub Kicinski
  Author Email: kuba@kernel.org
  Commit Date: 1718228043
  Commit Message:
    Merge branch 'net-flow-dissector-allow-explicit-passing-of-netns'

Florian Westphal says:

====================
net: flow dissector: allow explicit passing of netns

Change since last version:
 fix kdoc comment warning reported by kbuild robot
  Parent Hashes: 91579c93a9b207725559e3199870419afd50220f d1dab4f71d372e00e2d34a9c32bf261623e3a95c
  Refs:  no other changes

- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'The commit merges changes to allow explicit passing of netns in net flow dissector.', 'keywords': 'flow,dissector,netns', 'commit_classification': "It's a new feature.", 'commit_complexity': 'Moderate, requires some setup or understanding of the system. For example, a new map type or a new link type.', 'Major related component': 'Other component related to eBPF but not listed above.', 'program_types_related': ["It's not related to any of the above."]}
--------------------
--------------------
Processing Commit ID: b975d3ee5962237c1e2f5d5aeeaaf0dc2173486c
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: b975d3ee5962237c1e2f5d5aeeaaf0dc2173486c
  Author Name: Florian Westphal
  Author Email: fw@strlen.de
  Commit Date: 1718228018
  Commit Message:
    net: add and use skb_get_hash_net

Years ago flow dissector gained ability to delegate flow dissection
to a bpf program
  Parent Hashes: 91579c93a9b207725559e3199870419afd50220f
  Refs:  scoped per netns.

Unfortunately

- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'The commit introduces skb_get_hash_net to leverage flow dissection by bpf programs in the network stack.', 'keywords': 'flow dissection,bpf program,network', 'commit_classification': "It's a new feature.", 'commit_complexity': 'Moderate, requires some setup or understanding of the system. For example, a new map type or a new link type.', 'Major related component': 'The eBPF maps', 'program_types_related': ['tc/netfilter like programs', 'socket like programs', 'It improves the overall eBPF infrastructure (e.g., verifier, runtime, etc.).']}
--------------------
--------------------
Processing Commit ID: 4ff5747158f323939e2ce8881ca61f3c646948c4
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: 4ff5747158f323939e2ce8881ca61f3c646948c4
  Author Name: Alexei Starovoitov
  Author Email: ast@kernel.org
  Commit Date: 1718215292
  Commit Message:
    Merge branch 'bpf-support-dumping-kfunc-prototypes-from-btf'

Daniel Xu says:

====================
bpf: Support dumping kfunc prototypes from BTF

This patchset enables both detecting as well as dumping compilable
prototypes for kfuncs.

The first commit instructs pahole to DECL_TAG kfuncs when available.
This requires v1.27 which was released on 6/11/24. With it
  Parent Hashes: 98b303c9bf05dae932efbd71e18d81f6c64f20d8 770abbb5a25a5b767f1c60ba366aea503728e957
  Refs:  users will
be able to look at BTF inside vmlinux (or modules) and check if the
kfunc they want is available.

The final commit teaches bpftool how to dump kfunc prototypes. This
is done for developer convenience.

The rest of the commits are fixups to enable selftests to use the
newly dumped kfunc prototypes. With these

- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'This commit adds support for dumping kfunc prototypes from BTF for developer convenience.', 'keywords': 'kfunc, BTF, bpftool', 'commit_classification': "It's a new feature.", 'commit_complexity': 'Moderate, requires some setup or understanding of the system. For example, a new map type or a new link type.', 'Major related component': 'The BPF Type Format (BTF)', 'program_types_related': ['It improves the overall eBPF infrastructure (e.g., verifier, runtime, etc.).']}
--------------------
--------------------
Processing Commit ID: 770abbb5a25a5b767f1c60ba366aea503728e957
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: 770abbb5a25a5b767f1c60ba366aea503728e957
  Author Name: Daniel Xu
  Author Email: dxu@dxuuu.xyz
  Commit Date: 1718215292
  Commit Message:
    bpftool: Support dumping kfunc prototypes from BTF

This patch enables dumping kfunc prototypes from bpftool. This is useful
b/c with this patch
  Parent Hashes: c567cba34585514f82600a10587c8813c50e3a7c
  Refs:  end users will no longer have to manually define
kfunc prototypes. For the kernel tree

- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'This patch enables bpftool to automatically dump kfunc prototypes from BTF, which aids users by eliminating the need for manual definitions.', 'keywords': 'bpftool, kfunc, BTF', 'commit_classification': "It's a new feature.", 'commit_complexity': 'Moderate, requires some setup or understanding of the system. For example, a new map type or a new link type.', 'Major related component': 'The bpftool utility', 'program_types_related': ['It improves the overall eBPF infrastructure (e.g., verifier, runtime, etc.).']}
--------------------
--------------------
Processing Commit ID: c567cba34585514f82600a10587c8813c50e3a7c
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: c567cba34585514f82600a10587c8813c50e3a7c
  Author Name: Daniel Xu
  Author Email: dxu@dxuuu.xyz
  Commit Date: 1718215291
  Commit Message:
    bpf: selftests: xfrm: Opt out of using generated kfunc prototypes

The xfrm_info selftest locally defines an aliased type such that folks
with CONFIG_XFRM_INTERFACE=m/n configs can still build the selftests.
See commit aa67961f3243 ("selftests/bpf: Allow building bpf tests with CONFIG_XFRM_INTERFACE=[m|n]").

Thus
  Parent Hashes: f709124dd72fe7a3f6ba7764b2ed145c55c33e47
  Refs:  it is simpler if this selftest opts out of using enerated kfunc
prototypes. The preprocessor macro this commit uses will be introduced
in the final commit.

Signed-off-by: Daniel Xu <dxu@dxuuu.xyz>
Link: https://lore.kernel.org/r/afe0bb1c50487f52542cdd5230c4aef9e36ce250.1718207789.git.dxu@dxuuu.xyz
Signed-off-by: Alexei Starovoitov <ast@kernel.org>


- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'Opt out of using generated kfunc prototypes for xfrm selftest to support CONFIG_XFRM_INTERFACE configurations.', 'keywords': 'selftests, kfunc, xfrm', 'commit_classification': "It's a test case or test infrastructure change.", 'commit_complexity': 'Moderate, requires some setup or understanding of the system. For example, a new map type or a new link type.', 'Major related component': 'The test cases and makefiles', 'program_types_related': ['It improves the overall eBPF infrastructure (e.g., verifier, runtime, etc.).']}
--------------------
--------------------
Processing Commit ID: f709124dd72fe7a3f6ba7764b2ed145c55c33e47
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: f709124dd72fe7a3f6ba7764b2ed145c55c33e47
  Author Name: Daniel Xu
  Author Email: dxu@dxuuu.xyz
  Commit Date: 1718215291
  Commit Message:
    bpf: selftests: nf: Opt out of using generated kfunc prototypes

The bpf-nf selftests play various games with aliased types such that
folks with CONFIG_NF_CONNTRACK=m/n configs can still build the
selftests. See commits:

1058b6a78db2 ("selftests/bpf: Do not fail build if CONFIG_NF_CONNTRACK=m/n")
92afc5329a5b ("selftests/bpf: Fix build errors if CONFIG_NF_CONNTRACK=m")

Thus
  Parent Hashes: cce4c40b960673f9e020835def310f1e89d3a940
  Refs:  it is simpler if these selftests opt out of using generated kfunc
prototypes. The preprocessor macro this commit uses will be introduced
in the final commit.

Signed-off-by: Daniel Xu <dxu@dxuuu.xyz>
Link: https://lore.kernel.org/r/044a5b10cb3abd0d71cb1c818ee0bfc4a2239332.1718207789.git.dxu@dxuuu.xyz
Signed-off-by: Alexei Starovoitov <ast@kernel.org>


- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'The commit allows bpf-nf selftests to opt out of using generated kfunc prototypes for compatibility with different CONFIG_NF_CONNTRACK settings.', 'keywords': 'bpf-nf,selftests,kfunc', 'commit_classification': "It's a test case or test infrastructure change.", 'commit_complexity': 'Simple, can be used without much configuration. For example, a simple helper function.', 'Major related component': 'The test cases and makefiles', 'program_types_related': ['It improves the overall eBPF infrastructure (e.g., verifier, runtime, etc.).']}
--------------------
--------------------
Processing Commit ID: cce4c40b960673f9e020835def310f1e89d3a940
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: cce4c40b960673f9e020835def310f1e89d3a940
  Author Name: Daniel Xu
  Author Email: dxu@dxuuu.xyz
  Commit Date: 1718215291
  Commit Message:
    bpf: treewide: Align kfunc signatures to prog point-of-view

Previously
  Parent Hashes: ec209ad86324de84ef66990f0e9df0851e45e054
  Refs:  kfunc declarations in bpf_kfuncs.h (and others) used "user
facing" types for kfuncs prototypes while the actual kfunc definitions
used "kernel facing" types. More specifically: bpf_dynptr vs
bpf_dynptr_kern

- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': "Align kfunc signatures to match the program's point-of-view in eBPF.", 'keywords': 'kfunc signatures, alignment, eBPF', 'commit_classification': "It's a cleanup or refactoring in the code.", 'commit_complexity': 'Moderate, requires some setup or understanding of the system. For example, a new map type or a new link type.', 'Major related component': 'The helper and kfuncs', 'program_types_related': ['It improves the overall eBPF infrastructure (e.g., verifier, runtime, etc.).']}
--------------------
--------------------
Processing Commit ID: ec209ad86324de84ef66990f0e9df0851e45e054
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: ec209ad86324de84ef66990f0e9df0851e45e054
  Author Name: Daniel Xu
  Author Email: dxu@dxuuu.xyz
  Commit Date: 1718215291
  Commit Message:
    bpf: verifier: Relax caller requirements for kfunc projection type args

Currently
  Parent Hashes: 0ce089cbdc6a393bf9ad04964427852800503a58
  Refs:  if a kfunc accepts a projection type as an argument (eg
struct __sk_buff *)

- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'The commit modifies the eBPF verifier to relax requirements for kfunc projection type arguments.', 'keywords': 'verifier, kfunc, projection', 'commit_classification': "It's a cleanup or refactoring in the code.", 'commit_complexity': 'Moderate, requires some setup or understanding of the system. For example, a new map type or a new link type.', 'Major related component': 'The eBPF verifier', 'program_types_related': ['It improves the overall eBPF infrastructure (e.g., verifier, runtime, etc.).']}
--------------------
--------------------
Processing Commit ID: 0ce089cbdc6a393bf9ad04964427852800503a58
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: 0ce089cbdc6a393bf9ad04964427852800503a58
  Author Name: Daniel Xu
  Author Email: dxu@dxuuu.xyz
  Commit Date: 1718215291
  Commit Message:
    bpf: selftests: Namespace struct_opt callbacks in bpf_dctcp

With generated kfunc prototypes
  Parent Hashes: 2b8dd87332cd2782b5b3f0c423bd6693e487ed30
  Refs:  the existing callback names will
conflict. Fix by namespacing with a bpf_ prefix.

Signed-off-by: Daniel Xu <dxu@dxuuu.xyz>
Link: https://lore.kernel.org/r/efe7aadad8a054e5aeeba94b1d2e4502eee09d7a.1718207789.git.dxu@dxuuu.xyz
Signed-off-by: Alexei Starovoitov <ast@kernel.org>


- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'Namespace struct_opt callbacks in bpf_dctcp with bpf_ prefix to avoid conflicts.', 'keywords': 'namespace, callbacks, conflict', 'commit_classification': "It's a cleanup or refactoring in the code.", 'commit_complexity': 'Simple, can be used without much configuration. For example, a simple helper function.', 'Major related component': 'The libbpf library', 'program_types_related': ['It improves the overall eBPF infrastructure (e.g., verifier, runtime, etc.).']}
--------------------
--------------------
Processing Commit ID: 2b8dd87332cd2782b5b3f0c423bd6693e487ed30
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: 2b8dd87332cd2782b5b3f0c423bd6693e487ed30
  Author Name: Daniel Xu
  Author Email: dxu@dxuuu.xyz
  Commit Date: 1718215291
  Commit Message:
    bpf: Make bpf_session_cookie() kfunc return long *

We will soon be generating kfunc prototypes from BTF. As part of that
  Parent Hashes: ac42f636dc11b2e8d6dea9dd5bb10a39c7bec342
  Refs: 
we need to align the manual signatures in bpf_kfuncs.h with the actual
kfunc definitions. There is currently a conflicting signature for
bpf_session_cookie() w.r.t. return type.

The original intent was to return long * and not __u64 *. You can see
evidence of that intent in a3a5113393cc ("selftests/bpf: Add kprobe
session cookie test").

Fix conflict by changing kfunc definition.

Fixes: 5c919acef851 ("bpf: Add support for kprobe session cookie")
Signed-off-by: Daniel Xu <dxu@dxuuu.xyz>
Link: https://lore.kernel.org/r/7043e1c251ab33151d6e3830f8ea1902ed2604ac.1718207789.git.dxu@dxuuu.xyz
Signed-off-by: Alexei Starovoitov <ast@kernel.org>


- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'Fixes signature conflict by changing bpf_session_cookie() kfunc return type to long *.', 'keywords': 'kfunc,long *,signature', 'commit_classification': "It's a bug fix.", 'commit_complexity': 'Moderate, requires some setup or understanding of the system. For example, a new map type or a new link type.', 'Major related component': 'The helper and kfuncs', 'program_types_related': ['kprobe/uprobe/ftrace like programs']}
--------------------
--------------------
Processing Commit ID: ac42f636dc11b2e8d6dea9dd5bb10a39c7bec342
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: ac42f636dc11b2e8d6dea9dd5bb10a39c7bec342
  Author Name: Daniel Xu
  Author Email: dxu@dxuuu.xyz
  Commit Date: 1718215291
  Commit Message:
    bpf: selftests: Fix bpf_map_sum_elem_count() kfunc prototype

The prototype in progs/map_percpu_stats.c is not in line with how the
actual kfuncs are defined in kernel/bpf/map_iter.c. This causes
compilation errors when kfunc prototypes are generated from BTF.

Fix by aligning with actual kfunc definitions.

Signed-off-by: Daniel Xu <dxu@dxuuu.xyz>
Link: https://lore.kernel.org/r/0497e11a71472dcb71ada7c90ad691523ae87c3b.1718207789.git.dxu@dxuuu.xyz
Signed-off-by: Alexei Starovoitov <ast@kernel.org>

  Parent Hashes: 89f0b1abac497c47d0851b780abecc756c1e8734
  Refs: 

- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'Fix the kfunc prototype for bpf_map_sum_elem_count in eBPF selftests to align with kernel definitions.', 'keywords': 'kfunc,prototype,selftests', 'commit_classification': "It's a bug fix.", 'commit_complexity': 'Moderate, requires some setup or understanding of the system. For example, a new map type or a new link type.', 'Major related component': 'The helper and kfuncs', 'program_types_related': ['It improves the overall eBPF infrastructure (e.g., verifier, runtime, etc.).']}
--------------------
--------------------
Processing Commit ID: 89f0b1abac497c47d0851b780abecc756c1e8734
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: 89f0b1abac497c47d0851b780abecc756c1e8734
  Author Name: Daniel Xu
  Author Email: dxu@dxuuu.xyz
  Commit Date: 1718215291
  Commit Message:
    bpf: selftests: Fix bpf_cpumask_first_zero() kfunc prototype

The prototype in progs/nested_trust_common.h is not in line with how the
actual kfuncs are defined in kernel/bpf/cpumask.c. This causes compilation
errors when kfunc prototypes are generated from BTF.

Fix by aligning with actual kfunc definitions.

Signed-off-by: Daniel Xu <dxu@dxuuu.xyz>
Link: https://lore.kernel.org/r/437936a4e554b02e04566dd6e3f0a5d08370cc8c.1718207789.git.dxu@dxuuu.xyz
Signed-off-by: Alexei Starovoitov <ast@kernel.org>

  Parent Hashes: dff96e4f5078c6c61fc6c36dddf27b124c4318fc
  Refs: 

- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'Fixes prototype mismatch for bpf_cpumask_first_zero() in selftests to align with kernel kfunc definitions.', 'keywords': 'selftests, prototype, alignment', 'commit_classification': "It's a bug fix.", 'commit_complexity': 'Simple, can be used without much configuration. For example, a simple helper function.', 'Major related component': 'The helper and kfuncs', 'program_types_related': ['It improves the overall eBPF infrastructure (e.g., verifier, runtime, etc.).']}
--------------------
--------------------
Processing Commit ID: dff96e4f5078c6c61fc6c36dddf27b124c4318fc
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: dff96e4f5078c6c61fc6c36dddf27b124c4318fc
  Author Name: Daniel Xu
  Author Email: dxu@dxuuu.xyz
  Commit Date: 1718215290
  Commit Message:
    bpf: selftests: Fix fentry test kfunc prototypes

Some prototypes in progs/get_func_ip_test.c were not in line with how the
actual kfuncs are defined in net/bpf/test_run.c. This causes compilation
errors when kfunc prototypes are generated from BTF.

Fix by aligning with actual kfunc definitions.

Also remove two unused prototypes.

Signed-off-by: Daniel Xu <dxu@dxuuu.xyz>
Link: https://lore.kernel.org/r/1e68870e7626b7b9c6420e65076b307fc404a2f0.1718207789.git.dxu@dxuuu.xyz
Signed-off-by: Alexei Starovoitov <ast@kernel.org>

  Parent Hashes: 718135f5bd24ec10ff38aa0294a7da0a7b99fa89
  Refs: 

- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'Fixed fentry test kfunc prototypes in selftests for correct compilation with BTF.', 'keywords': 'fentry,kfunc,BTF', 'commit_classification': "It's a bug fix.", 'commit_complexity': 'Simple, can be used without much configuration. For example, a simple helper function.', 'Major related component': 'The test cases and makefiles', 'program_types_related': ['kprobe/uprobe/ftrace like programs']}
--------------------
--------------------
Processing Commit ID: 718135f5bd24ec10ff38aa0294a7da0a7b99fa89
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: 718135f5bd24ec10ff38aa0294a7da0a7b99fa89
  Author Name: Daniel Xu
  Author Email: dxu@dxuuu.xyz
  Commit Date: 1718215290
  Commit Message:
    bpf: selftests: Fix bpf_iter_task_vma_new() prototype

bpf_iter_task_vma_new() is defined as taking a u64 as its 3rd argument.
u64 is a unsigned long long. bpf_experimental.h was defining the
prototype as unsigned long.

Fix by using __u64.

Signed-off-by: Daniel Xu <dxu@dxuuu.xyz>
Link: https://lore.kernel.org/r/fab4509bfee914f539166a91c3ff41e949f3df30.1718207789.git.dxu@dxuuu.xyz
Signed-off-by: Alexei Starovoitov <ast@kernel.org>

  Parent Hashes: ebb79e96f1ea454fbcc8fe27dfe44e751bd74b4b
  Refs: 

- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'Fixes prototype mismatch in bpf_iter_task_vma_new() by correcting the third argument type to __u64.', 'keywords': 'prototype,fix,__u64', 'commit_classification': "It's a bug fix.", 'commit_complexity': 'Simple, can be used without much configuration. For example, a simple helper function.', 'Major related component': 'The test cases and makefiles', 'program_types_related': ['It improves the overall eBPF infrastructure (e.g., verifier, runtime, etc.).']}
--------------------
--------------------
Processing Commit ID: ebb79e96f1ea454fbcc8fe27dfe44e751bd74b4b
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: ebb79e96f1ea454fbcc8fe27dfe44e751bd74b4b
  Author Name: Daniel Xu
  Author Email: dxu@dxuuu.xyz
  Commit Date: 1718215290
  Commit Message:
    kbuild: bpf: Tell pahole to DECL_TAG kfuncs

With [0]
  Parent Hashes: 98b303c9bf05dae932efbd71e18d81f6c64f20d8
  Refs:  pahole can now discover kfuncs and inject DECL_TAG
into BTF. With this commit

- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'Enable pahole to discover and inject DECL_TAG kfuncs into BTF.', 'keywords': 'pahole, kfuncs, BTF', 'commit_classification': "It's a build system or CI/CD change.", 'commit_complexity': 'Moderate, requires some setup or understanding of the system. For example, a new map type or a new link type.', 'Major related component': 'The BPF Type Format (BTF)', 'program_types_related': ['It improves the overall eBPF infrastructure (e.g., verifier, runtime, etc.).']}
--------------------
--------------------
Processing Commit ID: bf0baa5bbdc9b99ea081d360f245e5f96e835612
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: bf0baa5bbdc9b99ea081d360f245e5f96e835612
  Author Name: Puranjay Mohan
  Author Email: puranjay@kernel.org
  Commit Date: 1718203459
  Commit Message:
    arm64: implement raw_smp_processor_id() using thread_info

Historically
  Parent Hashes: 7647e2b109f4d508fcb35bb8089a27c4fdd81f61
  Refs:  arm64 implemented raw_smp_processor_id() as a read of
current_thread_info()->cpu. This changed when arm64 moved thread_info into
task struct

- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'The commit implements raw_smp_processor_id using thread_info for the arm64 architecture.', 'keywords': 'arm64, raw_smp_processor_id, thread_info', 'commit_classification': "It's a cleanup or refactoring in the code.", 'commit_complexity': 'Moderate, requires some setup or understanding of the system. For example, a new map type or a new link type.', 'Major related component': 'Other component related to eBPF but not listed above.', 'program_types_related': ["It's not related to any of the above."]}
--------------------
--------------------
Processing Commit ID: 7180f8d91fcbf252de572d9ffacc945effed0060
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: 7180f8d91fcbf252de572d9ffacc945effed0060
  Author Name: Mateusz Guzik
  Author Email: mjguzik@gmail.com
  Commit Date: 1718194199
  Commit Message:
    vfs: add rcu-based find_inode variants for iget ops

This avoids one inode hash lock acquire in the common case on inode
creation
  Parent Hashes: 1613e604df0cd359cf2a7fbd9be7a0bcfacfabd0
  Refs:  in effect significantly reducing contention.

On the stock kernel said lock is typically taken twice:
1. once to check if the inode happens to already be present
2. once to add it to the hash

The back-to-back lock/unlock pattern is known to degrade performance
significantly

- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'Added RCU-based find_inode variants to iget operations for reduced inode hash lock contention.', 'keywords': 'RCU, inode, performance', 'commit_classification': "It's a performance optimization.", 'commit_complexity': 'Moderate, requires some setup or understanding of the system. For example, a new map type or a new link type.', 'Major related component': 'Other component related to eBPF but not listed above.', 'program_types_related': ["It's not related to any of the above."]}
--------------------
--------------------
Processing Commit ID: 30addd1dc6cc4558ec7024448f04bc77d508fe7d
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: 30addd1dc6cc4558ec7024448f04bc77d508fe7d
  Author Name: Jiri Olsa
  Author Email: jolsa@kernel.org
  Commit Date: 1718149469
  Commit Message:
    selftests/bpf: Add uretprobe shadow stack test

Adding uretprobe shadow stack test that runs all existing
uretprobe tests with shadow stack enabled if it's available.

Link: https://lore.kernel.org/all/20240611112158.40795-9-jolsa@kernel.org/

Acked-by: Andrii Nakryiko <andrii@kernel.org>
Reviewed-by: Masami Hiramatsu (Google) <mhiramat@kernel.org>
Signed-off-by: Jiri Olsa <jolsa@kernel.org>
Signed-off-by: Masami Hiramatsu (Google) <mhiramat@kernel.org>

  Parent Hashes: 9e7f74e64ae58688a33a6445e4f9a4e291d0824f
  Refs: 

- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'Add selftests for uretprobe to test shadow stack functionality.', 'keywords': 'uretprobe,shadow stack,selftests', 'commit_classification': "It's a test case or test infrastructure change.", 'commit_complexity': 'Moderate, requires some setup or understanding of the system. For example, a new map type or a new link type.', 'Major related component': 'The test cases and makefiles', 'program_types_related': ['kprobe/uprobe/ftrace like programs']}
--------------------
--------------------
Processing Commit ID: 9e7f74e64ae58688a33a6445e4f9a4e291d0824f
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: 9e7f74e64ae58688a33a6445e4f9a4e291d0824f
  Author Name: Jiri Olsa
  Author Email: jolsa@kernel.org
  Commit Date: 1718149468
  Commit Message:
    selftests/bpf: Add uretprobe syscall call from user space test

Adding test to verify that when called from outside of the
trampoline provided by kernel
  Parent Hashes: f42a58ffb8bb54e66bf9668a6be91477828c0c1b
  Refs:  the uretprobe syscall will cause
calling process to receive SIGILL signal and the attached bpf
program is not executed.

Link: https://lore.kernel.org/all/20240611112158.40795-8-jolsa@kernel.org/

Acked-by: Andrii Nakryiko <andrii@kernel.org>
Reviewed-by: Masami Hiramatsu (Google) <mhiramat@kernel.org>
Signed-off-by: Jiri Olsa <jolsa@kernel.org>
Signed-off-by: Masami Hiramatsu (Google) <mhiramat@kernel.org>


- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'This commit adds a test to verify uretprobe syscall behavior from user space in selftests.', 'keywords': 'selftests,bpf,uretprobe', 'commit_classification': "It's a test case or test infrastructure change.", 'commit_complexity': 'Moderate, requires some setup or understanding of the system. For example, a new map type or a new link type.', 'Major related component': 'The test cases and makefiles', 'program_types_related': ['kprobe/uprobe/ftrace like programs']}
--------------------
--------------------
Processing Commit ID: f42a58ffb8bb54e66bf9668a6be91477828c0c1b
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: f42a58ffb8bb54e66bf9668a6be91477828c0c1b
  Author Name: Jiri Olsa
  Author Email: jolsa@kernel.org
  Commit Date: 1718149468
  Commit Message:
    selftests/bpf: Add uretprobe syscall test for regs changes

Adding test that creates uprobe consumer on uretprobe which changes some
of the registers. Making sure the changed registers are propagated to the
user space when the ureptobe syscall trampoline is used on x86_64.

To be able to do this
  Parent Hashes: 3e8e25761a40194887336650673587191564e12c
  Refs:  adding support to bpf_testmod to create uprobe via
new attribute file:
  /sys/kernel/bpf_testmod_uprobe

This file is expecting file offset and creates related uprobe on current
process exe file and removes existing uprobe if offset is 0. The can be
only single uprobe at any time.

The uprobe has specific consumer that changes registers used in ureprobe
syscall trampoline and which are later checked in the test.

Link: https://lore.kernel.org/all/20240611112158.40795-7-jolsa@kernel.org/

Acked-by: Andrii Nakryiko <andrii@kernel.org>
Reviewed-by: Masami Hiramatsu (Google) <mhiramat@kernel.org>
Signed-off-by: Jiri Olsa <jolsa@kernel.org>
Signed-off-by: Masami Hiramatsu (Google) <mhiramat@kernel.org>


- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'The commit adds a selftest for uretprobe syscall to verify register changes on x86_64.', 'keywords': 'selftests,bpf,uretpobe', 'commit_classification': "It's a test case or test infrastructure change.", 'commit_complexity': 'Moderate, requires some setup or understanding of the system. For example, a new map type or a new link type.', 'Major related component': 'The test cases and makefiles', 'program_types_related': ['kprobe/uprobe/ftrace like programs']}
--------------------
--------------------
Processing Commit ID: 3e8e25761a40194887336650673587191564e12c
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: 3e8e25761a40194887336650673587191564e12c
  Author Name: Jiri Olsa
  Author Email: jolsa@kernel.org
  Commit Date: 1718149468
  Commit Message:
    selftests/bpf: Add uretprobe syscall test for regs integrity

Add uretprobe syscall test that compares register values before
and after the uretprobe is hit. It also compares the register
values seen from attached bpf program.

Link: https://lore.kernel.org/all/20240611112158.40795-6-jolsa@kernel.org/

Acked-by: Andrii Nakryiko <andrii@kernel.org>
Reviewed-by: Masami Hiramatsu (Google) <mhiramat@kernel.org>
Signed-off-by: Jiri Olsa <jolsa@kernel.org>
Signed-off-by: Masami Hiramatsu (Google) <mhiramat@kernel.org>

  Parent Hashes: 29edd8b003db897d81d82d950785327f164650d3
  Refs: 

- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'Add uretprobe syscall test to verify register integrity with BPF program comparison.', 'keywords': 'uretprobe,syscall,registers', 'commit_classification': "It's a test case or test infrastructure change.", 'commit_complexity': 'Moderate, requires some setup or understanding of the system. For example, a new map type or a new link type.', 'Major related component': 'The test cases and makefiles', 'program_types_related': ['kprobe/uprobe/ftrace like programs']}
--------------------
--------------------
Processing Commit ID: 29edd8b003db897d81d82d950785327f164650d3
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: 29edd8b003db897d81d82d950785327f164650d3
  Author Name: Jiri Olsa
  Author Email: jolsa@kernel.org
  Commit Date: 1718149468
  Commit Message:
    selftests/x86: Add return uprobe shadow stack test

Adding return uprobe test for shadow stack and making sure it's
working properly. Borrowed some of the code from bpf selftests.

Link: https://lore.kernel.org/all/20240611112158.40795-5-jolsa@kernel.org/

Acked-by: Andrii Nakryiko <andrii@kernel.org>
Signed-off-by: Jiri Olsa <jolsa@kernel.org>
Signed-off-by: Masami Hiramatsu (Google) <mhiramat@kernel.org>

  Parent Hashes: ff474a78cef5cb5f32be52fe25b78441327a2e7c
  Refs: 

- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'Add a return uprobe test for shadow stack verification in selftests/x86.', 'keywords': 'uproprobe, shadow stack, selftests', 'commit_classification': "It's a test case or test infrastructure change.", 'commit_complexity': 'Moderate, requires some setup or understanding of the system. For example, a new map type or a new link type.', 'Major related component': 'The test cases and makefiles', 'program_types_related': ['kprobe/uprobe/ftrace like programs']}
--------------------
--------------------
Processing Commit ID: ff474a78cef5cb5f32be52fe25b78441327a2e7c
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: ff474a78cef5cb5f32be52fe25b78441327a2e7c
  Author Name: Jiri Olsa
  Author Email: jolsa@kernel.org
  Commit Date: 1718149468
  Commit Message:
    uprobe: Add uretprobe syscall to speed up return probe

Adding uretprobe syscall instead of trap to speed up return probe.

At the moment the uretprobe setup/path is:

  - install entry uprobe

  - when the uprobe is hit
  Parent Hashes: 190fec72df4a5d4d98b1e783c333f471e5e5f344
  Refs:  it overwrites probed function's return address
    on stack with address of the trampoline that contains breakpoint
    instruction

  - the breakpoint trap code handles the uretprobe consumers execution and
    jumps back to original return address

This patch replaces the above trampoline's breakpoint instruction with new
ureprobe syscall call. This syscall does exactly the same job as the trap
with some more extra work:

  - syscall trampoline must save original value for rax/r11/rcx registers
    on stack - rax is set to syscall number and r11/rcx are changed and
    used by syscall instruction

  - the syscall code reads the original values of those registers and
    restore those values in task's pt_regs area

  - only caller from trampoline exposed in '[uprobes]' is allowed

- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'The commit introduces a new uretprobe syscall to enhance the efficiency of return probes.', 'keywords': 'uretprobe, syscall, probe', 'commit_classification': "It's a new feature.", 'commit_complexity': 'Moderate, requires some setup or understanding of the system. For example, a new map type or a new link type.', 'Major related component': 'Other component related to eBPF but not listed above.', 'program_types_related': ['kprobe/uprobe/ftrace like programs']}
--------------------
--------------------
Processing Commit ID: 98b303c9bf05dae932efbd71e18d81f6c64f20d8
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: 98b303c9bf05dae932efbd71e18d81f6c64f20d8
  Author Name: Kenta Tada
  Author Email: tadakentaso@gmail.com
  Commit Date: 1718131149
  Commit Message:
    bpftool: Query only cgroup-related attach types

When CONFIG_NETKIT=y
  Parent Hashes: bb678f01804ccaa861b012b2b9426d69673d8a84
  Refs: 
bpftool-cgroup shows error even if the cgroup's path is correct:

$ bpftool cgroup tree /sys/fs/cgroup
CgroupPath
ID       AttachType      AttachFlags     Name
Error: can't query bpf programs attached to /sys/fs/cgroup: No such device or address

>From strace and kernel tracing

- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'This commit fixes an error in bpftool when querying cgroup-related attach types with CONFIG_NETKIT=y.', 'keywords': 'bpftool,cgroup,query', 'commit_classification': "It's a bug fix.", 'commit_complexity': 'Simple, can be used without much configuration. For example, a simple helper function.', 'Major related component': 'The bpftool utility', 'program_types_related': ['cgroup like programs']}
--------------------
--------------------
Processing Commit ID: b1156532bc29ac9a8d1cf71510cabc8f68181540
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: b1156532bc29ac9a8d1cf71510cabc8f68181540
  Author Name: Jakub Kicinski
  Author Email: kuba@kernel.org
  Commit Date: 1718067734
  Commit Message:
    Merge tag 'for-netdev' of https://git.kernel.org/pub/scm/linux/kernel/git/bpf/bpf-next

Daniel Borkmann says:

====================
pull-request: bpf-next 2024-06-06

We've added 54 non-merge commits during the last 10 day(s) which contain
a total of 50 files changed
  Parent Hashes: 93d4e8bb3f137e8037a65ea96f175f81c25c50e5 f85af9d955ac9601174e1c64f4b3308c1cae4a7e
  Refs:  1887 insertions(+)

- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'Merge pull request for bpf-next containing 54 non-merge commits affecting 50 files.', 'keywords': 'merge, bpf-next, commits', 'commit_classification': "It's other type of commit.", 'commit_complexity': 'Moderate, requires some setup or understanding of the system. For example, a new map type or a new link type.', 'Major related component': 'Other component related to eBPF but not listed above.', 'program_types_related': ['It improves the overall eBPF infrastructure (e.g., verifier, runtime, etc.).']}
--------------------
--------------------
Processing Commit ID: 2ba6d15786f6c11b6e497eebe68b8baec52f7984
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: 2ba6d15786f6c11b6e497eebe68b8baec52f7984
  Author Name: David S. Miller
  Author Email: davem@davemloft.net
  Commit Date: 1718023686
  Commit Message:
    Merge branch 'fix-changing-dsa-conduit'

Marek Behún says:

====================
Fix changing DSA conduit

This series fixes an issue in the DSA code related to host interface UC
address installed into port FDB and port conduit address database when
live-changing port conduit.

The first patch refactores/deduplicates the installation/uninstallation
of the interface's MAC address and the second patch fixes the issue.

Cover letter for v1 and v2:
  https://patchwork.kernel.org/project/netdevbpf/cover/20240429163627.16031-1-kabel@kernel.org/
  https://patchwork.kernel.org/project/netdevbpf/cover/20240502122922.28139-1-kabel@kernel.org/
====================

Signed-off-by: David S. Miller <davem@davemloft.net>

  Parent Hashes: 395059c52e0104a5e01832f866caa8b15284dd9a eef8e906aea270f4b8912a0b51403b80aec54d30
  Refs: 

- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'Fixes an issue in the DSA code related to host interface UC address and port FDB database during conduit changes.', 'keywords': 'DSA, conduit, MAC', 'commit_classification': "It's a bug fix.", 'commit_complexity': 'Moderate, requires some setup or understanding of the system. For example, a new map type or a new link type.', 'Major related component': 'Other component related to eBPF but not listed above.', 'program_types_related': ["It's not related to any of the above."]}
--------------------
--------------------
Processing Commit ID: b8481381d4e2549f06812eb6069198144696340c
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: b8481381d4e2549f06812eb6069198144696340c
  Author Name: Linus Torvalds
  Author Email: torvalds@linux-foundation.org
  Commit Date: 1717949091
  Commit Message:
    Merge tag 'perf-tools-fixes-for-v6.10-2-2024-06-09' of git://git.kernel.org/pub/scm/linux/kernel/git/perf/perf-tools

Pull perf tools fixes from Arnaldo Carvalho de Melo:

 - Update copies of kernel headers
  Parent Hashes: 637c2dfcd9f5e194ab2e879704460840edcde537 ca9680821dfec73c9100860bda4fab1f1309722e
  Refs:  which resulted in support for the
   new 'mseal' syscall

- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'Merge of perf tools fixes and update copies of kernel headers.', 'keywords': 'Merge,perf-tools,headers', 'commit_classification': "It's a build system or CI/CD change.", 'commit_complexity': 'Simple, can be used without much configuration. For example, a simple helper function.', 'Major related component': 'Other component related to eBPF but not listed above.', 'program_types_related': ["It's not related to any of the above."]}
--------------------
--------------------
Processing Commit ID: f85af9d955ac9601174e1c64f4b3308c1cae4a7e
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: f85af9d955ac9601174e1c64f4b3308c1cae4a7e
  Author Name: Geliang Tang
  Author Email: tanggeliang@kylinos.cn
  Commit Date: 1717707846
  Commit Message:
    selftests/bpf: Drop useless arguments of do_test in bpf_tcp_ca

bpf_map_lookup_elem() has been removed from do_test()
  Parent Hashes: cd984b2ed62423eb3daceacb21d651115a612af6
  Refs:  it makes the
sk_stg_map argument of do_test() useless. In addition

- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'Remove unused arguments from do_test in bpf_tcp_ca selftests.', 'keywords': 'do_test,bpf_tcp_ca,selftests', 'commit_classification': "It's a cleanup or refactoring in the code.", 'commit_complexity': 'Simple, can be used without much configuration. For example, a simple helper function.', 'Major related component': 'The test cases and makefiles', 'program_types_related': ['socket like programs']}
--------------------
--------------------
Processing Commit ID: cd984b2ed62423eb3daceacb21d651115a612af6
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: cd984b2ed62423eb3daceacb21d651115a612af6
  Author Name: Geliang Tang
  Author Email: tanggeliang@kylinos.cn
  Commit Date: 1717707845
  Commit Message:
    selftests/bpf: Use start_test in test_dctcp in bpf_tcp_ca

The "if (sk_stg_map)" block in do_test() is only used by test_dctcp()
  Parent Hashes: 224eeb5598c30ee835dc9fea4c7ad85a8fb7eda4
  Refs: 
it makes sense to move it from do_test() into test_dctcp(). Then
do_test() can be used by other tests except test_dctcp().

Signed-off-by: Geliang Tang <tanggeliang@kylinos.cn>
Signed-off-by: Daniel Borkmann <daniel@iogearbox.net>
Link: https://lore.kernel.org/bpf/9938916627b9810c877e5c03a621bc0ba5acf5c5.1717054461.git.tanggeliang@kylinos.cn


- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'Refactor test_dctcp to use start_test, allowing do_test to be reused for other tests.', 'keywords': 'selftests,bpf,test_dctcp', 'commit_classification': "It's a cleanup or refactoring in the code.", 'commit_complexity': 'Simple, can be used without much configuration. For example, a simple helper function.', 'Major related component': 'The test cases and makefiles', 'program_types_related': ['It improves the overall eBPF infrastructure (e.g., verifier, runtime, etc.).']}
--------------------
--------------------
Processing Commit ID: 224eeb5598c30ee835dc9fea4c7ad85a8fb7eda4
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: 224eeb5598c30ee835dc9fea4c7ad85a8fb7eda4
  Author Name: Geliang Tang
  Author Email: tanggeliang@kylinos.cn
  Commit Date: 1717707845
  Commit Message:
    selftests/bpf: Use start_test in test_dctcp_fallback in bpf_tcp_ca

The newly added helper start_test() can be used in test_dctcp_fallback()
too
  Parent Hashes: fee97d0c9a14b5dd5cce0ec1df3a54a6b963f40c
  Refs:  to replace start_server_str() and connect_to_fd_opts(). In that
way

- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'The commit refactors test_dctcp_fallback to use the new start_test helper function in bpf_tcp_ca selftests.', 'keywords': 'start_test, test_dctcp_fallback, refactoring', 'commit_classification': "It's a cleanup or refactoring in the code.", 'commit_complexity': 'Simple, can be used without much configuration. For example, a simple helper function.', 'Major related component': 'The test cases and makefiles', 'program_types_related': ['It improves the overall eBPF infrastructure (e.g., verifier, runtime, etc.).']}
--------------------
--------------------
Processing Commit ID: fee97d0c9a14b5dd5cce0ec1df3a54a6b963f40c
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: fee97d0c9a14b5dd5cce0ec1df3a54a6b963f40c
  Author Name: Geliang Tang
  Author Email: tanggeliang@kylinos.cn
  Commit Date: 1717707845
  Commit Message:
    selftests/bpf: Add start_test helper in bpf_tcp_ca

For moving the "if (sk_stg_map)" block out of do_test()
  Parent Hashes: 9abdfd8a212332c64f6d0a27fc2ad69e9e0335d1
  Refs:  extract the
code before this block as a new function start_test(). It creates
server-side and client-side sockets and returns them to the caller.

Signed-off-by: Geliang Tang <tanggeliang@kylinos.cn>
Signed-off-by: Daniel Borkmann <daniel@iogearbox.net>
Link: https://lore.kernel.org/bpf/48f2921ff9be958f5d3d28fe6bb7269a61cafa9f.1717054461.git.tanggeliang@kylinos.cn


- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'Implemented a new start_test helper function in bpf_tcp_ca selftests to refactor socket creation.', 'keywords': 'start_test, bpf_tcp_ca, refactor', 'commit_classification': "It's a test case or test infrastructure change.", 'commit_complexity': 'Simple, can be used without much configuration. For example, a simple helper function.', 'Major related component': 'The test cases and makefiles', 'program_types_related': ['socket like programs', 'It improves the overall eBPF infrastructure (e.g., verifier, runtime, etc.).']}
--------------------
--------------------
Processing Commit ID: 9abdfd8a212332c64f6d0a27fc2ad69e9e0335d1
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: 9abdfd8a212332c64f6d0a27fc2ad69e9e0335d1
  Author Name: Geliang Tang
  Author Email: tanggeliang@kylinos.cn
  Commit Date: 1717707845
  Commit Message:
    selftests/bpf: Use connect_to_fd_opts in do_test in bpf_tcp_ca

This patch uses connect_to_fd_opts() instead of using connect_fd_to_fd()
and settcpca() in do_test() in prog_tests/bpf_tcp_ca.c to accept a struct
network_helper_opts argument.

Then define a dctcp dedicated post_socket_cb callback stg_post_socket_cb()
  Parent Hashes: 08ac454e258e38813afb906650f19acce3afd982
  Refs: 
invoking both settcpca() and bpf_map_update_elem() in it

- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'Refactor bpf_tcp_ca do_test function to use connect_to_fd_opts and introduce a dctcp post_socket callback.', 'keywords': 'bpf_tcp_ca, connect_to_fd_opts, dctcp', 'commit_classification': "It's a cleanup or refactoring in the code.", 'commit_complexity': 'Moderate, requires some setup or understanding of the system. For example, a new map type or a new link type.', 'Major related component': 'The test cases and makefiles', 'program_types_related': ['tc/netfilter like programs', 'It improves the overall eBPF infrastructure (e.g., verifier, runtime, etc.).']}
--------------------
--------------------
Processing Commit ID: 0ac55d095d375e84fcdac5e51011613734e57854
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: 0ac55d095d375e84fcdac5e51011613734e57854
  Author Name: Paul E. McKenney
  Author Email: paulmck@kernel.org
  Commit Date: 1717699482
  Commit Message:
    tools/rcu: Add rcu-updaters.sh script

This commit adds a tools/rcu/rcu-updaters.sh script that uses bpftrace
to print a histogram of the RCU update-side primitives invoked during
the specified time interval
  Parent Hashes: b9f147cdc2c0bf54ca2c25ed185806f1fc6da65f
  Refs:  or until manually terminated if no interval
is specified.

Sample output on an idle laptop:

@counts[poll_state_synchronize_rcu]: 6
@counts[synchronize_srcu]: 13
@counts[call_rcu_tasks_trace]: 25
@counts[synchronize_rcu]: 54
@counts[kvfree_call_rcu]: 428
@counts[call_rcu]: 2134

Note that when run on a kernel missing one or more of the symbols

- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'Added a script using bpftrace to print a histogram of RCU update-side primitives.', 'keywords': 'bpftrace, RCU, script', 'commit_classification': "It's a new feature.", 'commit_complexity': 'Moderate, requires some setup or understanding of the system. For example, a new map type or a new link type.', 'Major related component': 'Other component related to eBPF but not listed above.', 'program_types_related': ['other']}
--------------------
--------------------
Processing Commit ID: 08ac454e258e38813afb906650f19acce3afd982
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: 08ac454e258e38813afb906650f19acce3afd982
  Author Name: Mykyta Yatsenko
  Author Email: yatsenko@meta.com
  Commit Date: 1717693565
  Commit Message:
    libbpf: Auto-attach struct_ops BPF maps in BPF skeleton

Similarly to `bpf_program`
  Parent Hashes: b24862bac7b5db326716ad07bbff7b6ee3b09a59
  Refs:  support `bpf_map` automatic attachment in
`bpf_object__attach_skeleton`. Currently only struct_ops maps could be
attached.

On bpftool side

- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'This commit enables automatic attachment of struct_ops BPF maps in BPF skeletons using libbpf.', 'keywords': 'libbpf,struct_ops,auto-attach', 'commit_classification': "It's a new feature.", 'commit_complexity': 'Moderate, requires some setup or understanding of the system. For example, a new map type or a new link type.', 'Major related component': 'The libbpf library', 'program_types_related': ['It improves the overall eBPF infrastructure (e.g., verifier, runtime, etc.).']}
--------------------
--------------------
Processing Commit ID: d30d0e49da71de8df10bf3ff1b3de880653af562
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: d30d0e49da71de8df10bf3ff1b3de880653af562
  Author Name: Linus Torvalds
  Author Email: torvalds@linux-foundation.org
  Commit Date: 1717692927
  Commit Message:
    Merge tag 'net-6.10-rc3' of git://git.kernel.org/pub/scm/linux/kernel/git/netdev/net

Pull networking fixes from Jakub Kicinski:
 "Including fixes from BPF and big collection of fixes for WiFi core and
  drivers.

  Current release - regressions:

   - vxlan: fix regression when dropping packets due to invalid src
     addresses

   - bpf: fix a potential use-after-free in bpf_link_free()

   - xdp: revert support for redirect to any xsk socket bound to the
     same UMEM as it can result in a corruption

   - virtio_net:
      - add missing lock protection when reading return code from
        control_buf
      - fix false-positive lockdep splat in DIM
      - Revert "wifi: wilc1000: convert list management to RCU"

   - wifi: ath11k: fix error path in ath11k_pcic_ext_irq_config

  Previous releases - regressions:

   - rtnetlink: make the "split" NLM_DONE handling generic
  Parent Hashes: 2faf6332c506fc3bd23815f8fe8f6d0c35271c17 27bc86540899ee793ab2f4c846e745aa0de443f1
  Refs:  restore the
     old behavior for two cases where we started coalescing those
     messages with normal messages

- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'The commit merges networking and BPF-related fixes, addressing regressions and issues in vxlan, bpf, xdp, virtio_net, and wifi.', 'keywords': 'networking, BPF, wifi', 'commit_classification': "It's a bug fix.", 'commit_complexity': 'Moderate, requires some setup or understanding of the system. For example, a new map type or a new link type.', 'Major related component': 'Other component related to eBPF but not listed above.', 'program_types_related': ['xdp like programs', 'It improves the overall eBPF infrastructure (e.g., verifier, runtime, etc.).']}
--------------------
--------------------
Processing Commit ID: b24862bac7b5db326716ad07bbff7b6ee3b09a59
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: b24862bac7b5db326716ad07bbff7b6ee3b09a59
  Author Name: Alan Maguire
  Author Email: alan.maguire@oracle.com
  Commit Date: 1717682190
  Commit Message:
    selftests/bpf: Add btf_field_iter selftests

The added selftests verify that for every BTF kind we iterate correctly
over consituent strings and ids.

Signed-off-by: Alan Maguire <alan.maguire@oracle.com>
Signed-off-by: Daniel Borkmann <daniel@iogearbox.net>
Link: https://lore.kernel.org/bpf/20240605153314.3727466-1-alan.maguire@oracle.com

  Parent Hashes: 7015843afcaf68c132784c89528dfddc0005e483
  Refs: 

- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': "Added new selftests for verifying BTF field iterators' correct iteration over strings and IDs.", 'keywords': 'selftests,BTF,iteration', 'commit_classification': "It's a test case or test infrastructure change.", 'commit_complexity': 'Moderate, requires some setup or understanding of the system. For example, a new map type or a new link type.', 'Major related component': 'The test cases and makefiles', 'program_types_related': ['tracepoints like programs', 'It improves the overall eBPF infrastructure (e.g., verifier, runtime, etc.).']}
--------------------
--------------------
Processing Commit ID: 7015843afcaf68c132784c89528dfddc0005e483
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: 7015843afcaf68c132784c89528dfddc0005e483
  Author Name: Yonghong Song
  Author Email: yonghong.song@linux.dev
  Commit Date: 1717681753
  Commit Message:
    selftests/bpf: Fix send_signal test with nested CONFIG_PARAVIRT

Alexei reported that send_signal test may fail with nested CONFIG_PARAVIRT
configs. In this particular case
  Parent Hashes: 072088704433f75dacf9e33179dd7a81f0a238d4
  Refs:  the base VM is AMD with 166 cpus

- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'Fixes a send_signal test issue when using nested CONFIG_PARAVIRT configurations.', 'keywords': 'send_signal test, CONFIG_PARAVIRT, selftests', 'commit_classification': "It's a test case or test infrastructure change.", 'commit_complexity': 'Moderate, requires some setup or understanding of the system. For example, a new map type or a new link type.', 'Major related component': 'The test cases and makefiles', 'program_types_related': ['other']}
--------------------
--------------------
Processing Commit ID: 5899c885131a7b2926ed26f6a5df1fc3c878418d
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: 5899c885131a7b2926ed26f6a5df1fc3c878418d
  Author Name: Jakub Kicinski
  Author Email: kuba@kernel.org
  Commit Date: 1717640886
  Commit Message:
    Merge branch 'intel-wired-lan-driver-updates-2024-05-29-ice-igc'

Jacob Keller says:

====================
Intel Wired LAN Driver Updates 2024-05-29 (ice
  Parent Hashes: 886bf9172da06a85de3c68a651477d7d625fd6cc 7d67d11fbe194f71298263f48e33ae2afa38197e
  Refs:  igc)

This series includes fixes for the ice driver as well as a fix for the igc
driver.

Jacob fixes two issues in the ice driver with reading the NVM for providing
firmware data via devlink info. First

- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'The commit merges updates for the Intel wired LAN driver, with specific fixes to the ice and igc drivers.', 'keywords': 'Intel, LAN, driver', 'commit_classification': "It's a bug fix.", 'commit_complexity': 'Moderate, requires some setup or understanding of the system. For example, a new map type or a new link type.', 'Major related component': 'Other component related to eBPF but not listed above.', 'program_types_related': ["It's not related to any of the above."]}
--------------------
--------------------
Processing Commit ID: f3df4044254c98128890b512bf19cc05588f1fe5
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: f3df4044254c98128890b512bf19cc05588f1fe5
  Author Name: Larysa Zaremba
  Author Email: larysa.zaremba@intel.com
  Commit Date: 1717640876
  Commit Message:
    ice: map XDP queues to vectors in ice_vsi_map_rings_to_vectors()

ice_pf_dcb_recfg() re-maps queues to vectors with
ice_vsi_map_rings_to_vectors()
  Parent Hashes: 744d197162c2070a6045a71e2666ed93a57cc65d
  Refs:  which does not restore the previous
state for XDP queues. This leads to no AF_XDP traffic after rebuild.

Map XDP queues to vectors in ice_vsi_map_rings_to_vectors().
Also

- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'Fixes mapping of XDP queues to vectors to restore AF_XDP traffic after rebuild.', 'keywords': 'XDP,queues,vectors', 'commit_classification': "It's a bug fix.", 'commit_complexity': 'Moderate, requires some setup or understanding of the system. For example, a new map type or a new link type.', 'Major related component': 'The attach events and bpf link. e.g. perf events, tracepoints, etc.', 'program_types_related': ['xdp like programs']}
--------------------
--------------------
Processing Commit ID: 744d197162c2070a6045a71e2666ed93a57cc65d
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: 744d197162c2070a6045a71e2666ed93a57cc65d
  Author Name: Larysa Zaremba
  Author Email: larysa.zaremba@intel.com
  Commit Date: 1717640876
  Commit Message:
    ice: add flag to distinguish reset from .ndo_bpf in XDP rings config

Commit 6624e780a577 ("ice: split ice_vsi_setup into smaller functions")
has placed ice_vsi_free_q_vectors() after ice_destroy_xdp_rings() in
the rebuild process. The behaviour of the XDP rings config functions is
context-dependent
  Parent Hashes: adbf5a42341f6ea038d3626cd4437d9f0ad0b2dd
  Refs:  so the change of order has led to
ice_destroy_xdp_rings() doing additional work and removing XDP prog

- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'Add a flag to distinguish reset from .ndo_bpf in XDP rings configuration in the ice driver.', 'keywords': 'flag, reset, XDP', 'commit_classification': "It's a new feature.", 'commit_complexity': 'Moderate, requires some setup or understanding of the system. For example, a new map type or a new link type.', 'Major related component': 'The eBPF maps', 'program_types_related': ['xdp like programs']}
--------------------
--------------------
Processing Commit ID: 0105eaabb27f31d9b8d340aca6fb6a3420cab30f
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: 0105eaabb27f31d9b8d340aca6fb6a3420cab30f
  Author Name: Cong Wang
  Author Email: cong.wang@bytedance.com
  Commit Date: 1717640365
  Commit Message:
    vmalloc: check CONFIG_EXECMEM in is_vmalloc_or_module_addr()

After commit 2c9e5d4a0082 ("bpf: remove CONFIG_BPF_JIT dependency on
CONFIG_MODULES of") CONFIG_BPF_JIT does not depend on CONFIG_MODULES any
more and bpf jit also uses the [MODULES_VADDR
  Parent Hashes: 7cc5a5d65011983952a9c62f170f5b79e24b1239
  Refs:  MODULES_END] memory region.
But is_vmalloc_or_module_addr() still checks CONFIG_MODULES

- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'Check CONFIG_EXECMEM in is_vmalloc_or_module_addr after changes to BPF JIT dependencies.', 'keywords': 'CONFIG_EXECMEM,BPF JIT,is_vmalloc_or_module_addr', 'commit_classification': "It's a cleanup or refactoring in the code.", 'commit_complexity': 'Moderate, requires some setup or understanding of the system. For example, a new map type or a new link type.', 'Major related component': 'Other component related to eBPF but not listed above.', 'program_types_related': ['It improves the overall eBPF infrastructure (e.g., verifier, runtime, etc.).']}
--------------------
--------------------
Processing Commit ID: 886bf9172da06a85de3c68a651477d7d625fd6cc
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: 886bf9172da06a85de3c68a651477d7d625fd6cc
  Author Name: Jakub Kicinski
  Author Email: kuba@kernel.org
  Commit Date: 1717639388
  Commit Message:
    Merge tag 'for-netdev' of https://git.kernel.org/pub/scm/linux/kernel/git/bpf/bpf

Daniel Borkmann says:

====================
pull-request: bpf 2024-06-05

We've added 8 non-merge commits during the last 6 day(s) which contain
a total of 9 files changed
  Parent Hashes: 323a359f9b077f382f4483023d096a4d316fd135 03e38d315f3c5258270ad50f2ae784b6372e87c3
  Refs:  34 insertions(+)

- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'Merged branch with 8 non-merge eBPF related commits to the netdev subsystem.', 'keywords': 'eBPF, non-merge, netdev', 'commit_classification': "It's other type of commit.", 'commit_complexity': 'Moderate, requires some setup or understanding of the system. For example, a new map type or a new link type.', 'Major related component': 'Other component related to eBPF but not listed above.', 'program_types_related': ['It improves the overall eBPF infrastructure (e.g., verifier, runtime, etc.).']}
--------------------
--------------------
Processing Commit ID: 072088704433f75dacf9e33179dd7a81f0a238d4
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: 072088704433f75dacf9e33179dd7a81f0a238d4
  Author Name: Andrii Nakryiko
  Author Email: andrii@kernel.org
  Commit Date: 1717599285
  Commit Message:
    libbpf: Remove callback-based type/string BTF field visitor helpers

Now that all libbpf/bpftool code switched to btf_field_iter
  Parent Hashes: e1a8630291fde2a0edac2955e3df48587dac9906
  Refs:  remove
btf_type_visit_type_ids() and btf_type_visit_str_offs() callback-based
helpers as not needed anymore.

Signed-off-by: Andrii Nakryiko <andrii@kernel.org>
Signed-off-by: Daniel Borkmann <daniel@iogearbox.net>
Tested-by: Alan Maguire <alan.maguire@oracle.com>
Acked-by: Eduard Zingerman <eddyz87@gmail.com>
Acked-by: Jiri Olsa <jolsa@kernel.org>
Link: https://lore.kernel.org/bpf/20240605001629.4061937-6-andrii@kernel.org


- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'The commit removes callback-based type/string BTF field visitor helpers from libbpf as they are now unnecessary.', 'keywords': 'libbpf,BTF,helpers', 'commit_classification': "It's a cleanup or refactoring in the code.", 'commit_complexity': 'Moderate, requires some setup or understanding of the system. For example, a new map type or a new link type.', 'Major related component': 'The libbpf library', 'program_types_related': ['It improves the overall eBPF infrastructure (e.g., verifier, runtime, etc.).']}
--------------------
--------------------
Processing Commit ID: e1a8630291fde2a0edac2955e3df48587dac9906
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: e1a8630291fde2a0edac2955e3df48587dac9906
  Author Name: Andrii Nakryiko
  Author Email: andrii@kernel.org
  Commit Date: 1717599281
  Commit Message:
    bpftool: Use BTF field iterator in btfgen

Switch bpftool's code which is using libbpf-internal
btf_type_visit_type_ids() helper to new btf_field_iter functionality.

This makes bpftool code simpler
  Parent Hashes: c2641123696b572a3b059e1b45777317ba9f9086
  Refs:  but also unblocks removing libbpf's
btf_type_visit_type_ids() helper completely.

Signed-off-by: Andrii Nakryiko <andrii@kernel.org>
Signed-off-by: Daniel Borkmann <daniel@iogearbox.net>
Tested-by: Alan Maguire <alan.maguire@oracle.com>
Reviewed-by: Quentin Monnet <qmo@kernel.org>
Acked-by: Eduard Zingerman <eddyz87@gmail.com>
Acked-by: Jiri Olsa <jolsa@kernel.org>
Link: https://lore.kernel.org/bpf/20240605001629.4061937-5-andrii@kernel.org


- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': "Replaced bpftool's libbpf-internal functionality with a new btf field iterator for simplification.", 'keywords': 'bpftool,BTF iterator,simplification', 'commit_classification': "It's a cleanup or refactoring in the code.", 'commit_complexity': 'Moderate, requires some setup or understanding of the system. For example, a new map type or a new link type.', 'Major related component': 'The bpftool utility', 'program_types_related': ['It improves the overall eBPF infrastructure (e.g., verifier, runtime, etc.).']}
--------------------
--------------------
Processing Commit ID: c2641123696b572a3b059e1b45777317ba9f9086
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: c2641123696b572a3b059e1b45777317ba9f9086
  Author Name: Andrii Nakryiko
  Author Email: andrii@kernel.org
  Commit Date: 1717599277
  Commit Message:
    libbpf: Make use of BTF field iterator in BTF handling code

Use new BTF field iterator logic to replace all the callback-based
visitor calls. There is still a .BTF.ext callback-based visitor APIs
that should be converted
  Parent Hashes: 2bce2c1cb2f0acbf619737a10575f99df0c43984
  Refs:  which will happens as a follow up.

Signed-off-by: Andrii Nakryiko <andrii@kernel.org>
Signed-off-by: Daniel Borkmann <daniel@iogearbox.net>
Tested-by: Alan Maguire <alan.maguire@oracle.com>
Acked-by: Eduard Zingerman <eddyz87@gmail.com>
Acked-by: Jiri Olsa <jolsa@kernel.org>
Link: https://lore.kernel.org/bpf/20240605001629.4061937-4-andrii@kernel.org


- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'The commit replaces callback-based visitor calls with a BTF field iterator in the libbpf code.', 'keywords': 'BTF,libbpf,iterator', 'commit_classification': "It's a cleanup or refactoring in the code.", 'commit_complexity': 'Moderate, requires some setup or understanding of the system. For example, a new map type or a new link type.', 'Major related component': 'The libbpf library', 'program_types_related': ['It improves the overall eBPF infrastructure (e.g., verifier, runtime, etc.).']}
--------------------
--------------------
Processing Commit ID: 2bce2c1cb2f0acbf619737a10575f99df0c43984
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: 2bce2c1cb2f0acbf619737a10575f99df0c43984
  Author Name: Andrii Nakryiko
  Author Email: andrii@kernel.org
  Commit Date: 1717599272
  Commit Message:
    libbpf: Make use of BTF field iterator in BPF linker code

Switch all BPF linker code dealing with iterating BTF type ID and string
offset fields to new btf_field_iter facilities.

Signed-off-by: Andrii Nakryiko <andrii@kernel.org>
Signed-off-by: Daniel Borkmann <daniel@iogearbox.net>
Tested-by: Alan Maguire <alan.maguire@oracle.com>
Acked-by: Eduard Zingerman <eddyz87@gmail.com>
Acked-by: Jiri Olsa <jolsa@kernel.org>
Link: https://lore.kernel.org/bpf/20240605001629.4061937-3-andrii@kernel.org

  Parent Hashes: 68153bb2fffbe59804370e514482f95c4b2053ff
  Refs: 

- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'Utilize BTF field iterator in BPF linker code for type ID and string offset fields.', 'keywords': 'BTF iterator linker', 'commit_classification': "It's a cleanup or refactoring in the code.", 'commit_complexity': 'Moderate, requires some setup or understanding of the system. For example, a new map type or a new link type.', 'Major related component': 'The libbpf library', 'program_types_related': ['It improves the overall eBPF infrastructure (e.g., verifier, runtime, etc.).']}
--------------------
--------------------
Processing Commit ID: 68153bb2fffbe59804370e514482f95c4b2053ff
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: 68153bb2fffbe59804370e514482f95c4b2053ff
  Author Name: Andrii Nakryiko
  Author Email: andrii@kernel.org
  Commit Date: 1717599266
  Commit Message:
    libbpf: Add BTF field iterator

Implement iterator-based type ID and string offset BTF field iterator.
This is used extensively in BTF-handling code and BPF linker code for
various sanity checks
  Parent Hashes: 898ac74c5b5f8b551a377d6a60ca4e30023ac9d2
  Refs:  rewriting IDs/offsets

- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'Introduce BTF field iterator for improved type ID and offset management in libbpf.', 'keywords': 'BTF,iterator,libbpf', 'commit_classification': "It's a new feature.", 'commit_complexity': 'Moderate, requires some setup or understanding of the system. For example, a new map type or a new link type.', 'Major related component': 'The libbpf library', 'program_types_related': ['It improves the overall eBPF infrastructure (e.g., verifier, runtime, etc.).']}
--------------------
--------------------
Processing Commit ID: ca9680821dfec73c9100860bda4fab1f1309722e
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: ca9680821dfec73c9100860bda4fab1f1309722e
  Author Name: Namhyung Kim
  Author Email: namhyung@kernel.org
  Commit Date: 1717597980
  Commit Message:
    perf bpf: Fix handling of minimal vmlinux.h file when interrupting the build

Ingo reported that he was seeing these when hitting Control+C during a
perf tools build:

  Makefile.perf:1149: *** Missing bpftool input for generating vmlinux.h. Stop.

The failure happens when you don't have vmlinux.h or vmlinux with BTF.

ifeq ($(VMLINUX_H)
  Parent Hashes: 5b3cde198878b2f3269d5e7efbc0d514899b1fd8
  Refs: )
  ifeq ($(VMLINUX_BTF)

- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'The commit fixes handling of minimal vmlinux.h file when interrupting the perf tools build process.', 'keywords': 'perf bpf,vmlinux.h,build error', 'commit_classification': "It's a bug fix.", 'commit_complexity': 'Moderate, requires some setup or understanding of the system. For example, a new map type or a new link type.', 'Major related component': 'The bpftool utility', 'program_types_related': ["It's not related to any of the above."]}
--------------------
--------------------
Processing Commit ID: 491aee894a08bc9b8bb52e7363b9d4bc6403f363
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: 491aee894a08bc9b8bb52e7363b9d4bc6403f363
  Author Name: Taehee Yoo
  Author Email: ap420073@gmail.com
  Commit Date: 1717580967
  Commit Message:
    ionic: fix kernel panic in XDP_TX action

In the XDP_TX path
  Parent Hashes: 0a8d3f2e3e8d8aea8af017e14227b91d5989b696
  Refs:  ionic driver sends a packet to the TX path with rx
page and corresponding dma address.
After tx is done

- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'Fix kernel panic issue in the XDP_TX action of the ionic driver.', 'keywords': 'kernel panic,XDP_TX ionic', 'commit_classification': "It's a bug fix.", 'commit_complexity': 'Moderate, requires some setup or understanding of the system. For example, a new map type or a new link type.', 'Major related component': 'The attach events and bpf link. e.g. perf events, tracepoints, etc.', 'program_types_related': ['xdp like programs']}
--------------------
--------------------
Processing Commit ID: 03e38d315f3c5258270ad50f2ae784b6372e87c3
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: 03e38d315f3c5258270ad50f2ae784b6372e87c3
  Author Name: Magnus Karlsson
  Author Email: magnus.karlsson@intel.com
  Commit Date: 1717573385
  Commit Message:
    Revert "xsk: Document ability to redirect to any socket bound to the same umem"

This reverts commit 968595a93669b6b4f6d1fcf80cf2d97956b6868f.

Reported-by: Yuval El-Hanany <YuvalE@radware.com>
Signed-off-by: Magnus Karlsson <magnus.karlsson@intel.com>
Signed-off-by: Daniel Borkmann <daniel@iogearbox.net>
Link: https://lore.kernel.org/xdp-newbies/8100DBDC-0B7C-49DB-9995-6027F6E63147@radware.com
Link: https://lore.kernel.org/bpf/20240604122927.29080-3-magnus.karlsson@gmail.com

  Parent Hashes: 7fcf26b315bbb728036da0862de6b335da83dff2
  Refs: 

- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'This commit reverts a previous documentation update regarding xsk socket redirection.', 'keywords': 'revert,xsk,umem', 'commit_classification': "It's a documentation change or typo fix.", 'commit_complexity': 'Simple, can be used without much configuration. For example, a simple helper function.', 'Major related component': 'Other component related to eBPF but not listed above.', 'program_types_related': ['socket like programs']}
--------------------
--------------------
Processing Commit ID: 7fcf26b315bbb728036da0862de6b335da83dff2
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: 7fcf26b315bbb728036da0862de6b335da83dff2
  Author Name: Magnus Karlsson
  Author Email: magnus.karlsson@intel.com
  Commit Date: 1717573350
  Commit Message:
    Revert "xsk: Support redirect to any socket bound to the same umem"

This reverts commit 2863d665ea41282379f108e4da6c8a2366ba66db.

This patch introduced a potential kernel crash when multiple napi instances
redirect to the same AF_XDP socket. By removing the queue_index check
  Parent Hashes: d0d1df8ba18abc57f28fb3bc053b2bf319367f2c
  Refs:  it is
possible for multiple napi instances to access the Rx ring at the same time

- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'Revert commit 2863d665ea4 due to potential kernel crash with xsk redirect to same AF_XDP socket.', 'keywords': 'Revert, xsk, AF_XDP', 'commit_classification': "It's a bug fix.", 'commit_complexity': 'Moderate, requires some setup or understanding of the system. For example, a new map type or a new link type.', 'Major related component': 'Other component related to eBPF but not listed above.', 'program_types_related': ['socket like programs', 'other']}
--------------------
--------------------
Processing Commit ID: d0d1df8ba18abc57f28fb3bc053b2bf319367f2c
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: d0d1df8ba18abc57f28fb3bc053b2bf319367f2c
  Author Name: Jiri Olsa
  Author Email: jolsa@kernel.org
  Commit Date: 1717573293
  Commit Message:
    bpf: Set run context for rawtp test_run callback

syzbot reported crash when rawtp program executed through the
test_run interface calls bpf_get_attach_cookie helper or any
other helper that touches task->bpf_ctx pointer.

Setting the run context (task->bpf_ctx pointer) for test_run
callback.

Fixes: 7adfc6c9b315 ("bpf: Add bpf_get_attach_cookie() BPF helper to access bpf_cookie value")
Reported-by: syzbot+3ab78ff125b7979e45f9@syzkaller.appspotmail.com
Signed-off-by: Jiri Olsa <jolsa@kernel.org>
Signed-off-by: Andrii Nakryiko <andrii@kernel.org>
Signed-off-by: Daniel Borkmann <daniel@iogearbox.net>
Closes: https://syzkaller.appspot.com/bug?extid=3ab78ff125b7979e45f9
Link: https://lore.kernel.org/bpf/20240604150024.359247-1-jolsa@kernel.org

  Parent Hashes: 2884dc7d08d98a89d8d65121524bb7533183a63a
  Refs: 

- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'Fixes crash by setting run context for raw tracepoint test_run callbacks in BPF.', 'keywords': 'run context, rawtp, crash', 'commit_classification': "It's a bug fix.", 'commit_complexity': 'Moderate, requires some setup or understanding of the system. For example, a new map type or a new link type.', 'Major related component': 'The attach events and bpf link. e.g. perf events, tracepoints, etc.', 'program_types_related': ['tracepoints like programs']}
--------------------
--------------------
Processing Commit ID: 898ac74c5b5f8b551a377d6a60ca4e30023ac9d2
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: 898ac74c5b5f8b551a377d6a60ca4e30023ac9d2
  Author Name: Yonghong Song
  Author Email: yonghong.song@linux.dev
  Commit Date: 1717530584
  Commit Message:
    selftests/bpf: Ignore .llvm.<hash> suffix in kallsyms_find()

I hit the following failure when running selftests with
internal backported upstream kernel:
  test_ksyms:PASS:kallsyms_fopen 0 nsec
  test_ksyms:FAIL:ksym_find symbol 'bpf_link_fops' not found
  #123     ksyms:FAIL

In /proc/kallsyms
  Parent Hashes: 61ce0ea7591fef2eb6e89ce40ffcc24fda4dbbc5
  Refs:  we have
  $ cat /proc/kallsyms | grep bpf_link_fops
  ffffffff829f0cb0 d bpf_link_fops.llvm.12608678492448798416
The CONFIG_LTO_CLANG_THIN is enabled in the kernel which is responsible
for bpf_link_fops.llvm.12608678492448798416 symbol name.

In prog_tests/ksyms.c we have
  kallsyms_find("bpf_link_fops"

- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'Fix kallsyms_find() to ignore .llvm.<hash> suffix for proper symbol resolution in selftests.', 'keywords': 'selftests,kallsyms,llvm', 'commit_classification': "It's a test case or test infrastructure change.", 'commit_complexity': 'Simple, can be used without much configuration. For example, a simple helper function.', 'Major related component': 'The test cases and makefiles', 'program_types_related': ['It improves the overall eBPF infrastructure (e.g., verifier, runtime, etc.).']}
--------------------
--------------------
Processing Commit ID: 61ce0ea7591fef2eb6e89ce40ffcc24fda4dbbc5
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: 61ce0ea7591fef2eb6e89ce40ffcc24fda4dbbc5
  Author Name: Song Liu
  Author Email: song@kernel.org
  Commit Date: 1717525074
  Commit Message:
    selftests/bpf: Fix bpf_cookie and find_vma in nested VM

bpf_cookie and find_vma are flaky in nested VMs
  Parent Hashes: 49df0019f36798d414e6b913bec30a3a0cd47c70
  Refs:  which is used by some CI
systems. It turns out these failures are caused by unreliable perf event
in nested VM. Fix these by:

  1. Use PERF_COUNT_SW_CPU_CLOCK in find_vma;
  2. Increase sample_freq in bpf_cookie.

Signed-off-by: Song Liu <song@kernel.org>
Signed-off-by: Andrii Nakryiko <andrii@kernel.org>
Link: https://lore.kernel.org/bpf/20240604070700.3032142-1-song@kernel.org


- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'Fix unreliable perf event issues in bpf_cookie and find_vma selftests within nested VMs.', 'keywords': 'bpf_cookie,nested VM,perf event', 'commit_classification': "It's a bug fix.", 'commit_complexity': 'Moderate, requires some setup or understanding of the system. For example, a new map type or a new link type.', 'Major related component': 'The test cases and makefiles', 'program_types_related': ['tracepoints like programs']}
--------------------
--------------------
Processing Commit ID: 8d4e21bd4cca8013d2c6f55d42df85838d4ebce6
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: 8d4e21bd4cca8013d2c6f55d42df85838d4ebce6
  Author Name: Steven Rostedt (Google)
  Author Email: rostedt@goodmis.org
  Commit Date: 1717511920
  Commit Message:
    selftests/ftrace: Add fgraph-multi.tc test

Add a test that creates 3 instances and enables function_graph tracer in
each as well as the top instance
  Parent Hashes: 35b944a997e25962122c3dea68b020e7fbb06cbd
  Refs:  where each will enable a filter (but one
that traces all functions) and check that they are filtering properly.

Link: https://lore.kernel.org/linux-trace-kernel/20240603190825.252845939@goodmis.org

Cc: Masami Hiramatsu <mhiramat@kernel.org>
Cc: Mark Rutland <mark.rutland@arm.com>
Cc: Mathieu Desnoyers <mathieu.desnoyers@efficios.com>
Cc: Andrew Morton <akpm@linux-foundation.org>
Cc: Alexei Starovoitov <alexei.starovoitov@gmail.com>
Cc: Florent Revest <revest@chromium.org>
Cc: Martin KaFai Lau <martin.lau@linux.dev>
Cc: bpf <bpf@vger.kernel.org>
Cc: Sven Schnelle <svens@linux.ibm.com>
Cc: Alexei Starovoitov <ast@kernel.org>
Cc: Jiri Olsa <jolsa@kernel.org>
Cc: Arnaldo Carvalho de Melo <acme@kernel.org>
Cc: Daniel Borkmann <daniel@iogearbox.net>
Cc: Alan Maguire <alan.maguire@oracle.com>
Cc: Peter Zijlstra <peterz@infradead.org>
Cc: Thomas Gleixner <tglx@linutronix.de>
Cc: Guo Ren <guoren@kernel.org>
Reviewed-by: Masami Hiramatsu (Google) <mhiramat@kernel.org>
Signed-off-by: Steven Rostedt (Google) <rostedt@goodmis.org>


- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'Add selftest for function_graph tracing with multiple instances and filtering.', 'keywords': 'selftests,ftrace,function_graph', 'commit_classification': "It's a test case or test infrastructure change.", 'commit_complexity': 'Moderate, requires some setup or understanding of the system. For example, a new map type or a new link type.', 'Major related component': 'Other component related to eBPF but not listed above.', 'program_types_related': ['kprobe/uprobe/ftrace like programs']}
--------------------
--------------------
Processing Commit ID: 35b944a997e25962122c3dea68b020e7fbb06cbd
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: 35b944a997e25962122c3dea68b020e7fbb06cbd
  Author Name: Steven Rostedt (Google)
  Author Email: rostedt@goodmis.org
  Commit Date: 1717511908
  Commit Message:
    selftests/ftrace: Add function_graph tracer to func-filter-pid test

The function tracer is tested to see if pid filtering works. Add a test to
test function_graph tracer as well
  Parent Hashes: fe835e3ca40e172aa8ad12f4ed2898c181fafab0
  Refs:  but only if the function_graph tracer
is enabled for the top level or instance.

Link: https://lore.kernel.org/linux-trace-kernel/20240603190825.083048115@goodmis.org

Cc: Masami Hiramatsu <mhiramat@kernel.org>
Cc: Mark Rutland <mark.rutland@arm.com>
Cc: Mathieu Desnoyers <mathieu.desnoyers@efficios.com>
Cc: Andrew Morton <akpm@linux-foundation.org>
Cc: Alexei Starovoitov <alexei.starovoitov@gmail.com>
Cc: Florent Revest <revest@chromium.org>
Cc: Martin KaFai Lau <martin.lau@linux.dev>
Cc: bpf <bpf@vger.kernel.org>
Cc: Sven Schnelle <svens@linux.ibm.com>
Cc: Alexei Starovoitov <ast@kernel.org>
Cc: Jiri Olsa <jolsa@kernel.org>
Cc: Arnaldo Carvalho de Melo <acme@kernel.org>
Cc: Daniel Borkmann <daniel@iogearbox.net>
Cc: Alan Maguire <alan.maguire@oracle.com>
Cc: Peter Zijlstra <peterz@infradead.org>
Cc: Thomas Gleixner <tglx@linutronix.de>
Cc: Guo Ren <guoren@kernel.org>
Reviewed-by: Masami Hiramatsu (Google) <mhiramat@kernel.org>
Signed-off-by: Steven Rostedt (Google) <rostedt@goodmis.org>


- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'The commit adds a test for the function_graph tracer to check if pid filtering works in selftests for ftrace.', 'keywords': 'function_graph,tracer,pid-filtering', 'commit_classification': "It's a test case or test infrastructure change.", 'commit_complexity': 'Simple, can be used without much configuration. For example, a simple helper function.', 'Major related component': 'The test cases and makefiles', 'program_types_related': ['tracepoints like programs']}
--------------------
--------------------
Processing Commit ID: fe835e3ca40e172aa8ad12f4ed2898c181fafab0
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: fe835e3ca40e172aa8ad12f4ed2898c181fafab0
  Author Name: Steven Rostedt (Google)
  Author Email: rostedt@goodmis.org
  Commit Date: 1717511903
  Commit Message:
    function_graph: Use static_call and branch to optimize return function

In most cases function graph is used by a single user. Instead of calling
a loop to call function graph callbacks in this case
  Parent Hashes: cc60ee813b50334b32343861057dc9e981e9c7f0
  Refs:  call the function
return callback directly.

Use the static_key that is set when the function graph tracer has less
than 2 callbacks registered. It will do the direct call in that case

- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'Optimize function graph tracer by using static calls for single callback scenarios.', 'keywords': 'function_graph, static_call, optimize', 'commit_classification': "It's a performance optimization.", 'commit_complexity': 'Moderate, requires some setup or understanding of the system. For example, a new map type or a new link type.', 'Major related component': 'Other component related to eBPF but not listed above.', 'program_types_related': ["It's not related to any of the above."]}
--------------------
--------------------
Processing Commit ID: cc60ee813b50334b32343861057dc9e981e9c7f0
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: cc60ee813b50334b32343861057dc9e981e9c7f0
  Author Name: Steven Rostedt (Google)
  Author Email: rostedt@goodmis.org
  Commit Date: 1717511895
  Commit Message:
    function_graph: Use static_call and branch to optimize entry function

In most cases function graph is used by a single user. Instead of calling
a loop to call function graph callbacks in this case
  Parent Hashes: a5b6d4da0218a0539c36ad6794c624c2c6ca7b32
  Refs:  call the function
entry callback directly.

Add a static_key that will be used to set the function graph logic to
either do the loop (when more than one callback is registered) or to call
the callback directly if there is only one registered callback.

Link: https://lore.kernel.org/linux-trace-kernel/20240603190824.766858241@goodmis.org

Cc: Masami Hiramatsu <mhiramat@kernel.org>
Cc: Mark Rutland <mark.rutland@arm.com>
Cc: Mathieu Desnoyers <mathieu.desnoyers@efficios.com>
Cc: Andrew Morton <akpm@linux-foundation.org>
Cc: Alexei Starovoitov <alexei.starovoitov@gmail.com>
Cc: Florent Revest <revest@chromium.org>
Cc: Martin KaFai Lau <martin.lau@linux.dev>
Cc: bpf <bpf@vger.kernel.org>
Cc: Sven Schnelle <svens@linux.ibm.com>
Cc: Alexei Starovoitov <ast@kernel.org>
Cc: Jiri Olsa <jolsa@kernel.org>
Cc: Arnaldo Carvalho de Melo <acme@kernel.org>
Cc: Daniel Borkmann <daniel@iogearbox.net>
Cc: Alan Maguire <alan.maguire@oracle.com>
Cc: Peter Zijlstra <peterz@infradead.org>
Cc: Thomas Gleixner <tglx@linutronix.de>
Cc: Guo Ren <guoren@kernel.org>
Reviewed-by: Masami Hiramatsu (Google) <mhiramat@kernel.org>
Signed-off-by: Steven Rostedt (Google) <rostedt@goodmis.org>


- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'Optimize function graph entry function by using static_call and branch to reduce overhead when only one callback is registered.', 'keywords': 'function_graph, static_call, optimization', 'commit_classification': "It's a performance optimization.", 'commit_complexity': 'Moderate, requires some setup or understanding of the system. For example, a new map type or a new link type.', 'Major related component': 'Other component related to eBPF but not listed above.', 'program_types_related': ['It improves the overall eBPF infrastructure (e.g., verifier, runtime, etc.).']}
--------------------
--------------------
Processing Commit ID: a5b6d4da0218a0539c36ad6794c624c2c6ca7b32
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: a5b6d4da0218a0539c36ad6794c624c2c6ca7b32
  Author Name: Steven Rostedt (Google)
  Author Email: rostedt@goodmis.org
  Commit Date: 1717511890
  Commit Message:
    function_graph: Use bitmask to loop on fgraph entry

Instead of looping through all the elements of fgraph_array[] to see if
there's an gops attached to one and then calling its gops->func(). Create
a fgraph_array_bitmask that sets bits when an index in the array is
reserved (via the simple lru algorithm). Then only the bits set in this
bitmask needs to be looked at where only elements in the array that have
ops registered need to be looked at.

Note
  Parent Hashes: 420e1354bcb6f006f183a1b6fe5dd21f60a457ef
  Refs:  we do not care about races. If a bit is set before the gops is
assigned

- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'The commit optimizes function graph processing using a bitmask for improved performance in handling function operations.', 'keywords': 'bitmask, fgraph, optimization', 'commit_classification': "It's a performance optimization.", 'commit_complexity': 'Moderate, requires some setup or understanding of the system. For example, a new map type or a new link type.', 'Major related component': 'The eBPF verifier', 'program_types_related': ['tracepoints like programs']}
--------------------
--------------------
Processing Commit ID: 420e1354bcb6f006f183a1b6fe5dd21f60a457ef
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: 420e1354bcb6f006f183a1b6fe5dd21f60a457ef
  Author Name: Steven Rostedt (Google)
  Author Email: rostedt@goodmis.org
  Commit Date: 1717511883
  Commit Message:
    function_graph: Use for_each_set_bit() in __ftrace_return_to_handler()

Instead of iterating through the entire fgraph_array[] and seeing if one
of the bitmap bits are set to know to call the array's retfunc() function
  Parent Hashes: dd120af2d5f8f3d2d742a64cefc4a529d382ab06
  Refs: 
use for_each_set_bit() on the bitmap itself. This will only iterate for
the number of set bits.

Link: https://lore.kernel.org/linux-trace-kernel/20240603190824.447448026@goodmis.org

Cc: Mark Rutland <mark.rutland@arm.com>
Cc: Mathieu Desnoyers <mathieu.desnoyers@efficios.com>
Cc: Andrew Morton <akpm@linux-foundation.org>
Cc: Alexei Starovoitov <alexei.starovoitov@gmail.com>
Cc: Florent Revest <revest@chromium.org>
Cc: Martin KaFai Lau <martin.lau@linux.dev>
Cc: bpf <bpf@vger.kernel.org>
Cc: Sven Schnelle <svens@linux.ibm.com>
Cc: Alexei Starovoitov <ast@kernel.org>
Cc: Jiri Olsa <jolsa@kernel.org>
Cc: Arnaldo Carvalho de Melo <acme@kernel.org>
Cc: Daniel Borkmann <daniel@iogearbox.net>
Cc: Alan Maguire <alan.maguire@oracle.com>
Cc: Peter Zijlstra <peterz@infradead.org>
Cc: Thomas Gleixner <tglx@linutronix.de>
Cc: Guo Ren <guoren@kernel.org>
Reviewed-by: Masami Hiramatsu (Google) <mhiramat@kernel.org>
Signed-off-by: Steven Rostedt (Google) <rostedt@goodmis.org>


- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'Optimized function_graph handling by using for_each_set_bit to iterate only over set bits in __ftrace_return_to_handler().', 'keywords': 'function_graph,for_each_set_bit,ftrace', 'commit_classification': "It's a performance optimization.", 'commit_complexity': 'Simple, can be used without much configuration. For example, a simple helper function.', 'Major related component': 'Other component related to eBPF but not listed above.', 'program_types_related': ["It's not related to any of the above."]}
--------------------
--------------------
Processing Commit ID: dd120af2d5f8f3d2d742a64cefc4a529d382ab06
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: dd120af2d5f8f3d2d742a64cefc4a529d382ab06
  Author Name: Masami Hiramatsu (Google)
  Author Email: mhiramat@kernel.org
  Commit Date: 1717511879
  Commit Message:
    ftrace: Add multiple fgraph storage selftest

Add a selftest for multiple function graph tracer with storage on a same
function. In this case
  Parent Hashes: 47c3c70aa36971c90e32e91f9254110195d67a02
  Refs:  the shadow stack entry will be shared among those
fgraph with different data storage. So this will ensure the fgraph will
not mixed those storage data.

Link: https://lore.kernel.org/linux-trace-kernel/171509111465.162236.3795819216426570800.stgit@devnote2
Link: https://lore.kernel.org/linux-trace-kernel/20240603190824.284049716@goodmis.org

Cc: Mark Rutland <mark.rutland@arm.com>
Cc: Mathieu Desnoyers <mathieu.desnoyers@efficios.com>
Cc: Andrew Morton <akpm@linux-foundation.org>
Cc: Alexei Starovoitov <alexei.starovoitov@gmail.com>
Cc: Florent Revest <revest@chromium.org>
Cc: Martin KaFai Lau <martin.lau@linux.dev>
Cc: bpf <bpf@vger.kernel.org>
Cc: Sven Schnelle <svens@linux.ibm.com>
Cc: Alexei Starovoitov <ast@kernel.org>
Cc: Jiri Olsa <jolsa@kernel.org>
Cc: Arnaldo Carvalho de Melo <acme@kernel.org>
Cc: Daniel Borkmann <daniel@iogearbox.net>
Cc: Alan Maguire <alan.maguire@oracle.com>
Cc: Peter Zijlstra <peterz@infradead.org>
Cc: Thomas Gleixner <tglx@linutronix.de>
Cc: Guo Ren <guoren@kernel.org>
Reviewed-by: Masami Hiramatsu (Google) <mhiramat@kernel.org>
Signed-off-by: Masami Hiramatsu (Google) <mhiramat@kernel.org>
Suggested-by: Steven Rostedt (Google) <rostedt@goodmis.org>
Signed-off-by: Steven Rostedt (Google) <rostedt@goodmis.org>


- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'This commit adds a selftest for multiple function graph tracer with shared storage to ensure data is not mixed.', 'keywords': 'ftrace,selftest,fgraph', 'commit_classification': "It's a test case or test infrastructure change.", 'commit_complexity': 'Moderate, requires some setup or understanding of the system. For example, a new map type or a new link type.', 'Major related component': 'The test cases and makefiles', 'program_types_related': ['kprobe/uprobe/ftrace like programs']}
--------------------
--------------------
Processing Commit ID: 47c3c70aa36971c90e32e91f9254110195d67a02
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: 47c3c70aa36971c90e32e91f9254110195d67a02
  Author Name: Steven Rostedt (VMware)
  Author Email: rostedt@goodmis.org
  Commit Date: 1717511872
  Commit Message:
    function_graph: Add selftest for passing local variables

Add boot up selftest that passes variables from a function entry to a
function exit
  Parent Hashes: 91c46b0aa917546432b5b219494859cda0edc39e
  Refs:  and make sure that they do get passed around.

Co-developed with Masami Hiramatsu:
Link: https://lore.kernel.org/linux-trace-kernel/171509110271.162236.11047551496319744627.stgit@devnote2
Link: https://lore.kernel.org/linux-trace-kernel/20240603190824.122952310@goodmis.org

Cc: Mark Rutland <mark.rutland@arm.com>
Cc: Mathieu Desnoyers <mathieu.desnoyers@efficios.com>
Cc: Andrew Morton <akpm@linux-foundation.org>
Cc: Alexei Starovoitov <alexei.starovoitov@gmail.com>
Cc: Florent Revest <revest@chromium.org>
Cc: Martin KaFai Lau <martin.lau@linux.dev>
Cc: bpf <bpf@vger.kernel.org>
Cc: Sven Schnelle <svens@linux.ibm.com>
Cc: Alexei Starovoitov <ast@kernel.org>
Cc: Jiri Olsa <jolsa@kernel.org>
Cc: Arnaldo Carvalho de Melo <acme@kernel.org>
Cc: Daniel Borkmann <daniel@iogearbox.net>
Cc: Alan Maguire <alan.maguire@oracle.com>
Cc: Peter Zijlstra <peterz@infradead.org>
Cc: Thomas Gleixner <tglx@linutronix.de>
Cc: Guo Ren <guoren@kernel.org>
Reviewed-by: Masami Hiramatsu (Google) <mhiramat@kernel.org>
Signed-off-by: Steven Rostedt (VMware) <rostedt@goodmis.org>
Signed-off-by: Masami Hiramatsu (Google) <mhiramat@kernel.org>
Signed-off-by: Steven Rostedt (Google) <rostedt@goodmis.org>


- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'Added a boot up selftest for validating passing of local variables in function_graph tracing.', 'keywords': 'selftest,function_graph,local variables', 'commit_classification': "It's a test case or test infrastructure change.", 'commit_complexity': 'Simple, can be used without much configuration. For example, a simple helper function.', 'Major related component': 'The test cases and makefiles', 'program_types_related': ["It's not related to any of the above."]}
--------------------
--------------------
Processing Commit ID: 91c46b0aa917546432b5b219494859cda0edc39e
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: 91c46b0aa917546432b5b219494859cda0edc39e
  Author Name: Steven Rostedt (VMware)
  Author Email: rostedt@goodmis.org
  Commit Date: 1717511868
  Commit Message:
    function_graph: Implement fgraph_reserve_data() and fgraph_retrieve_data()

Added functions that can be called by a fgraph_ops entryfunc and retfunc to
store state between the entry of the function being traced to the exit of
the same function. The fgraph_ops entryfunc() may call
fgraph_reserve_data() to store up to 32 words onto the task's shadow
ret_stack and this then can be retrieved by fgraph_retrieve_data() called
by the corresponding retfunc().

Co-developed with Masami Hiramatsu:
Link: https://lore.kernel.org/linux-trace-kernel/171509109089.162236.11372474169781184034.stgit@devnote2
Link: https://lore.kernel.org/linux-trace-kernel/20240603190823.959703050@goodmis.org

Cc: Mark Rutland <mark.rutland@arm.com>
Cc: Mathieu Desnoyers <mathieu.desnoyers@efficios.com>
Cc: Andrew Morton <akpm@linux-foundation.org>
Cc: Alexei Starovoitov <alexei.starovoitov@gmail.com>
Cc: Florent Revest <revest@chromium.org>
Cc: Martin KaFai Lau <martin.lau@linux.dev>
Cc: bpf <bpf@vger.kernel.org>
Cc: Sven Schnelle <svens@linux.ibm.com>
Cc: Alexei Starovoitov <ast@kernel.org>
Cc: Jiri Olsa <jolsa@kernel.org>
Cc: Arnaldo Carvalho de Melo <acme@kernel.org>
Cc: Daniel Borkmann <daniel@iogearbox.net>
Cc: Alan Maguire <alan.maguire@oracle.com>
Cc: Peter Zijlstra <peterz@infradead.org>
Cc: Thomas Gleixner <tglx@linutronix.de>
Cc: Guo Ren <guoren@kernel.org>
Reviewed-by: Masami Hiramatsu (Google) <mhiramat@kernel.org>
Signed-off-by: Steven Rostedt (VMware) <rostedt@goodmis.org>
Signed-off-by: Masami Hiramatsu (Google) <mhiramat@kernel.org>
Signed-off-by: Steven Rostedt (Google) <rostedt@goodmis.org>

  Parent Hashes: b84214890a9bc56f0fe4ec4fc72f2307ed05096d
  Refs: 

- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'Implement functions for storing and retrieving data across function entry and exit in function graph tracing.', 'keywords': 'fgraph, tracing, state', 'commit_classification': "It's a new feature.", 'commit_complexity': 'Moderate, requires some setup or understanding of the system. For example, a new map type or a new link type.', 'Major related component': 'Other component related to eBPF but not listed above.', 'program_types_related': ['It improves the overall eBPF infrastructure (e.g., verifier, runtime, etc.).']}
--------------------
--------------------
Processing Commit ID: b84214890a9bc56f0fe4ec4fc72f2307ed05096d
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: b84214890a9bc56f0fe4ec4fc72f2307ed05096d
  Author Name: Steven Rostedt (VMware)
  Author Email: rostedt@goodmis.org
  Commit Date: 1717511864
  Commit Message:
    function_graph: Move graph notrace bit to shadow stack global var

The use of the task->trace_recursion for the logic used for the function
graph no-trace was a bit of an abuse of that variable. Now that there
exists global vars that are per stack for registered graph traces
  Parent Hashes: 068da098eb504469dc195137ae35eeacfe0c8de9
  Refs:  use
that instead.

Link: https://lore.kernel.org/linux-trace-kernel/171509107907.162236.6564679266777519065.stgit@devnote2
Link: https://lore.kernel.org/linux-trace-kernel/20240603190823.796709456@goodmis.org

Cc: Mark Rutland <mark.rutland@arm.com>
Cc: Mathieu Desnoyers <mathieu.desnoyers@efficios.com>
Cc: Andrew Morton <akpm@linux-foundation.org>
Cc: Alexei Starovoitov <alexei.starovoitov@gmail.com>
Cc: Florent Revest <revest@chromium.org>
Cc: Martin KaFai Lau <martin.lau@linux.dev>
Cc: bpf <bpf@vger.kernel.org>
Cc: Sven Schnelle <svens@linux.ibm.com>
Cc: Alexei Starovoitov <ast@kernel.org>
Cc: Jiri Olsa <jolsa@kernel.org>
Cc: Arnaldo Carvalho de Melo <acme@kernel.org>
Cc: Daniel Borkmann <daniel@iogearbox.net>
Cc: Alan Maguire <alan.maguire@oracle.com>
Cc: Peter Zijlstra <peterz@infradead.org>
Cc: Thomas Gleixner <tglx@linutronix.de>
Cc: Guo Ren <guoren@kernel.org>
Reviewed-by: Masami Hiramatsu (Google) <mhiramat@kernel.org>
Signed-off-by: Steven Rostedt (VMware) <rostedt@goodmis.org>
Signed-off-by: Masami Hiramatsu (Google) <mhiramat@kernel.org>
Signed-off-by: Steven Rostedt (Google) <rostedt@goodmis.org>


- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'Move graph notrace logic to use shadow stack global variable instead of task trace_recursion.', 'keywords': 'function_graph, notrace, shadow_stack', 'commit_classification': "It's a cleanup or refactoring in the code.", 'commit_complexity': 'Moderate, requires some setup or understanding of the system. For example, a new map type or a new link type.', 'Major related component': 'The attach events and bpf link. e.g. perf events, tracepoints, etc.', 'program_types_related': ['tracepoints like programs']}
--------------------
--------------------
Processing Commit ID: 068da098eb504469dc195137ae35eeacfe0c8de9
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: 068da098eb504469dc195137ae35eeacfe0c8de9
  Author Name: Steven Rostedt (VMware)
  Author Email: rostedt@goodmis.org
  Commit Date: 1717511860
  Commit Message:
    function_graph: Move graph depth stored data to shadow stack global var

The use of the task->trace_recursion for the logic used for the function
graph depth was a bit of an abuse of that variable. Now that there
exists global vars that are per stack for registered graph traces
  Parent Hashes: 12117f3307b63f287756d7ec8cc4f11b94e1206a
  Refs:  use that
instead.

Link: https://lore.kernel.org/linux-trace-kernel/171509106728.162236.2398372644430125344.stgit@devnote2
Link: https://lore.kernel.org/linux-trace-kernel/20240603190823.634870264@goodmis.org

Cc: Mark Rutland <mark.rutland@arm.com>
Cc: Mathieu Desnoyers <mathieu.desnoyers@efficios.com>
Cc: Andrew Morton <akpm@linux-foundation.org>
Cc: Alexei Starovoitov <alexei.starovoitov@gmail.com>
Cc: Florent Revest <revest@chromium.org>
Cc: Martin KaFai Lau <martin.lau@linux.dev>
Cc: bpf <bpf@vger.kernel.org>
Cc: Sven Schnelle <svens@linux.ibm.com>
Cc: Alexei Starovoitov <ast@kernel.org>
Cc: Jiri Olsa <jolsa@kernel.org>
Cc: Arnaldo Carvalho de Melo <acme@kernel.org>
Cc: Daniel Borkmann <daniel@iogearbox.net>
Cc: Alan Maguire <alan.maguire@oracle.com>
Cc: Peter Zijlstra <peterz@infradead.org>
Cc: Thomas Gleixner <tglx@linutronix.de>
Cc: Guo Ren <guoren@kernel.org>
Reviewed-by: Masami Hiramatsu (Google) <mhiramat@kernel.org>
Signed-off-by: Steven Rostedt (VMware) <rostedt@goodmis.org>
Signed-off-by: Masami Hiramatsu (Google) <mhiramat@kernel.org>
Signed-off-by: Steven Rostedt (Google) <rostedt@goodmis.org>


- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'Moved function graph depth data to global shadow stack variable for cleaner implementation.', 'keywords': 'function_graph, shadow stack, global variable', 'commit_classification': "It's a cleanup or refactoring in the code.", 'commit_complexity': 'Moderate, requires some setup or understanding of the system. For example, a new map type or a new link type.', 'Major related component': 'Other component related to eBPF but not listed above.', 'program_types_related': ['tracepoints like programs']}
--------------------
--------------------
Processing Commit ID: 12117f3307b63f287756d7ec8cc4f11b94e1206a
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: 12117f3307b63f287756d7ec8cc4f11b94e1206a
  Author Name: Steven Rostedt (VMware)
  Author Email: rostedt@goodmis.org
  Commit Date: 1717511855
  Commit Message:
    function_graph: Move set_graph_function tests to shadow stack global var

The use of the task->trace_recursion for the logic used for the
set_graph_function was a bit of an abuse of that variable. Now that there
exists global vars that are per stack for registered graph traces
  Parent Hashes: 4497412a1f7b5d9e0849f125652f2cc58cdba562
  Refs:  use that
instead.

Link: https://lore.kernel.org/linux-trace-kernel/171509105520.162236.10339831553995971290.stgit@devnote2
Link: https://lore.kernel.org/linux-trace-kernel/20240603190823.472955399@goodmis.org

Cc: Mark Rutland <mark.rutland@arm.com>
Cc: Mathieu Desnoyers <mathieu.desnoyers@efficios.com>
Cc: Andrew Morton <akpm@linux-foundation.org>
Cc: Alexei Starovoitov <alexei.starovoitov@gmail.com>
Cc: Florent Revest <revest@chromium.org>
Cc: Martin KaFai Lau <martin.lau@linux.dev>
Cc: bpf <bpf@vger.kernel.org>
Cc: Sven Schnelle <svens@linux.ibm.com>
Cc: Alexei Starovoitov <ast@kernel.org>
Cc: Jiri Olsa <jolsa@kernel.org>
Cc: Arnaldo Carvalho de Melo <acme@kernel.org>
Cc: Daniel Borkmann <daniel@iogearbox.net>
Cc: Alan Maguire <alan.maguire@oracle.com>
Cc: Peter Zijlstra <peterz@infradead.org>
Cc: Thomas Gleixner <tglx@linutronix.de>
Cc: Guo Ren <guoren@kernel.org>
Reviewed-by: Masami Hiramatsu (Google) <mhiramat@kernel.org>
Signed-off-by: Steven Rostedt (VMware) <rostedt@goodmis.org>
Signed-off-by: Masami Hiramatsu (Google) <mhiramat@kernel.org>
Signed-off-by: Steven Rostedt (Google) <rostedt@goodmis.org>


- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'Refactor function graph logic by moving set_graph_function tests to use shadow stack global variables.', 'keywords': 'function_graph, shadow stack, refactor', 'commit_classification': "It's a cleanup or refactoring in the code.", 'commit_complexity': 'Moderate, requires some setup or understanding of the system. For example, a new map type or a new link type.', 'Major related component': 'Other component related to eBPF but not listed above.', 'program_types_related': ["It's not related to any of the above."]}
--------------------
--------------------
Processing Commit ID: 4497412a1f7b5d9e0849f125652f2cc58cdba562
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: 4497412a1f7b5d9e0849f125652f2cc58cdba562
  Author Name: Steven Rostedt (VMware)
  Author Email: rostedt@goodmis.org
  Commit Date: 1717511849
  Commit Message:
    function_graph: Add "task variables" per task for fgraph_ops

Add a "task variables" array on the tasks shadow ret_stack that is the
size of longs for each possible registered fgraph_ops. That's a total
of 16
  Parent Hashes: 6d4786592ac88aa31f45fde6bfaad3162e3a92a4
  Refs:  taking up 8 * 16 = 128 bytes (out of a page size 4k).

This will allow for fgraph_ops to do specific features on a per task basis
having a way to maintain state for each task.

Co-developed with Masami Hiramatsu:
Link: https://lore.kernel.org/linux-trace-kernel/171509104383.162236.12239656156685718550.stgit@devnote2
Link: https://lore.kernel.org/linux-trace-kernel/20240603190823.308806126@goodmis.org

Cc: Mark Rutland <mark.rutland@arm.com>
Cc: Mathieu Desnoyers <mathieu.desnoyers@efficios.com>
Cc: Andrew Morton <akpm@linux-foundation.org>
Cc: Alexei Starovoitov <alexei.starovoitov@gmail.com>
Cc: Florent Revest <revest@chromium.org>
Cc: Martin KaFai Lau <martin.lau@linux.dev>
Cc: bpf <bpf@vger.kernel.org>
Cc: Sven Schnelle <svens@linux.ibm.com>
Cc: Alexei Starovoitov <ast@kernel.org>
Cc: Jiri Olsa <jolsa@kernel.org>
Cc: Arnaldo Carvalho de Melo <acme@kernel.org>
Cc: Daniel Borkmann <daniel@iogearbox.net>
Cc: Alan Maguire <alan.maguire@oracle.com>
Cc: Peter Zijlstra <peterz@infradead.org>
Cc: Thomas Gleixner <tglx@linutronix.de>
Cc: Guo Ren <guoren@kernel.org>
Reviewed-by: Masami Hiramatsu (Google) <mhiramat@kernel.org>
Signed-off-by: Steven Rostedt (VMware) <rostedt@goodmis.org>
Signed-off-by: Masami Hiramatsu (Google) <mhiramat@kernel.org>
Signed-off-by: Steven Rostedt (Google) <rostedt@goodmis.org>


- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'Add task-specific variables to shadow ret_stack for maintaining state with fgraph_ops in function graph tracing.', 'keywords': 'task variables,fgraph_ops,shadow ret_stack', 'commit_classification': "It's a new feature.", 'commit_complexity': "Complex, needs expert knowledge or significant changes to existing systems. Like adding a completely new subsystem support or a completely new program type don't exist before.", 'Major related component': 'The attach events and bpf link. e.g. perf events, tracepoints, etc.', 'program_types_related': ['tracepoints like programs']}
--------------------
--------------------
Processing Commit ID: 6d4786592ac88aa31f45fde6bfaad3162e3a92a4
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: 6d4786592ac88aa31f45fde6bfaad3162e3a92a4
  Author Name: Masami Hiramatsu (Google)
  Author Email: mhiramat@kernel.org
  Commit Date: 1717511841
  Commit Message:
    function_graph: Use a simple LRU for fgraph_array index number

Since the fgraph_array index is used for the bitmap on the shadow
stack
  Parent Hashes: df3ec5da6a1e7f6e142680d7c5266d3af187170b
  Refs:  it may leave some entries after a function_graph instance is
removed. Thus if another instance reuses the fgraph_array index soon
after releasing it

- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'Implement a simple LRU for fgraph_array index number in function_graph to manage bitmap in shadow stack.', 'keywords': 'LRU,fgraph_array,shadow stack', 'commit_classification': "It's a cleanup or refactoring in the code.", 'commit_complexity': 'Moderate, requires some setup or understanding of the system. For example, a new map type or a new link type.', 'Major related component': "It's not related to any of the above, it's not related to bpf subsystem in Linux kernel, may be wrong data.", 'program_types_related': ["It's not related to any of the above."]}
--------------------
--------------------
Processing Commit ID: df3ec5da6a1e7f6e142680d7c5266d3af187170b
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: df3ec5da6a1e7f6e142680d7c5266d3af187170b
  Author Name: Steven Rostedt (Google)
  Author Email: rostedt@goodmis.org
  Commit Date: 1717511831
  Commit Message:
    function_graph: Add pid tracing back to function graph tracer

Now that the function_graph has a main callback that handles the function
graph subops tracing
  Parent Hashes: c132be2c4fcc1150ad0791c2a85dd4c9ad0bd0c8
  Refs:  it no longer honors the pid filtering of ftrace. Add
back this logic in the function_graph code to update the gops callback for
the entry function to test if it should trace the current task or not.

Link: https://lore.kernel.org/linux-trace-kernel/20240603190822.991720703@goodmis.org

Cc: Masami Hiramatsu <mhiramat@kernel.org>
Cc: Mark Rutland <mark.rutland@arm.com>
Cc: Mathieu Desnoyers <mathieu.desnoyers@efficios.com>
Cc: Andrew Morton <akpm@linux-foundation.org>
Cc: Alexei Starovoitov <alexei.starovoitov@gmail.com>
Cc: Florent Revest <revest@chromium.org>
Cc: Martin KaFai Lau <martin.lau@linux.dev>
Cc: bpf <bpf@vger.kernel.org>
Cc: Sven Schnelle <svens@linux.ibm.com>
Cc: Alexei Starovoitov <ast@kernel.org>
Cc: Jiri Olsa <jolsa@kernel.org>
Cc: Arnaldo Carvalho de Melo <acme@kernel.org>
Cc: Daniel Borkmann <daniel@iogearbox.net>
Cc: Alan Maguire <alan.maguire@oracle.com>
Cc: Peter Zijlstra <peterz@infradead.org>
Cc: Thomas Gleixner <tglx@linutronix.de>
Cc: Guo Ren <guoren@kernel.org>
Reviewed-by: Masami Hiramatsu (Google) <mhiramat@kernel.org>
Signed-off-by: Steven Rostedt (Google) <rostedt@goodmis.org>


- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'Reintroduce PID filtering in the function graph tracer within the function_graph subsystem.', 'keywords': 'function_graph,tracer,PID', 'commit_classification': "It's a new feature.", 'commit_complexity': 'Moderate, requires some setup or understanding of the system. For example, a new map type or a new link type.', 'Major related component': 'Other component related to eBPF but not listed above.', 'program_types_related': ['kprobe/uprobe/ftrace like programs']}
--------------------
--------------------
Processing Commit ID: c132be2c4fcc1150ad0791c2a85dd4c9ad0bd0c8
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: c132be2c4fcc1150ad0791c2a85dd4c9ad0bd0c8
  Author Name: Steven Rostedt (VMware)
  Author Email: rostedt@goodmis.org
  Commit Date: 1717511812
  Commit Message:
    function_graph: Have the instances use their own ftrace_ops for filtering

Allow for instances to have their own ftrace_ops part of the fgraph_ops
that makes the funtion_graph tracer filter on the set_ftrace_filter file
of the instance and not the top instance.

This uses the new ftrace_startup_subops()
  Parent Hashes: d9bbfbd14f58d2955cc7a3efa8ae6d4e09ee5995
  Refs:  by using graph_ops as the
"manager ops" that defines the callback function and adds the functions
defined by the filters of the ops for each trace instance. The callback
defined by the manager ops will call the registered fgraph ops that were
added to the fgraph_array.

Co-developed with Masami Hiramatsu:
Link: https://lore.kernel.org/linux-trace-kernel/171509102088.162236.15758883237657317789.stgit@devnote2
Link: https://lore.kernel.org/linux-trace-kernel/20240603190822.832946261@goodmis.org

Cc: Mark Rutland <mark.rutland@arm.com>
Cc: Mathieu Desnoyers <mathieu.desnoyers@efficios.com>
Cc: Andrew Morton <akpm@linux-foundation.org>
Cc: Alexei Starovoitov <alexei.starovoitov@gmail.com>
Cc: Florent Revest <revest@chromium.org>
Cc: Martin KaFai Lau <martin.lau@linux.dev>
Cc: bpf <bpf@vger.kernel.org>
Cc: Sven Schnelle <svens@linux.ibm.com>
Cc: Alexei Starovoitov <ast@kernel.org>
Cc: Jiri Olsa <jolsa@kernel.org>
Cc: Arnaldo Carvalho de Melo <acme@kernel.org>
Cc: Daniel Borkmann <daniel@iogearbox.net>
Cc: Alan Maguire <alan.maguire@oracle.com>
Cc: Peter Zijlstra <peterz@infradead.org>
Cc: Thomas Gleixner <tglx@linutronix.de>
Cc: Guo Ren <guoren@kernel.org>
Reviewed-by: Masami Hiramatsu (Google) <mhiramat@kernel.org>
Signed-off-by: Steven Rostedt (VMware) <rostedt@goodmis.org>
Signed-off-by: Masami Hiramatsu (Google) <mhiramat@kernel.org>
Signed-off-by: Steven Rostedt (Google) <rostedt@goodmis.org>


- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'The commit allows function graph tracer instances to use their own ftrace_ops for filtering instead of the top instance.', 'keywords': 'function_graph, ftrace_ops, filtering', 'commit_classification': "It's a new feature.", 'commit_complexity': 'Moderate, requires some setup or understanding of the system. For example, a new map type or a new link type.', 'Major related component': 'The attach events and bpf link. e.g. perf events, tracepoints, etc.', 'program_types_related': ['tracepoints like programs']}
--------------------
--------------------
Processing Commit ID: d9bbfbd14f58d2955cc7a3efa8ae6d4e09ee5995
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: d9bbfbd14f58d2955cc7a3efa8ae6d4e09ee5995
  Author Name: Steven Rostedt (Google)
  Author Email: rostedt@goodmis.org
  Commit Date: 1717511804
  Commit Message:
    ftrace: Allow subops filtering to be modified

The subops filters use a "manager" ops to enable and disable its filters.
The manager ops can handle more than one subops
  Parent Hashes: 5fccc7552ccbc521bad61653ee739b1196b1bc53
  Refs:  and its filter is what
controls what functions get set. Add a ftrace_hash_move_and_update_subops()
function that will update the manager ops when the subops filters change.

Link: https://lore.kernel.org/linux-trace-kernel/20240603190822.673932251@goodmis.org

Cc: Masami Hiramatsu <mhiramat@kernel.org>
Cc: Mark Rutland <mark.rutland@arm.com>
Cc: Mathieu Desnoyers <mathieu.desnoyers@efficios.com>
Cc: Andrew Morton <akpm@linux-foundation.org>
Cc: Alexei Starovoitov <alexei.starovoitov@gmail.com>
Cc: Florent Revest <revest@chromium.org>
Cc: Martin KaFai Lau <martin.lau@linux.dev>
Cc: bpf <bpf@vger.kernel.org>
Cc: Sven Schnelle <svens@linux.ibm.com>
Cc: Alexei Starovoitov <ast@kernel.org>
Cc: Jiri Olsa <jolsa@kernel.org>
Cc: Arnaldo Carvalho de Melo <acme@kernel.org>
Cc: Daniel Borkmann <daniel@iogearbox.net>
Cc: Alan Maguire <alan.maguire@oracle.com>
Cc: Peter Zijlstra <peterz@infradead.org>
Cc: Thomas Gleixner <tglx@linutronix.de>
Cc: Guo Ren <guoren@kernel.org>
Reviewed-by: Masami Hiramatsu (Google) <mhiramat@kernel.org>
Signed-off-by: Steven Rostedt (Google) <rostedt@goodmis.org>


- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'Enhances ftrace by allowing suboperation filters to be modified through manager operations.', 'keywords': 'ftrace, subops, filters', 'commit_classification': "It's a new feature.", 'commit_complexity': 'Moderate, requires some setup or understanding of the system. For example, a new map type or a new link type.', 'Major related component': 'Other component related to eBPF but not listed above.', 'program_types_related': ['tracepoints like programs']}
--------------------
--------------------
Processing Commit ID: 5fccc7552ccbc521bad61653ee739b1196b1bc53
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: 5fccc7552ccbc521bad61653ee739b1196b1bc53
  Author Name: Steven Rostedt (Google)
  Author Email: rostedt@goodmis.org
  Commit Date: 1717511798
  Commit Message:
    ftrace: Add subops logic to allow one ops to manage many

There are cases where a single system will use a single function callback
to handle multiple users. For example
  Parent Hashes: ab6b84630382914ffcbab59f4913c9a60971d034
  Refs:  to allow function_graph tracer to
have multiple users where each can trace their own set of functions

- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'Enhances ftrace with subops logic to support multiple users managing their own function callbacks.', 'keywords': 'ftrace,subops,callbacks', 'commit_classification': "It's a new feature.", 'commit_complexity': 'Moderate, requires some setup or understanding of the system. For example, a new map type or a new link type.', 'Major related component': 'The attach events and bpf link. e.g. perf events, tracepoints, etc.', 'program_types_related': ['tracepoints like programs', 'It improves the overall eBPF infrastructure (e.g., verifier, runtime, etc.).']}
--------------------
--------------------
Processing Commit ID: ab6b84630382914ffcbab59f4913c9a60971d034
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: ab6b84630382914ffcbab59f4913c9a60971d034
  Author Name: Steven Rostedt (VMware)
  Author Email: rostedt@goodmis.org
  Commit Date: 1717511793
  Commit Message:
    ftrace: Allow ftrace startup flags to exist without dynamic ftrace

Some of the flags for ftrace_startup() may be exposed even when
CONFIG_DYNAMIC_FTRACE is not configured in. This is fine as the difference
between dynamic ftrace and static ftrace is done within the internals of
ftrace itself. No need to have use cases fail to compile because dynamic
ftrace is disabled.

This change is needed to move some of the logic of what is passed to
ftrace_startup() out of the parameters of ftrace_startup().

Link: https://lore.kernel.org/linux-trace-kernel/171509100890.162236.4362350342549122222.stgit@devnote2
Link: https://lore.kernel.org/linux-trace-kernel/20240603190822.350654104@goodmis.org

Cc: Mark Rutland <mark.rutland@arm.com>
Cc: Mathieu Desnoyers <mathieu.desnoyers@efficios.com>
Cc: Andrew Morton <akpm@linux-foundation.org>
Cc: Alexei Starovoitov <alexei.starovoitov@gmail.com>
Cc: Florent Revest <revest@chromium.org>
Cc: Martin KaFai Lau <martin.lau@linux.dev>
Cc: bpf <bpf@vger.kernel.org>
Cc: Sven Schnelle <svens@linux.ibm.com>
Cc: Alexei Starovoitov <ast@kernel.org>
Cc: Jiri Olsa <jolsa@kernel.org>
Cc: Arnaldo Carvalho de Melo <acme@kernel.org>
Cc: Daniel Borkmann <daniel@iogearbox.net>
Cc: Alan Maguire <alan.maguire@oracle.com>
Cc: Peter Zijlstra <peterz@infradead.org>
Cc: Thomas Gleixner <tglx@linutronix.de>
Cc: Guo Ren <guoren@kernel.org>
Reviewed-by: Masami Hiramatsu (Google) <mhiramat@kernel.org>
Signed-off-by: Steven Rostedt (VMware) <rostedt@goodmis.org>
Signed-off-by: Masami Hiramatsu (Google) <mhiramat@kernel.org>
Signed-off-by: Steven Rostedt (Google) <rostedt@goodmis.org>

  Parent Hashes: 26dda5631d1bb2f254f4c94aa87ee6c92a89cfdb
  Refs: 

- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'Enable ftrace startup flags to function without dynamic ftrace configuration.', 'keywords': 'ftrace, dynamic, flags', 'commit_classification': "It's a new feature.", 'commit_complexity': 'Moderate, requires some setup or understanding of the system. For example, a new map type or a new link type.', 'Major related component': 'The eBPF verifier', 'program_types_related': ["It's not related to any of the above."]}
--------------------
--------------------
Processing Commit ID: 26dda5631d1bb2f254f4c94aa87ee6c92a89cfdb
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: 26dda5631d1bb2f254f4c94aa87ee6c92a89cfdb
  Author Name: Steven Rostedt (VMware)
  Author Email: rostedt@goodmis.org
  Commit Date: 1717511788
  Commit Message:
    ftrace: Allow function_graph tracer to be enabled in instances

Now that function graph tracing can handle more than one user
  Parent Hashes: 37238abe3cb47b8daaa8706c9949f67b2a705cf1
  Refs:  allow it to
be enabled in the ftrace instances. Note

- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'The commit enables function graph tracing for multiple ftrace instances.', 'keywords': 'function graph, ftrace, instances', 'commit_classification': "It's a new feature.", 'commit_complexity': 'Moderate, requires some setup or understanding of the system. For example, a new map type or a new link type.', 'Major related component': 'Other component related to eBPF but not listed above.', 'program_types_related': ['tracepoints like programs']}
--------------------
--------------------
Processing Commit ID: 37238abe3cb47b8daaa8706c9949f67b2a705cf1
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: 37238abe3cb47b8daaa8706c9949f67b2a705cf1
  Author Name: Steven Rostedt (VMware)
  Author Email: rostedt@goodmis.org
  Commit Date: 1717511782
  Commit Message:
    ftrace/function_graph: Pass fgraph_ops to function graph callbacks

Pass the fgraph_ops structure to the function graph callbacks. This will
allow callbacks to add a descriptor to a fgraph_ops private field that wil
be added in the future and use it for the callbacks. This will be useful
when more than one callback can be registered to the function graph tracer.

Co-developed with Masami Hiramatsu:
Link: https://lore.kernel.org/linux-trace-kernel/171509098588.162236.4787930115997357578.stgit@devnote2
Link: https://lore.kernel.org/linux-trace-kernel/20240603190822.035147698@goodmis.org

Cc: Mark Rutland <mark.rutland@arm.com>
Cc: Mathieu Desnoyers <mathieu.desnoyers@efficios.com>
Cc: Andrew Morton <akpm@linux-foundation.org>
Cc: Alexei Starovoitov <alexei.starovoitov@gmail.com>
Cc: Florent Revest <revest@chromium.org>
Cc: Martin KaFai Lau <martin.lau@linux.dev>
Cc: bpf <bpf@vger.kernel.org>
Cc: Sven Schnelle <svens@linux.ibm.com>
Cc: Alexei Starovoitov <ast@kernel.org>
Cc: Jiri Olsa <jolsa@kernel.org>
Cc: Arnaldo Carvalho de Melo <acme@kernel.org>
Cc: Daniel Borkmann <daniel@iogearbox.net>
Cc: Alan Maguire <alan.maguire@oracle.com>
Cc: Peter Zijlstra <peterz@infradead.org>
Cc: Thomas Gleixner <tglx@linutronix.de>
Cc: Guo Ren <guoren@kernel.org>
Reviewed-by: Masami Hiramatsu (Google) <mhiramat@kernel.org>
Signed-off-by: Steven Rostedt (VMware) <rostedt@goodmis.org>
Signed-off-by: Masami Hiramatsu (Google) <mhiramat@kernel.org>
Signed-off-by: Steven Rostedt (Google) <rostedt@goodmis.org>

  Parent Hashes: 2fbb549983763b2cc32a1ab840fe59cc1822e06d
  Refs: 

- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'The commit enables passing fgraph_ops to function graph callbacks for enhanced functionality.', 'keywords': 'fgraph_ops,function graph,callbacks', 'commit_classification': "It's a new feature.", 'commit_complexity': 'Moderate, requires some setup or understanding of the system. For example, a new map type or a new link type.', 'Major related component': 'Other component related to eBPF but not listed above.', 'program_types_related': ["It's not related to any of the above."]}
--------------------
--------------------
Processing Commit ID: 2fbb549983763b2cc32a1ab840fe59cc1822e06d
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: 2fbb549983763b2cc32a1ab840fe59cc1822e06d
  Author Name: Steven Rostedt (VMware)
  Author Email: rostedt@goodmis.org
  Commit Date: 1717511771
  Commit Message:
    function_graph: Remove logic around ftrace_graph_entry and return

The function pointers ftrace_graph_entry and ftrace_graph_return are no
longer called via the function_graph tracer. Instead
  Parent Hashes: 375bb57292f49fa0956cc2739c81749b88e69510
  Refs:  an array structure is
now used that will allow for multiple users of the function_graph
infrastructure. The variables are still used by the architecture code for
non dynamic ftrace configs

- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'The commit removes legacy logic for ftrace_graph_entry and ftrace_graph_return in function_graph tracer to support multiple users.', 'keywords': 'function_graph,tracer,ftrace', 'commit_classification': "It's a cleanup or refactoring in the code.", 'commit_complexity': 'Moderate, requires some setup or understanding of the system. For example, a new map type or a new link type.', 'Major related component': 'Other component related to eBPF but not listed above.', 'program_types_related': ["It's not related to any of the above."]}
--------------------
--------------------
Processing Commit ID: 375bb57292f49fa0956cc2739c81749b88e69510
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: 375bb57292f49fa0956cc2739c81749b88e69510
  Author Name: Masami Hiramatsu (Google)
  Author Email: mhiramat@kernel.org
  Commit Date: 1717511765
  Commit Message:
    function_graph: Handle tail calls for stack unwinding

For the tail-call
  Parent Hashes: 7aa1eaef9f4282c9acd39588b1fdc9dda7e73f34
  Refs:  there would be 2 or more ftrace_ret_stacks on the
ret_stack

- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'Improve stack unwinding by handling tail calls in function_graph tracer.', 'keywords': 'function_graph,tail calls,stack unwinding', 'commit_classification': "It's a cleanup or refactoring in the code.", 'commit_complexity': 'Moderate, requires some setup or understanding of the system. For example, a new map type or a new link type.', 'Major related component': 'Other component related to eBPF but not listed above.', 'program_types_related': ['tracepoints like programs']}
--------------------
--------------------
Processing Commit ID: 7aa1eaef9f4282c9acd39588b1fdc9dda7e73f34
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: 7aa1eaef9f4282c9acd39588b1fdc9dda7e73f34
  Author Name: Steven Rostedt (VMware)
  Author Email: rostedt@goodmis.org
  Commit Date: 1717511758
  Commit Message:
    function_graph: Allow multiple users to attach to function graph

Allow for multiple users to attach to function graph tracer at the same
time. Only 16 simultaneous users can attach to the tracer. This is because
there's an array that stores the pointers to the attached fgraph_ops. When
a function being traced is entered
  Parent Hashes: 518d6804a865772735588c5b2203d6c0c0bf98a9
  Refs:  each of the ftrace_ops entryfunc is
called and if it returns non zero

- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'This commit enables multiple users to attach to the function graph tracer concurrently, with a maximum limit of 16 users.', 'keywords': 'function_graph,tracer,multiple_users', 'commit_classification': "It's a new feature.", 'commit_complexity': 'Moderate, requires some setup or understanding of the system. For example, a new map type or a new link type.', 'Major related component': 'Other component related to eBPF but not listed above.', 'program_types_related': ['tracepoints like programs']}
--------------------
--------------------
Processing Commit ID: 518d6804a865772735588c5b2203d6c0c0bf98a9
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: 518d6804a865772735588c5b2203d6c0c0bf98a9
  Author Name: Steven Rostedt (VMware)
  Author Email: rostedt@goodmis.org
  Commit Date: 1717511753
  Commit Message:
    function_graph: Add an array structure that will allow multiple callbacks

Add an array structure that will eventually allow the function graph tracer
to have up to 16 simultaneous callbacks attached. It's an array of 16
fgraph_ops pointers
  Parent Hashes: 59e5f04e4184181227889663618e01dce676e671
  Refs:  that is assigned when one is registered. On entry of a
function the entry of the first item in the array is called

- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'Add array structure for multiple callbacks in function graph tracer.', 'keywords': 'array,crafter,function', 'commit_classification': "It's a new feature.", 'commit_complexity': 'Moderate, requires some setup or understanding of the system. For example, a new map type or a new link type.', 'Major related component': 'Other component related to eBPF but not listed above.', 'program_types_related': ['tracepoints like programs']}
--------------------
--------------------
Processing Commit ID: 59e5f04e4184181227889663618e01dce676e671
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: 59e5f04e4184181227889663618e01dce676e671
  Author Name: Steven Rostedt (VMware)
  Author Email: rostedt@goodmis.org
  Commit Date: 1717511740
  Commit Message:
    fgraph: Use BUILD_BUG_ON() to make sure we have structures divisible by long

Instead of using "ALIGN()"
  Parent Hashes: 42675b723b4842bca7bfb0f209aa9a493a10324a
  Refs:  use BUILD_BUG_ON() as the structures should
always be divisible by sizeof(long).

Co-developed with Masami Hiramatsu:
Link: https://lore.kernel.org/linux-trace-kernel/171509093949.162236.14518699447151894536.stgit@devnote2
Link: http://lkml.kernel.org/r/20190524111144.GI2589@hirez.programming.kicks-ass.net
Link: https://lore.kernel.org/linux-trace-kernel/20240603190821.232168933@goodmis.org

Cc: Mark Rutland <mark.rutland@arm.com>
Cc: Mathieu Desnoyers <mathieu.desnoyers@efficios.com>
Cc: Andrew Morton <akpm@linux-foundation.org>
Cc: Alexei Starovoitov <alexei.starovoitov@gmail.com>
Cc: Florent Revest <revest@chromium.org>
Cc: Martin KaFai Lau <martin.lau@linux.dev>
Cc: bpf <bpf@vger.kernel.org>
Cc: Sven Schnelle <svens@linux.ibm.com>
Cc: Alexei Starovoitov <ast@kernel.org>
Cc: Jiri Olsa <jolsa@kernel.org>
Cc: Arnaldo Carvalho de Melo <acme@kernel.org>
Cc: Daniel Borkmann <daniel@iogearbox.net>
Cc: Alan Maguire <alan.maguire@oracle.com>
Cc: Thomas Gleixner <tglx@linutronix.de>
Cc: Guo Ren <guoren@kernel.org>
Reviewed-by: Masami Hiramatsu (Google) <mhiramat@kernel.org>
Suggested-by: Peter Zijlstra <peterz@infradead.org>
Signed-off-by: Steven Rostedt (VMware) <rostedt@goodmis.org>
Signed-off-by: Masami Hiramatsu (Google) <mhiramat@kernel.org>
Signed-off-by: Steven Rostedt (Google) <rostedt@goodmis.org>


- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'The commit replaces ALIGN() with BUILD_BUG_ON() to ensure structures are divisible by long.', 'keywords': 'BUILD_BUG_ON, structures, divisible', 'commit_classification': "It's a cleanup or refactoring in the code.", 'commit_complexity': 'Simple, can be used without much configuration. For example, a simple helper function.', 'Major related component': 'Other component related to eBPF but not listed above.', 'program_types_related': ['tracepoints like programs']}
--------------------
--------------------
Processing Commit ID: 42675b723b4842bca7bfb0f209aa9a493a10324a
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: 42675b723b4842bca7bfb0f209aa9a493a10324a
  Author Name: Steven Rostedt (VMware)
  Author Email: rostedt@goodmis.org
  Commit Date: 1717511709
  Commit Message:
    function_graph: Convert ret_stack to a series of longs

In order to make it possible to have multiple callbacks registered with the
function_graph tracer
  Parent Hashes: c3f38fa61af77b49866b006939479069cd451173
  Refs:  the retstack needs to be converted from an array of
ftrace_ret_stack structures to an array of longs. This will allow to store
the list of callbacks on the stack for the return side of the functions.

Link: https://lore.kernel.org/linux-trace-kernel/171509092742.162236.4427737821399314856.stgit@devnote2
Link: https://lore.kernel.org/linux-trace-kernel/20240603190821.073111754@goodmis.org

Cc: Mark Rutland <mark.rutland@arm.com>
Cc: Mathieu Desnoyers <mathieu.desnoyers@efficios.com>
Cc: Andrew Morton <akpm@linux-foundation.org>
Cc: Alexei Starovoitov <alexei.starovoitov@gmail.com>
Cc: Florent Revest <revest@chromium.org>
Cc: Martin KaFai Lau <martin.lau@linux.dev>
Cc: bpf <bpf@vger.kernel.org>
Cc: Sven Schnelle <svens@linux.ibm.com>
Cc: Alexei Starovoitov <ast@kernel.org>
Cc: Jiri Olsa <jolsa@kernel.org>
Cc: Arnaldo Carvalho de Melo <acme@kernel.org>
Cc: Daniel Borkmann <daniel@iogearbox.net>
Cc: Alan Maguire <alan.maguire@oracle.com>
Cc: Peter Zijlstra <peterz@infradead.org>
Cc: Thomas Gleixner <tglx@linutronix.de>
Cc: Guo Ren <guoren@kernel.org>
Reviewed-by: Masami Hiramatsu (Google) <mhiramat@kernel.org>
Signed-off-by: Steven Rostedt (VMware) <rostedt@goodmis.org>
Signed-off-by: Masami Hiramatsu (Google) <mhiramat@kernel.org>
Signed-off-by: Steven Rostedt (Google) <rostedt@goodmis.org>


- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'Convert ret_stack from ftrace_ret_stack structures to longs for multi-callback support in function_graph tracer.', 'keywords': 'function_graph,ret_stack,longs', 'commit_classification': "It's a performance optimization.", 'commit_complexity': 'Moderate, requires some setup or understanding of the system. For example, a new map type or a new link type.', 'Major related component': 'Other component related to eBPF but not listed above.', 'program_types_related': ['tracepoints like programs']}
--------------------
--------------------
Processing Commit ID: 49df0019f36798d414e6b913bec30a3a0cd47c70
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: 49df0019f36798d414e6b913bec30a3a0cd47c70
  Author Name: Alexei Starovoitov
  Author Email: ast@kernel.org
  Commit Date: 1717473163
  Commit Message:
    Merge branch 'enable-bpf-programs-to-declare-arrays-of-kptr-bpf_rb_root-and-bpf_list_head'

Kui-Feng Lee says:

====================
Enable BPF programs to declare arrays of kptr
  Parent Hashes: 49784c7979321c49a8055f5c588d24c34a8c55fc 43d50ffb1f7e32865cdd343224659614d8b558b9
  Refs:  bpf_rb_root

- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'Enable BPF programs to declare arrays of kptrs using bpf_rb_root and bpf_list_head.', 'keywords': 'BPF, arrays, kptrs', 'commit_classification': "It's a new feature.", 'commit_complexity': 'Moderate, requires some setup or understanding of the system. For example, a new map type or a new link type.', 'Major related component': 'The helper and kfuncs', 'program_types_related': ['It improves the overall eBPF infrastructure (e.g., verifier, runtime, etc.).']}
--------------------
--------------------
Processing Commit ID: 43d50ffb1f7e32865cdd343224659614d8b558b9
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: 43d50ffb1f7e32865cdd343224659614d8b558b9
  Author Name: Kui-Feng Lee
  Author Email: thinker.li@gmail.com
  Commit Date: 1717473163
  Commit Message:
    selftests/bpf: Test global bpf_list_head arrays.

Make sure global arrays of bpf_list_heads and fields of bpf_list_heads in
nested struct types work correctly.

Acked-by: Eduard Zingerman <eddyz87@gmail.com>
Signed-off-by: Kui-Feng Lee <thinker.li@gmail.com>
Link: https://lore.kernel.org/r/20240523174202.461236-10-thinker.li@gmail.com
Signed-off-by: Alexei Starovoitov <ast@kernel.org>

  Parent Hashes: d55c765a9b2d54b53ef86a62d6209e2e5eb62585
  Refs: 

- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'Added tests for global bpf_list_head arrays and nested structures in selftests/bpf.', 'keywords': 'bpf_list_head, selftests, arrays', 'commit_classification': "It's a test case or test infrastructure change.", 'commit_complexity': 'Moderate, requires some setup or understanding of the system. For example, a new map type or a new link type.', 'Major related component': 'The test cases and makefiles', 'program_types_related': ['It improves the overall eBPF infrastructure (e.g., verifier, runtime, etc.).']}
--------------------
--------------------
Processing Commit ID: d55c765a9b2d54b53ef86a62d6209e2e5eb62585
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: d55c765a9b2d54b53ef86a62d6209e2e5eb62585
  Author Name: Kui-Feng Lee
  Author Email: thinker.li@gmail.com
  Commit Date: 1717473162
  Commit Message:
    selftests/bpf: Test global bpf_rb_root arrays and fields in nested struct types.

Make sure global arrays of bpf_rb_root and fields of bpf_rb_root in nested
struct types work correctly.

Signed-off-by: Kui-Feng Lee <thinker.li@gmail.com>
Link: https://lore.kernel.org/r/20240523174202.461236-9-thinker.li@gmail.com
Signed-off-by: Alexei Starovoitov <ast@kernel.org>

  Parent Hashes: c4c6c3b785a0b1426add15d078da61f899abeaac
  Refs: 

- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'Add selftests for global bpf_rb_root arrays and nested struct types.', 'keywords': 'selftests,bpf_rb_root,nested_struct', 'commit_classification': "It's a test case or test infrastructure change.", 'commit_complexity': 'Moderate, requires some setup or understanding of the system. For example, a new map type or a new link type.', 'Major related component': 'The test cases and makefiles', 'program_types_related': ['It improves the overall eBPF infrastructure (e.g., verifier, runtime, etc.).']}
--------------------
--------------------
Processing Commit ID: c4c6c3b785a0b1426add15d078da61f899abeaac
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: c4c6c3b785a0b1426add15d078da61f899abeaac
  Author Name: Kui-Feng Lee
  Author Email: thinker.li@gmail.com
  Commit Date: 1717473162
  Commit Message:
    selftests/bpf: Test kptr arrays and kptrs in nested struct fields.

Make sure that BPF programs can declare global kptr arrays and kptr fields
in struct types that is the type of a global variable or the type of a
nested descendant field in a global variable.

An array with only one element is special case
  Parent Hashes: f19caf57d80f4432acea61d858d45ce194444389
  Refs:  that it treats the element
like a non-array kptr field. Nested arrays are also tested to ensure they
are handled properly.

Acked-by: Eduard Zingerman <eddyz87@gmail.com>
Signed-off-by: Kui-Feng Lee <thinker.li@gmail.com>
Link: https://lore.kernel.org/r/20240523174202.461236-8-thinker.li@gmail.com
Signed-off-by: Alexei Starovoitov <ast@kernel.org>


- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'Test kptr arrays and nested struct fields in BPF programs.', 'keywords': 'kptr,struct,selftests', 'commit_classification': "It's a test case or test infrastructure change.", 'commit_complexity': 'Moderate, requires some setup or understanding of the system. For example, a new map type or a new link type.', 'Major related component': 'The test cases and makefiles', 'program_types_related': ['It improves the overall eBPF infrastructure (e.g., verifier, runtime, etc.).']}
--------------------
--------------------
Processing Commit ID: f19caf57d80f4432acea61d858d45ce194444389
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: f19caf57d80f4432acea61d858d45ce194444389
  Author Name: Kui-Feng Lee
  Author Email: thinker.li@gmail.com
  Commit Date: 1717473162
  Commit Message:
    bpf: limit the number of levels of a nested struct type.

Limit the number of levels looking into struct types to avoid running out
of stack space.

Acked-by: Eduard Zingerman <eddyz87@gmail.com>
Signed-off-by: Kui-Feng Lee <thinker.li@gmail.com>
Link: https://lore.kernel.org/r/20240523174202.461236-7-thinker.li@gmail.com
Signed-off-by: Alexei Starovoitov <ast@kernel.org>

  Parent Hashes: 64e8ee814819f21beeeda00d4119221443d77992
  Refs: 

- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'Limit the inspection depth of nested struct types in BPF to prevent stack overflow.', 'keywords': 'nested struct, stack space, limit', 'commit_classification': "It's a bug fix.", 'commit_complexity': 'Moderate, requires some setup or understanding of the system. For example, a new map type or a new link type.', 'Major related component': 'The eBPF verifier', 'program_types_related': ['It improves the overall eBPF infrastructure (e.g., verifier, runtime, etc.).']}
--------------------
--------------------
Processing Commit ID: 64e8ee814819f21beeeda00d4119221443d77992
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: 64e8ee814819f21beeeda00d4119221443d77992
  Author Name: Kui-Feng Lee
  Author Email: thinker.li@gmail.com
  Commit Date: 1717473162
  Commit Message:
    bpf: look into the types of the fields of a struct type recursively.

The verifier has field information for specific special types
  Parent Hashes: 994796c0256c4001633488fd24c3d54691949f8d
  Refs:  such as
kptr

- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'The commit enhances the eBPF verifier to recursively check struct field types.', 'keywords': 'verifier, struct, recursive', 'commit_classification': "It's a new feature.", 'commit_complexity': 'Moderate, requires some setup or understanding of the system. For example, a new map type or a new link type.', 'Major related component': 'The eBPF verifier', 'program_types_related': ['It improves the overall eBPF infrastructure (e.g., verifier, runtime, etc.).']}
--------------------
--------------------
Processing Commit ID: 994796c0256c4001633488fd24c3d54691949f8d
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: 994796c0256c4001633488fd24c3d54691949f8d
  Author Name: Kui-Feng Lee
  Author Email: thinker.li@gmail.com
  Commit Date: 1717473162
  Commit Message:
    bpf: create repeated fields for arrays.

The verifier uses field information for certain special types
  Parent Hashes: a7db0d4f872a869feb7c0201c0fa736c309192d5
  Refs:  such as
kptr

- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': "The commit introduces repeated fields for arrays to enhance the eBPF verifier's handling of special types.", 'keywords': 'repeated, arrays, verifier', 'commit_classification': "It's a new feature.", 'commit_complexity': 'Moderate, requires some setup or understanding of the system. For example, a new map type or a new link type.', 'Major related component': 'The eBPF verifier', 'program_types_related': ['It improves the overall eBPF infrastructure (e.g., verifier, runtime, etc.).']}
--------------------
--------------------
Processing Commit ID: a7db0d4f872a869feb7c0201c0fa736c309192d5
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: a7db0d4f872a869feb7c0201c0fa736c309192d5
  Author Name: Kui-Feng Lee
  Author Email: thinker.li@gmail.com
  Commit Date: 1717473162
  Commit Message:
    bpf: refactor btf_find_struct_field() and btf_find_datasec_var().

Move common code of the two functions to btf_find_field_one().

Acked-by: Eduard Zingerman <eddyz87@gmail.com>
Signed-off-by: Kui-Feng Lee <thinker.li@gmail.com>
Link: https://lore.kernel.org/r/20240523174202.461236-4-thinker.li@gmail.com
Signed-off-by: Alexei Starovoitov <ast@kernel.org>

  Parent Hashes: 482f7133791e894b94a57ab3251e03d4c98ea42b
  Refs: 

- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'Refactored btf_find_struct_field and btf_find_datasec_var into btf_find_field_one for code simplification.', 'keywords': 'refactor,btf,functions', 'commit_classification': "It's a cleanup or refactoring in the code.", 'commit_complexity': 'Moderate, requires some setup or understanding of the system. For example, a new map type or a new link type.', 'Major related component': 'The BPF Type Format (BTF)', 'program_types_related': ['It improves the overall eBPF infrastructure (e.g., verifier, runtime, etc.).']}
--------------------
--------------------
Processing Commit ID: 482f7133791e894b94a57ab3251e03d4c98ea42b
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: 482f7133791e894b94a57ab3251e03d4c98ea42b
  Author Name: Kui-Feng Lee
  Author Email: thinker.li@gmail.com
  Commit Date: 1717473162
  Commit Message:
    bpf: Remove unnecessary call to btf_field_type_size().

field->size has been initialized by bpf_parse_fields() with the value
returned by btf_field_type_size(). Use it instead of calling
btf_field_type_size() again.

Acked-by: Eduard Zingerman <eddyz87@gmail.com>
Signed-off-by: Kui-Feng Lee <thinker.li@gmail.com>
Link: https://lore.kernel.org/r/20240523174202.461236-3-thinker.li@gmail.com
Signed-off-by: Alexei Starovoitov <ast@kernel.org>

  Parent Hashes: c95a3be45ad22ee8925d6d1ab531d5ba98216311
  Refs: 

- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'The commit removes an unnecessary call to the btf_field_type_size function in the bpf code.', 'keywords': 'bpf, btf, field', 'commit_classification': "It's a cleanup or refactoring in the code.", 'commit_complexity': 'Simple, can be used without much configuration. For example, a simple helper function.', 'Major related component': 'The BPF Type Format (BTF)', 'program_types_related': ['It improves the overall eBPF infrastructure (e.g., verifier, runtime, etc.).']}
--------------------
--------------------
Processing Commit ID: c95a3be45ad22ee8925d6d1ab531d5ba98216311
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: c95a3be45ad22ee8925d6d1ab531d5ba98216311
  Author Name: Kui-Feng Lee
  Author Email: thinker.li@gmail.com
  Commit Date: 1717473162
  Commit Message:
    bpf: Remove unnecessary checks on the offset of btf_field.

reg_find_field_offset() always return a btf_field with a matching offset
value. Checking the offset of the returned btf_field is unnecessary.

Acked-by: Eduard Zingerman <eddyz87@gmail.com>
Signed-off-by: Kui-Feng Lee <thinker.li@gmail.com>
Link: https://lore.kernel.org/r/20240523174202.461236-2-thinker.li@gmail.com
Signed-off-by: Alexei Starovoitov <ast@kernel.org>

  Parent Hashes: 49784c7979321c49a8055f5c588d24c34a8c55fc
  Refs: 

- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'The commit removes unnecessary checks on the offset of btf_field returned by reg_find_field_offset.', 'keywords': 'offset,btf_field,checks', 'commit_classification': "It's a cleanup or refactoring in the code.", 'commit_complexity': 'Simple, can be used without much configuration. For example, a simple helper function.', 'Major related component': 'The BPF Type Format (BTF)', 'program_types_related': ['It improves the overall eBPF infrastructure (e.g., verifier, runtime, etc.).']}
--------------------
--------------------
Processing Commit ID: 49784c7979321c49a8055f5c588d24c34a8c55fc
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: 49784c7979321c49a8055f5c588d24c34a8c55fc
  Author Name: Geliang Tang
  Author Email: tanggeliang@kylinos.cn
  Commit Date: 1717435975
  Commit Message:
    selftests/bpf: Drop duplicate bpf_map_lookup_elem in test_sockmap

bpf_map_lookup_elem is invoked in bpf_prog3() already
  Parent Hashes: de1b5ea789dc28066cc8dc634b6825bd6148f38b
  Refs:  no need to invoke
it again. This patch drops it.

Signed-off-by: Geliang Tang <tanggeliang@kylinos.cn>
Signed-off-by: Daniel Borkmann <daniel@iogearbox.net>
Tested-by: Jakub Sitnicki <jakub@cloudflare.com>
Acked-by: John Fastabend <john.fastabend@gmail.com>
Link: https://lore.kernel.org/bpf/ea8458462b876ee445173e3effb535fd126137ed.1716446893.git.tanggeliang@kylinos.cn


- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'Remove duplicate invocation of bpf_map_lookup_elem in test_sockmap function in selftests.', 'keywords': 'selftests,sockmap,duplicate', 'commit_classification': "It's a cleanup or refactoring in the code.", 'commit_complexity': 'Simple, can be used without much configuration. For example, a simple helper function.', 'Major related component': 'The test cases and makefiles', 'program_types_related': ['socket like programs', 'It improves the overall eBPF infrastructure (e.g., verifier, runtime, etc.).']}
--------------------
--------------------
Processing Commit ID: de1b5ea789dc28066cc8dc634b6825bd6148f38b
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: de1b5ea789dc28066cc8dc634b6825bd6148f38b
  Author Name: Geliang Tang
  Author Email: tanggeliang@kylinos.cn
  Commit Date: 1717435975
  Commit Message:
    selftests/bpf: Check length of recv in test_sockmap

The value of recv in msg_loop may be negative
  Parent Hashes: dcb681b659f2a0a546752730c9daa92dc6120d52
  Refs:  like EWOULDBLOCK

- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'Add a check for negative recv length in test_sockmap selftests.', 'keywords': 'recv,length,selftests', 'commit_classification': "It's a test case or test infrastructure change.", 'commit_complexity': 'Simple, can be used without much configuration. For example, a simple helper function.', 'Major related component': 'The test cases and makefiles', 'program_types_related': ['socket like programs']}
--------------------
--------------------
Processing Commit ID: dcb681b659f2a0a546752730c9daa92dc6120d52
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: dcb681b659f2a0a546752730c9daa92dc6120d52
  Author Name: Geliang Tang
  Author Email: tanggeliang@kylinos.cn
  Commit Date: 1717435974
  Commit Message:
    selftests/bpf: Fix size of map_fd in test_sockmap

The array size of map_fd[] is 9
  Parent Hashes: 467a0c79b5514d7301ae679770380679a8e32668
  Refs:  not 8. This patch changes it as a more
general form: ARRAY_SIZE(map_fd).

Signed-off-by: Geliang Tang <tanggeliang@kylinos.cn>
Signed-off-by: Daniel Borkmann <daniel@iogearbox.net>
Tested-by: Jakub Sitnicki <jakub@cloudflare.com>
Acked-by: John Fastabend <john.fastabend@gmail.com>
Link: https://lore.kernel.org/bpf/0972529ee01ebf8a8fd2b310bdec90831c94be77.1716446893.git.tanggeliang@kylinos.cn


- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'Fixed the array size definition of map_fd in selftests/bpf for test_sockmap to use ARRAY_SIZE macro.', 'keywords': 'array, map_fd, test_sockmap', 'commit_classification': "It's a bug fix.", 'commit_complexity': 'Simple, can be used without much configuration. For example, a simple helper function.', 'Major related component': 'The test cases and makefiles', 'program_types_related': ['socket like programs']}
--------------------
--------------------
Processing Commit ID: 467a0c79b5514d7301ae679770380679a8e32668
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: 467a0c79b5514d7301ae679770380679a8e32668
  Author Name: Geliang Tang
  Author Email: tanggeliang@kylinos.cn
  Commit Date: 1717435974
  Commit Message:
    selftests/bpf: Drop prog_fd array in test_sockmap

The program fds can be got by using bpf_program__fd(progs[])
  Parent Hashes: 24bb90a42633ea47256d4f13289dd3181236e028
  Refs:  then
prog_fd becomes useless. This patch drops it.

Signed-off-by: Geliang Tang <tanggeliang@kylinos.cn>
Signed-off-by: Daniel Borkmann <daniel@iogearbox.net>
Tested-by: Jakub Sitnicki <jakub@cloudflare.com>
Acked-by: John Fastabend <john.fastabend@gmail.com>
Link: https://lore.kernel.org/bpf/9a6335e4d8dbab23c0d8906074457ceddd61e74b.1716446893.git.tanggeliang@kylinos.cn


- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'The commit removes the unused prog_fd array from the test_sockmap in selftests.', 'keywords': 'prog_fd, test_sockmap, bpf_program__fd', 'commit_classification': "It's a cleanup or refactoring in the code.", 'commit_complexity': 'Simple, can be used without much configuration. For example, a simple helper function.', 'Major related component': 'The test cases and makefiles', 'program_types_related': ['socket like programs']}
--------------------
--------------------
Processing Commit ID: 24bb90a42633ea47256d4f13289dd3181236e028
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: 24bb90a42633ea47256d4f13289dd3181236e028
  Author Name: Geliang Tang
  Author Email: tanggeliang@kylinos.cn
  Commit Date: 1717435974
  Commit Message:
    selftests/bpf: Replace tx_prog_fd with tx_prog in test_sockmap

bpf_program__attach_sockmap() needs to take a parameter of type bpf_program
instead of an fd
  Parent Hashes: 3f32a115f61d31049e3e91d469bca849f712a979
  Refs:  so tx_prog_fd becomes useless. This patch uses a pointer
tx_prog to point to an item in progs[] array.

Signed-off-by: Geliang Tang <tanggeliang@kylinos.cn>
Signed-off-by: Daniel Borkmann <daniel@iogearbox.net>
Tested-by: Jakub Sitnicki <jakub@cloudflare.com>
Acked-by: John Fastabend <john.fastabend@gmail.com>
Link: https://lore.kernel.org/bpf/23b37f932c547dd1ebfe154bbc0b0e957be21ee6.1716446893.git.tanggeliang@kylinos.cn


- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'Refactored test_sockmap to use bpf_program pointer instead of file descriptor for attaching programs.', 'keywords': 'bpf_program, sockmap, refactor', 'commit_classification': "It's a cleanup or refactoring in the code.", 'commit_complexity': 'Simple, can be used without much configuration. For example, a simple helper function.', 'Major related component': 'The test cases and makefiles', 'program_types_related': ['socket like programs', 'It improves the overall eBPF infrastructure (e.g., verifier, runtime, etc.).']}
--------------------
--------------------
Processing Commit ID: 3f32a115f61d31049e3e91d469bca849f712a979
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: 3f32a115f61d31049e3e91d469bca849f712a979
  Author Name: Geliang Tang
  Author Email: tanggeliang@kylinos.cn
  Commit Date: 1717435974
  Commit Message:
    selftests/bpf: Use bpf_link attachments in test_sockmap

Switch attachments to bpf_link using bpf_program__attach_sockmap() instead
of bpf_prog_attach().

This patch adds a new array progs[] to replace prog_fd[] array
  Parent Hashes: a9f0ea175948c21640ae1cc145e679db7fc45fa6
  Refs:  set in
populate_progs() for each program in bpf object.

And another new array links[] to save the attached bpf_link. It is
initalized as NULL in populate_progs

- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'Use bpf_link attachments in test_sockmap by switching to bpf_program__attach_sockmap.', 'keywords': 'bpf_link, attachments, test_sockmap', 'commit_classification': "It's a test case or test infrastructure change.", 'commit_complexity': 'Moderate, requires some setup or understanding of the system. For example, a new map type or a new link type.', 'Major related component': 'The test cases and makefiles', 'program_types_related': ['It improves the overall eBPF infrastructure (e.g., verifier, runtime, etc.).']}
--------------------
--------------------
Processing Commit ID: a9f0ea175948c21640ae1cc145e679db7fc45fa6
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: a9f0ea175948c21640ae1cc145e679db7fc45fa6
  Author Name: Geliang Tang
  Author Email: tanggeliang@kylinos.cn
  Commit Date: 1717435974
  Commit Message:
    selftests/bpf: Drop duplicate definition of i in test_sockmap

There's already a definition of i in run_options() at the beginning
  Parent Hashes: d95ba15b97847f4ae520db83bd98b61d50fb3068
  Refs:  no
need to define a new one in "if (tx_prog_fd > 0)" block.

Signed-off-by: Geliang Tang <tanggeliang@kylinos.cn>
Signed-off-by: Daniel Borkmann <daniel@iogearbox.net>
Tested-by: Jakub Sitnicki <jakub@cloudflare.com>
Acked-by: John Fastabend <john.fastabend@gmail.com>
Link: https://lore.kernel.org/bpf/8d690682330a59361562bca75d6903253d16f312.1716446893.git.tanggeliang@kylinos.cn


- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'The commit removes a duplicate variable definition in the test_sockmap function of selftests for BPF.', 'keywords': 'duplicate, definition, test_sockmap', 'commit_classification': "It's a cleanup or refactoring in the code.", 'commit_complexity': 'Simple, can be used without much configuration. For example, a simple helper function.', 'Major related component': 'The test cases and makefiles', 'program_types_related': ['It improves the overall eBPF infrastructure (e.g., verifier, runtime, etc.).']}
--------------------
--------------------
Processing Commit ID: d95ba15b97847f4ae520db83bd98b61d50fb3068
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: d95ba15b97847f4ae520db83bd98b61d50fb3068
  Author Name: Geliang Tang
  Author Email: tanggeliang@kylinos.cn
  Commit Date: 1717435974
  Commit Message:
    selftests/bpf: Fix tx_prog_fd values in test_sockmap

The values of tx_prog_fd in run_options() should not be 0
  Parent Hashes: ec1249d3278183d419276b9a7fe73591cd3dd505
  Refs:  so set it as -1
in else branch

- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'Fix incorrect tx_prog_fd values in selftests/bpf test_sockmap.', 'keywords': 'selftests,bpf,tx_prog_fd', 'commit_classification': "It's a test case or test infrastructure change.", 'commit_complexity': 'Simple, can be used without much configuration. For example, a simple helper function.', 'Major related component': 'The test cases and makefiles', 'program_types_related': ['socket like programs']}
--------------------
--------------------
Processing Commit ID: 2884dc7d08d98a89d8d65121524bb7533183a63a
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: 2884dc7d08d98a89d8d65121524bb7533183a63a
  Author Name: Cong Wang
  Author Email: cong.wang@bytedance.com
  Commit Date: 1717431379
  Commit Message:
    bpf: Fix a potential use-after-free in bpf_link_free()

After commit 1a80dbcb2dba
  Parent Hashes: 2317dc2c22cc353b699c7d1db47b2fe91f54055c
  Refs:  bpf_link can be freed by
link->ops->dealloc_deferred

- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'Fixes a potential use-after-free issue in bpf_link_free function.', 'keywords': 'use-after-free,bpf_link_free,fix', 'commit_classification': "It's a bug fix.", 'commit_complexity': 'Moderate, requires some setup or understanding of the system. For example, a new map type or a new link type.', 'Major related component': 'The attach events and bpf link. e.g. perf events, tracepoints, etc.', 'program_types_related': ['It improves the overall eBPF infrastructure (e.g., verifier, runtime, etc.).']}
--------------------
--------------------
Processing Commit ID: 2317dc2c22cc353b699c7d1db47b2fe91f54055c
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: 2317dc2c22cc353b699c7d1db47b2fe91f54055c
  Author Name: Thorsten Blum
  Author Email: thorsten.blum@toblux.com
  Commit Date: 1717427363
  Commit Message:
    bpf
  Parent Hashes: 7d0b3953f6d832daec10a0d76e2d4db405768a8b
  Refs:  devmap: Remove unnecessary if check in for loop

The iterator variable dst cannot be NULL and the if check can be removed.
Remove it and fix the following Coccinelle/coccicheck warning reported
by itnull.cocci:

	ERROR: iterator variable bound on line 762 cannot be NULL

Signed-off-by: Thorsten Blum <thorsten.blum@toblux.com>
Signed-off-by: Daniel Borkmann <daniel@iogearbox.net>
Reviewed-by: Toke Høiland-Jørgensen <toke@redhat.com>
Acked-by: Jiri Olsa <jolsa@kernel.org>
Link: https://lore.kernel.org/bpf/20240529101900.103913-2-thorsten.blum@toblux.com


- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'Remove unnecessary NULL check in bpf devmap iterator variable to fix coccicheck warning.', 'keywords': 'devmap, NULL check, coccicheck', 'commit_classification': "It's a cleanup or refactoring in the code.", 'commit_complexity': 'Simple, can be used without much configuration. For example, a simple helper function.', 'Major related component': 'The eBPF maps', 'program_types_related': ['It improves the overall eBPF infrastructure (e.g., verifier, runtime, etc.).']}
--------------------
--------------------
Processing Commit ID: ec1249d3278183d419276b9a7fe73591cd3dd505
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: ec1249d3278183d419276b9a7fe73591cd3dd505
  Author Name: Jeff Johnson
  Author Email: quic_jjohnson@quicinc.com
  Commit Date: 1717427021
  Commit Message:
    test_bpf: Add missing MODULE_DESCRIPTION()

make allmodconfig && make W=1 C=1 reports:
WARNING: modpost: missing MODULE_DESCRIPTION() in lib/test_bpf.o

Add the missing invocation of the MODULE_DESCRIPTION() macro.

Signed-off-by: Jeff Johnson <quic_jjohnson@quicinc.com>
Signed-off-by: Daniel Borkmann <daniel@iogearbox.net>
Link: https://lore.kernel.org/bpf/20240531-md-lib-test_bpf-v1-1-868e4bd2f9ed@quicinc.com

  Parent Hashes: ce5249b91e34d81255c00950d415ebd4c3cae8d4
  Refs: 

- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'Add missing MODULE_DESCRIPTION() macro to resolve modpost warning in test_bpf module.', 'keywords': 'MODULE_DESCRIPTION, test_bpf, warning', 'commit_classification': "It's a cleanup or refactoring in the code.", 'commit_complexity': 'Simple, can be used without much configuration. For example, a simple helper function.', 'Major related component': 'The test cases and makefiles', 'program_types_related': ["It's not related to any of the above."]}
--------------------
--------------------
Processing Commit ID: ce5249b91e34d81255c00950d415ebd4c3cae8d4
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: ce5249b91e34d81255c00950d415ebd4c3cae8d4
  Author Name: Swan Beaujard
  Author Email: beaujardswan@gmail.com
  Commit Date: 1717426707
  Commit Message:
    bpftool: Fix typo in MAX_NUM_METRICS macro name

Correct typo in bpftool profiler and change all instances of 'MATRICS' to
'METRICS' in the profiler.bpf.c file.

Signed-off-by: Swan Beaujard <beaujardswan@gmail.com>
Signed-off-by: Daniel Borkmann <daniel@iogearbox.net>
Acked-by: Quentin Monnet <qmo@kernel.org>
Link: https://lore.kernel.org/bpf/20240602225812.81171-1-beaujardswan@gmail.com

  Parent Hashes: a450d36b05fa225b071ce9fbf522544caea06594
  Refs: 

- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'This commit fixes a typo in the MAX_NUM_METRICS macro name in bpftool.', 'keywords': 'typo, bpftool, metrics', 'commit_classification': "It's a documentation change or typo fix.", 'commit_complexity': 'Simple, can be used without much configuration. For example, a simple helper function.', 'Major related component': 'The bpftool utility', 'program_types_related': ['It improves the overall eBPF infrastructure (e.g., verifier, runtime, etc.).']}
--------------------
--------------------
Processing Commit ID: a450d36b05fa225b071ce9fbf522544caea06594
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: a450d36b05fa225b071ce9fbf522544caea06594
  Author Name: Dr. David Alan Gilbert
  Author Email: linux@treblig.org
  Commit Date: 1717426386
  Commit Message:
    selftests/bpf: Remove unused struct 'libcap'

'libcap' is unused since commit b1c2768a82b9 ("bpf: selftests: Remove libcap
usage from test_verifier"). Remove it.

Signed-off-by: Dr. David Alan Gilbert <linux@treblig.org>
Signed-off-by: Daniel Borkmann <daniel@iogearbox.net>
Link: https://lore.kernel.org/bpf/20240602234112.225107-4-linux@treblig.org

  Parent Hashes: 3f67639d8e582c89c79549c619b22a00dd330e4e
  Refs: 

- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': "This commit removes the unused struct 'libcap' from selftests/bpf in Linux eBPF.", 'keywords': 'selftests,bpf,libcap', 'commit_classification': "It's a cleanup or refactoring in the code.", 'commit_complexity': 'Simple, can be used without much configuration. For example, a simple helper function.', 'Major related component': 'The test cases and makefiles', 'program_types_related': ["It's not related to any of the above."]}
--------------------
--------------------
Processing Commit ID: 3f67639d8e582c89c79549c619b22a00dd330e4e
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: 3f67639d8e582c89c79549c619b22a00dd330e4e
  Author Name: Dr. David Alan Gilbert
  Author Email: linux@treblig.org
  Commit Date: 1717426377
  Commit Message:
    selftests/bpf: Remove unused 'key_t' structs

'key_t' is unused in a couple of files since the original commit 60dd49ea6539
("selftests/bpf: Add test for bpf array map iterators"). Remove it.

Signed-off-by: Dr. David Alan Gilbert <linux@treblig.org>
Signed-off-by: Daniel Borkmann <daniel@iogearbox.net>
Link: https://lore.kernel.org/bpf/20240602234112.225107-3-linux@treblig.org

  Parent Hashes: dfa7c9ffa607235119e029b70ced72f29059f8f3
  Refs: 

- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': "Remove unused 'key_t' structs in selftests/bpf related files.", 'keywords': 'remove, key_t, selftests', 'commit_classification': "It's a cleanup or refactoring in the code.", 'commit_complexity': 'Simple, can be used without much configuration. For example, a simple helper function.', 'Major related component': 'The test cases and makefiles', 'program_types_related': ["It's not related to any of the above."]}
--------------------
--------------------
Processing Commit ID: dfa7c9ffa607235119e029b70ced72f29059f8f3
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: dfa7c9ffa607235119e029b70ced72f29059f8f3
  Author Name: Dr. David Alan Gilbert
  Author Email: linux@treblig.org
  Commit Date: 1717426362
  Commit Message:
    selftests/bpf: Remove unused struct 'scale_test_def'

'scale_test_def' is unused since commit 3762a39ce85f ("selftests/bpf: Split out
bpf_verif_scale selftests into multiple tests"). Remove it.

Signed-off-by: Dr. David Alan Gilbert <linux@treblig.org>
Signed-off-by: Daniel Borkmann <daniel@iogearbox.net>
Link: https://lore.kernel.org/bpf/20240602234112.225107-2-linux@treblig.org

  Parent Hashes: 96a27ee76f0e95b56f94b6902da7a5ebef372612
  Refs: 

- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': "The commit removes an unused struct 'scale_test_def' from selftests/bpf.", 'keywords': 'unused, struct, selftests', 'commit_classification': "It's a cleanup or refactoring in the code.", 'commit_complexity': 'Simple, can be used without much configuration. For example, a simple helper function.', 'Major related component': 'The test cases and makefiles', 'program_types_related': ["It's not related to any of the above."]}
--------------------
--------------------
Processing Commit ID: 96a27ee76f0e95b56f94b6902da7a5ebef372612
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: 96a27ee76f0e95b56f94b6902da7a5ebef372612
  Author Name: Xiao Wang
  Author Email: xiao.w.wang@intel.com
  Commit Date: 1717425923
  Commit Message:
    riscv
  Parent Hashes: 531876c80004ecff7bfdbd8ba6c6b48835ef5e22
  Refs:  bpf: Introduce shift add helper with Zba optimization

Zba extension is very useful for generating addresses that index into array
of basic data types. This patch introduces sh2add and sh3add helpers for
RV32 and RV64 respectively

- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'Introduce sh2add and sh3add helpers for RISC-V with Zba optimization for address generation.', 'keywords': 'RISC-V, helpers, optimization', 'commit_classification': "It's a new feature.", 'commit_complexity': 'Moderate, requires some setup or understanding of the system. For example, a new map type or a new link type.', 'Major related component': 'The helper and kfuncs', 'program_types_related': ['It improves the overall eBPF infrastructure (e.g., verifier, runtime, etc.).']}
--------------------
--------------------
Processing Commit ID: 83814698cf48ce3aadc5d88a3f577f04482ff92a
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: 83814698cf48ce3aadc5d88a3f577f04482ff92a
  Author Name: Linus Torvalds
  Author Email: torvalds@linux-foundation.org
  Commit Date: 1717288475
  Commit Message:
    Merge tag 'powerpc-6.10-2' of git://git.kernel.org/pub/scm/linux/kernel/git/powerpc/linux

Pull powerpc fixes from Michael Ellerman:

 - Enforce full ordering for ATOMIC operations with BPF_FETCH

 - Fix uaccess build errors seen with GCC 13/14

 - Fix build errors on ppc32 due to ARCH_HAS_KERNEL_FPU_SUPPORT

 - Drop error message from lparcfg guest name lookup

Thanks to Christophe Leroy
  Parent Hashes: 54bec8ed5732339438271d07376890454fa58046 be2fc65d66e0406cc9d39d40becaecdf4ee765f3
  Refs:  Guenter Roeck

- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'Merges powerpc-related fixes including ATOMIC operations ordering and build error corrections.', 'keywords': 'powerpc, atomic, build', 'commit_classification': "It's a bug fix.", 'commit_complexity': 'Moderate, requires some setup or understanding of the system. For example, a new map type or a new link type.', 'Major related component': 'Other component related to eBPF but not listed above.', 'program_types_related': ["It's not related to any of the above."]}
--------------------
--------------------
Processing Commit ID: 531876c80004ecff7bfdbd8ba6c6b48835ef5e22
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: 531876c80004ecff7bfdbd8ba6c6b48835ef5e22
  Author Name: Andrii Nakryiko
  Author Email: andrii@kernel.org
  Commit Date: 1717212955
  Commit Message:
    libbpf: keep FD_CLOEXEC flag when dup()'ing FD

Make sure to preserve and/or enforce FD_CLOEXEC flag on duped FDs.
Use dup3() with O_CLOEXEC flag for that.

Without this fix libbpf effectively clears FD_CLOEXEC flag on each of BPF
map/prog FD
  Parent Hashes: 3f8fde319524411b96badee3c96f35831300388a
  Refs:  which is definitely not the right or expected behavior.

Reported-by: Lennart Poettering <lennart@poettering.net>
Fixes: bc308d011ab8 ("libbpf: call dup2() syscall directly")
Signed-off-by: Andrii Nakryiko <andrii@kernel.org>
Acked-by: Jiri Olsa <jolsa@kernel.org>
Link: https://lore.kernel.org/r/20240529223239.504241-1-andrii@kernel.org
Signed-off-by: Alexei Starovoitov <ast@kernel.org>


- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'Fixes FD_CLOEXEC flag handling in libbpf by using dup3().', 'keywords': 'FD_CLOEXEC, libbpf, dup3', 'commit_classification': "It's a bug fix.", 'commit_complexity': 'Simple, can be used without much configuration. For example, a simple helper function.', 'Major related component': 'The libbpf library', 'program_types_related': ['It improves the overall eBPF infrastructure (e.g., verifier, runtime, etc.).']}
--------------------
--------------------
Processing Commit ID: 7d0b3953f6d832daec10a0d76e2d4db405768a8b
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: 7d0b3953f6d832daec10a0d76e2d4db405768a8b
  Author Name: Andrii Nakryiko
  Author Email: andrii@kernel.org
  Commit Date: 1717192611
  Commit Message:
    libbpf: don't close(-1) in multi-uprobe feature detector

Guard close(link_fd) with extra link_fd >= 0 check to prevent close(-1).

Detected by Coverity static analysis.

Fixes: 04d939a2ab22 ("libbpf: detect broken PID filtering logic for multi-uprobe")
Signed-off-by: Andrii Nakryiko <andrii@kernel.org>
Acked-by: Jiri Olsa <jolsa@kernel.org>
Link: https://lore.kernel.org/r/20240529231212.768828-1-andrii@kernel.org
Signed-off-by: Alexei Starovoitov <ast@kernel.org>

  Parent Hashes: aeb8fe0283d4d3b0f27a87c5f5c938e7324f7d8f
  Refs: 

- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'Guard added to ensure link_fd >= 0 before calling close to prevent errors in libbpf.', 'keywords': 'libbpf, close, fix', 'commit_classification': "It's a bug fix.", 'commit_complexity': 'Simple, can be used without much configuration. For example, a simple helper function.', 'Major related component': 'The libbpf library', 'program_types_related': ['kprobe/uprobe/ftrace like programs']}
--------------------
--------------------
Processing Commit ID: aeb8fe0283d4d3b0f27a87c5f5c938e7324f7d8f
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: aeb8fe0283d4d3b0f27a87c5f5c938e7324f7d8f
  Author Name: Jiri Olsa
  Author Email: jolsa@kernel.org
  Commit Date: 1717192488
  Commit Message:
    bpf: Fix bpf_session_cookie BTF_ID in special_kfunc_set list

The bpf_session_cookie is unavailable for !CONFIG_FPROBE as reported
by Sebastian [1].

To fix that we remove CONFIG_FPROBE ifdef for session kfuncs
  Parent Hashes: 62da3acd28955e7299babebdfcb14243b789e773
  Refs:  which
is fine

- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'Fixes bpf_session_cookie BTF_ID availability issue by removing CONFIG_FPROBE dependency for session kfuncs.', 'keywords': 'bpf_session_cookie, BTF_ID, CONFIG_FPROBE', 'commit_classification': "It's a bug fix.", 'commit_complexity': 'Moderate, requires some setup or understanding of the system. For example, a new map type or a new link type.', 'Major related component': 'The helper and kfuncs', 'program_types_related': ['It improves the overall eBPF infrastructure (e.g., verifier, runtime, etc.).']}
--------------------
--------------------
Processing Commit ID: 62da3acd28955e7299babebdfcb14243b789e773
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: 62da3acd28955e7299babebdfcb14243b789e773
  Author Name: Andrii Nakryiko
  Author Email: andrii@kernel.org
  Commit Date: 1717192465
  Commit Message:
    selftests/bpf: fix inet_csk_accept prototype in test_sk_storage_tracing.c

Recent kernel change ([0]) changed inet_csk_accept() prototype. Adapt
progs/test_sk_storage_tracing.c to take that into account.

  [0] 92ef0fd55ac8 ("net: change proto and proto_ops accept type")

Signed-off-by: Andrii Nakryiko <andrii@kernel.org>
Link: https://lore.kernel.org/r/20240528223218.3445297-1-andrii@kernel.org
Signed-off-by: Alexei Starovoitov <ast@kernel.org>

  Parent Hashes: d8ec19857b095b39d114ae299713bd8ea6c1e66a
  Refs: 

- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'Fix inet_csk_accept prototype in test_sk_storage_tracing.c due to recent kernel change.', 'keywords': 'selftests,bpf,inet_csk_accept', 'commit_classification': "It's a test case or test infrastructure change.", 'commit_complexity': 'Simple, can be used without much configuration. For example, a simple helper function.', 'Major related component': 'The test cases and makefiles', 'program_types_related': ['tracepoints like programs']}
--------------------
--------------------
Processing Commit ID: bba1f6758a9ec90c1adac5dcf78f8a15f1bad65b
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: bba1f6758a9ec90c1adac5dcf78f8a15f1bad65b
  Author Name: Al Viro
  Author Email: viro@zeniv.linux.org.uk
  Commit Date: 1717127906
  Commit Message:
    lirc: rc_dev_get_from_fd(): fix file leak

missing fdput() on a failure exit

Fixes: 6a9d552483d50 "media: rc: bpf attach/detach requires write permission" # v6.9
Signed-off-by: Al Viro <viro@zeniv.linux.org.uk>

  Parent Hashes: b4cf5fc01ce83e5c0bcf3dbb9f929428646b9098
  Refs: 

- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': "Fixes a file descriptor leak in lirc's rc_dev_get_from_fd() function by ensuring fdput() is called on failure.", 'keywords': 'file leak, lirc, fdput', 'commit_classification': "It's a bug fix.", 'commit_complexity': 'Simple, can be used without much configuration. For example, a simple helper function.', 'Major related component': 'Other component related to eBPF but not listed above.', 'program_types_related': ["It's not related to any of the above."]}
--------------------
--------------------
Processing Commit ID: 3f8fde319524411b96badee3c96f35831300388a
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: 3f8fde319524411b96badee3c96f35831300388a
  Author Name: Martin KaFai Lau
  Author Email: martin.lau@kernel.org
  Commit Date: 1717108454
  Commit Message:
    Merge branch 'Notify user space when a struct_ops object is detached/unregistered'

Kui-Feng Lee says:

====================
The subsystems managing struct_ops objects may need to detach a
struct_ops object due to errors or other reasons. It would be useful
to notify user space programs so that error recovery or logging can be
carried out.

This patch set enables the detach feature for struct_ops links and
send an event to epoll when a link is detached.  Subsystems could call
link->ops->detach() to detach a link and notify user space programs
through epoll.

The signatures of callback functions in "struct bpf_struct_ops" have
been changed as well to pass an extra link argument to
subsystems. Subsystems could detach the links received from reg() and
update() callbacks if there is. This also provides a way that
subsystems can distinguish registrations for an object that has been
registered multiple times for several links.

However
  Parent Hashes: 46253c4ae96162a840ad65c1394de63796d7798a d14c1fac0c9722c4ec79589921c9e798601ca9d5
  Refs:  bpf struct_ops maps without BPF_F_LINK have no any link.
Subsystems will receive NULL link pointer for this case.
---
Changes from v6:

 - Fix the missing header at patch 5.

 - Move RCU_INIT_POINTER() back to its original position.

Changes from v5:

 - Change the commit title of the patch for bpftool.

Changes from v4:

 - Change error code for bpf_struct_ops_map_link_update()

 - Always return 0 for bpf_struct_ops_map_link_detach()

 - Hold update_mutex in bpf_struct_ops_link_create()

 - Add a separated instance of file_operations for links supporting
    poll.

 - Fix bpftool for bpf_link_fops_poll.

Changes from v3:

 - Add a comment to explain why holding update_mutex is not necessary
    in bpf_struct_ops_link_create()

 - Use rcu_access_pointer() in bpf_struct_ops_map_link_poll().

Changes from v2:

 - Rephrased commit logs and comments.

 - Addressed some mistakes from patch splitting.

 - Replace mutex with spinlock in bpf_testmod.c to address lockdep
    Splat and simplify the implementation.

 - Fix an argument passing to rcu_dereference_protected().

Changes from v1:

 - Pass a link to reg

- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'Implement notification for user space when struct_ops objects are detached or unregistered using epoll.', 'keywords': 'struct_ops, detach, epoll', 'commit_classification': "It's a new feature.", 'commit_complexity': 'Moderate, requires some setup or understanding of the system. For example, a new map type or a new link type.', 'Major related component': 'The helper and kfuncs', 'program_types_related': ['It improves the overall eBPF infrastructure (e.g., verifier, runtime, etc.).']}
--------------------
--------------------
Processing Commit ID: d14c1fac0c9722c4ec79589921c9e798601ca9d5
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: d14c1fac0c9722c4ec79589921c9e798601ca9d5
  Author Name: Kui-Feng Lee
  Author Email: thinker.li@gmail.com
  Commit Date: 1717108454
  Commit Message:
    bpftool: Change pid_iter.bpf.c to comply with the change of bpf_link_fops.

To support epoll
  Parent Hashes: 1a4b858b6a045828de1b536cfab7819c50864ed6
  Refs:  a new instance of file_operations

- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': "Update bpftool's pid_iter.bpf.c to align with changes in bpf_link_fops for epoll support.", 'keywords': 'bpftool,bpf_link,epoll', 'commit_classification': "It's a cleanup or refactoring in the code.", 'commit_complexity': 'Moderate, requires some setup or understanding of the system. For example, a new map type or a new link type.', 'Major related component': 'The bpftool utility', 'program_types_related': ['It improves the overall eBPF infrastructure (e.g., verifier, runtime, etc.).']}
--------------------
--------------------
Processing Commit ID: 1a4b858b6a045828de1b536cfab7819c50864ed6
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: 1a4b858b6a045828de1b536cfab7819c50864ed6
  Author Name: Kui-Feng Lee
  Author Email: thinker.li@gmail.com
  Commit Date: 1717108454
  Commit Message:
    selftests/bpf: test struct_ops with epoll

Verify whether a user space program is informed through epoll with EPOLLHUP
when a struct_ops object is detached.

The BPF code in selftests/bpf/progs/struct_ops_module.c has become
complex. Therefore
  Parent Hashes: 67c3e8353f45c27800eecc46e00e8272f063f7d1
  Refs:  struct_ops_detach.c has been added to segregate the BPF
code for detachment tests from the BPF code for other tests based on the
recommendation of Andrii Nakryiko.

Suggested-by: Andrii Nakryiko <andrii@kernel.org>
Signed-off-by: Kui-Feng Lee <thinker.li@gmail.com>
Link: https://lore.kernel.org/r/20240530065946.979330-6-thinker.li@gmail.com
Signed-off-by: Martin KaFai Lau <martin.lau@kernel.org>


- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'Tests have been added to verify epoll notifications for struct_ops detachment in selftests.', 'keywords': 'epoll, struct_ops, detachment', 'commit_classification': "It's a test case or test infrastructure change.", 'commit_complexity': 'Moderate, requires some setup or understanding of the system. For example, a new map type or a new link type.', 'Major related component': 'The test cases and makefiles', 'program_types_related': ['It improves the overall eBPF infrastructure (e.g., verifier, runtime, etc.).']}
--------------------
--------------------
Processing Commit ID: 67c3e8353f45c27800eecc46e00e8272f063f7d1
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: 67c3e8353f45c27800eecc46e00e8272f063f7d1
  Author Name: Kui-Feng Lee
  Author Email: thinker.li@gmail.com
  Commit Date: 1717108453
  Commit Message:
    bpf: export bpf_link_inc_not_zero.

bpf_link_inc_not_zero() will be used by kernel modules.  We will use it in
bpf_testmod.c later.

Signed-off-by: Kui-Feng Lee <thinker.li@gmail.com>
Link: https://lore.kernel.org/r/20240530065946.979330-5-thinker.li@gmail.com
Signed-off-by: Martin KaFai Lau <martin.lau@kernel.org>

  Parent Hashes: 1adddc97aa44c8783f9f0276ea70854d56f9f6df
  Refs: 

- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'The commit exports the function bpf_link_inc_not_zero for use by kernel modules.', 'keywords': 'export,bpf_link,kernel', 'commit_classification': "It's a new feature.", 'commit_complexity': 'Simple, can be used without much configuration. For example, a simple helper function.', 'Major related component': 'The attach events and bpf link. e.g. perf events, tracepoints, etc.', 'program_types_related': ['It improves the overall eBPF infrastructure (e.g., verifier, runtime, etc.).']}
--------------------
--------------------
Processing Commit ID: 1adddc97aa44c8783f9f0276ea70854d56f9f6df
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: 1adddc97aa44c8783f9f0276ea70854d56f9f6df
  Author Name: Kui-Feng Lee
  Author Email: thinker.li@gmail.com
  Commit Date: 1717108453
  Commit Message:
    bpf: support epoll from bpf struct_ops links.

Add epoll support to bpf struct_ops links to trigger EPOLLHUP event upon
detachment.

This patch implements the "poll" of the "struct file_operations" for BPF
links and introduces a new "poll" operator in the "struct bpf_link_ops". By
implementing "poll" of "struct bpf_link_ops" for the links of struct_ops
  Parent Hashes: 6fb2544ea1493f52e50b753604791c01bd2cf897
  Refs: 
the file descriptor of a struct_ops link can be added to an epoll file
descriptor to receive EPOLLHUP events.

Signed-off-by: Kui-Feng Lee <thinker.li@gmail.com>
Link: https://lore.kernel.org/r/20240530065946.979330-4-thinker.li@gmail.com
Signed-off-by: Martin KaFai Lau <martin.lau@kernel.org>


- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'This commit adds epoll support to bpf struct_ops links to handle EPOLLHUP events.', 'keywords': 'epoll, struct_ops, EPOLLHUP', 'commit_classification': "It's a new feature.", 'commit_complexity': 'Moderate, requires some setup or understanding of the system. For example, a new map type or a new link type.', 'Major related component': 'The attach events and bpf link. e.g. perf events, tracepoints, etc.', 'program_types_related': ['It improves the overall eBPF infrastructure (e.g., verifier, runtime, etc.).']}
--------------------
--------------------
Processing Commit ID: 6fb2544ea1493f52e50b753604791c01bd2cf897
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: 6fb2544ea1493f52e50b753604791c01bd2cf897
  Author Name: Kui-Feng Lee
  Author Email: thinker.li@gmail.com
  Commit Date: 1717108453
  Commit Message:
    bpf: enable detaching links of struct_ops objects.

Implement the detach callback in bpf_link_ops for struct_ops so that user
programs can detach a struct_ops link. The subsystems that struct_ops
objects are registered to can also use this callback to detach the links
being passed to them.

Signed-off-by: Kui-Feng Lee <thinker.li@gmail.com>
Link: https://lore.kernel.org/r/20240530065946.979330-3-thinker.li@gmail.com
Signed-off-by: Martin KaFai Lau <martin.lau@kernel.org>

  Parent Hashes: 73287fe228721b05690e671adbcccc6cf5435be6
  Refs: 

- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'Implemented the detach callback in bpf_link_ops to enable detaching links of struct_ops objects.', 'keywords': 'detach, struct_ops, bpf_link_ops', 'commit_classification': "It's a new feature.", 'commit_complexity': 'Moderate, requires some setup or understanding of the system. For example, a new map type or a new link type.', 'Major related component': 'The attach events and bpf link. e.g. perf events, tracepoints, etc.', 'program_types_related': ['It improves the overall eBPF infrastructure (e.g., verifier, runtime, etc.).']}
--------------------
--------------------
Processing Commit ID: 73287fe228721b05690e671adbcccc6cf5435be6
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: 73287fe228721b05690e671adbcccc6cf5435be6
  Author Name: Kui-Feng Lee
  Author Email: thinker.li@gmail.com
  Commit Date: 1717108453
  Commit Message:
    bpf: pass bpf_struct_ops_link to callbacks in bpf_struct_ops.

Pass an additional pointer of bpf_struct_ops_link to callback function reg
  Parent Hashes: 46253c4ae96162a840ad65c1394de63796d7798a
  Refs: 
unreg

- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'The commit passes an additional pointer of bpf_struct_ops_link to callback functions in bpf_struct_ops.', 'keywords': 'bpf_struct_ops, callbacks, pointer', 'commit_classification': "It's a new feature.", 'commit_complexity': 'Moderate, requires some setup or understanding of the system. For example, a new map type or a new link type.', 'Major related component': 'The helper and kfuncs', 'program_types_related': ['It improves the overall eBPF infrastructure (e.g., verifier, runtime, etc.).']}
--------------------
--------------------
Processing Commit ID: 46253c4ae96162a840ad65c1394de63796d7798a
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: 46253c4ae96162a840ad65c1394de63796d7798a
  Author Name: Jakub Sitnicki
  Author Email: jakub@cloudflare.com
  Commit Date: 1717105337
  Commit Message:
    selftests/bpf: use section names understood by libbpf in test_sockmap

libbpf can deduce program type and attach type from the ELF section name.
We don't need to pass it out-of-band if we switch to libbpf convention [1].

[1] https://docs.kernel.org/bpf/libbpf/program_types.html

Signed-off-by: Jakub Sitnicki <jakub@cloudflare.com>
Signed-off-by: Andrii Nakryiko <andrii@kernel.org>
Link: https://lore.kernel.org/bpf/20240522080936.2475833-1-jakub@cloudflare.com

  Parent Hashes: f088cabffcb646b559055464bb5fa79206752f07
  Refs: 

- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'Update selftests to use libbpf-convention section names for program type deduction in test_sockmap.', 'keywords': 'selftests, libbpf, section names', 'commit_classification': "It's a test case or test infrastructure change.", 'commit_complexity': 'Simple, can be used without much configuration. For example, a simple helper function.', 'Major related component': 'The test cases and makefiles', 'program_types_related': ['socket like programs']}
--------------------
--------------------
Processing Commit ID: af752016340021d433a962063067e819dba889b1
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: af752016340021d433a962063067e819dba889b1
  Author Name: Ian Rogers
  Author Email: irogers@google.com
  Commit Date: 1717088757
  Commit Message:
    perf top: Allow filters on events

Allow filters to be added to perf top events. One use is to workaround
issues with:
```
$ perf top --uid="$(id -u)"
```
which tries to scan /proc find processes belonging to the uid and can
fail in such a pid terminates between the scan and the
perf_event_open reporting:
```
Error:
The sys_perf_event_open() syscall returned with 3 (No such process) for event (cycles:P).
/bin/dmesg | grep -i perf may provide additional information.
```
A similar filter:
```
$ perf top -e cycles:P --filter "uid == $(id -u)"
```
doesn't fail this way.

Signed-off-by: Ian Rogers <irogers@google.com>
Acked-by: Namhyung Kim <namhyung@kernel.org>
Cc: John Fastabend <john.fastabend@gmail.com>
Cc: Changbin Du <changbin.du@huawei.com>
Cc: Yang Jihong <yangjihong1@huawei.com>
Cc: Andrii Nakryiko <andrii@kernel.org>
Cc: bpf@vger.kernel.org
Signed-off-by: Namhyung Kim <namhyung@kernel.org>
Link: https://lore.kernel.org/r/20240524205227.244375-4-irogers@google.com

  Parent Hashes: d92aa899fe0a66350303a1986d6dc7ec4b3a1ea7
  Refs: 

- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'The commit adds filters to Perf top events to address issues caused by terminated processes.', 'keywords': 'filters, events, perf', 'commit_classification': "It's a new feature.", 'commit_complexity': 'Moderate, requires some setup or understanding of the system. For example, a new map type or a new link type.', 'Major related component': 'Other component related to eBPF but not listed above.', 'program_types_related': ["It's not related to any of the above."]}
--------------------
--------------------
Processing Commit ID: d92aa899fe0a66350303a1986d6dc7ec4b3a1ea7
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: d92aa899fe0a66350303a1986d6dc7ec4b3a1ea7
  Author Name: Ian Rogers
  Author Email: irogers@google.com
  Commit Date: 1717088757
  Commit Message:
    perf bpf filter: Add uid and gid terms

Allow the BPF filter to use the uid and gid terms determined by the
bpf_get_current_uid_gid BPF helper. For example
  Parent Hashes: 63b9cbd7941aa9ec5cb61567042176c4ce04b020
  Refs:  the following will
record the cpu-clock event system wide discarding samples that don't
belong to the current user.

$ perf record -e cpu-clock --filter "uid == $(id -u)" -a sleep 0.1

Signed-off-by: Ian Rogers <irogers@google.com>
Acked-by: Namhyung Kim <namhyung@kernel.org>
Cc: John Fastabend <john.fastabend@gmail.com>
Cc: Changbin Du <changbin.du@huawei.com>
Cc: Yang Jihong <yangjihong1@huawei.com>
Cc: Andrii Nakryiko <andrii@kernel.org>
Cc: bpf@vger.kernel.org
Signed-off-by: Namhyung Kim <namhyung@kernel.org>
Link: https://lore.kernel.org/r/20240524205227.244375-3-irogers@google.com


- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'This commit adds uid and gid filtering capability to the perf BPF filter using bpf_get_current_uid_gid.', 'keywords': 'uid,gid,filter', 'commit_classification': "It's a new feature.", 'commit_complexity': 'Moderate, requires some setup or understanding of the system. For example, a new map type or a new link type.', 'Major related component': 'The attach events and bpf link. e.g. perf events, tracepoints, etc.', 'program_types_related': ['tracepoints like programs']}
--------------------
--------------------
Processing Commit ID: 63b9cbd7941aa9ec5cb61567042176c4ce04b020
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: 63b9cbd7941aa9ec5cb61567042176c4ce04b020
  Author Name: Ian Rogers
  Author Email: irogers@google.com
  Commit Date: 1717088757
  Commit Message:
    perf bpf filter: Give terms their own enum

Give the term types their own enum so that additional terms can be
added that don't correspond to a PERF_SAMPLE_xx flag. The term values
are numerically ascending rather than bit field positions
  Parent Hashes: d163d60258c755845cbc9cfe0e45fca71e649488
  Refs:  this means
they need translating to a PERF_SAMPLE_xx bit field in certain places
using a shift.

Signed-off-by: Ian Rogers <irogers@google.com>
Acked-by: Namhyung Kim <namhyung@kernel.org>
Cc: John Fastabend <john.fastabend@gmail.com>
Cc: Changbin Du <changbin.du@huawei.com>
Cc: Yang Jihong <yangjihong1@huawei.com>
Cc: Andrii Nakryiko <andrii@kernel.org>
Cc: bpf@vger.kernel.org
Signed-off-by: Namhyung Kim <namhyung@kernel.org>
Link: https://lore.kernel.org/r/20240524205227.244375-2-irogers@google.com


- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'Refactor perf BPF filter to assign unique enums to term types for expansion beyond PERF_SAMPLE_xx flags.', 'keywords': 'perf,BPF,enum', 'commit_classification': "It's a cleanup or refactoring in the code.", 'commit_complexity': 'Moderate, requires some setup or understanding of the system. For example, a new map type or a new link type.', 'Major related component': 'The attach events and bpf link. e.g. perf events, tracepoints, etc.', 'program_types_related': ['profile like programs']}
--------------------
--------------------
Processing Commit ID: d8ec19857b095b39d114ae299713bd8ea6c1e66a
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: d8ec19857b095b39d114ae299713bd8ea6c1e66a
  Author Name: Linus Torvalds
  Author Email: torvalds@linux-foundation.org
  Commit Date: 1717083184
  Commit Message:
    Merge tag 'net-6.10-rc2' of git://git.kernel.org/pub/scm/linux/kernel/git/netdev/net

Pull networking fixes from Paolo Abeni:
 "Including fixes from bpf and netfilter.

  Current release - regressions:

   - gro: initialize network_offset in network layer

   - tcp: reduce accepted window in NEW_SYN_RECV state

  Current release - new code bugs:

   - eth: mlx5e: do not use ptp structure for tx ts stats when not
     initialized

   - eth: ice: check for unregistering correct number of devlink params

  Previous releases - regressions:

   - bpf: Allow delete from sockmap/sockhash only if update is allowed

   - sched: taprio: extend minimum interval restriction to entire cycle
     too

   - netfilter: ipset: add list flush to cancel_gc

   - ipv4: fix address dump when IPv4 is disabled on an interface

   - sock_map: avoid race between sock_map_close and sk_psock_put

   - eth: mlx5: use mlx5_ipsec_rx_status_destroy to correctly delete
     status rules

  Previous releases - always broken:

   - core: fix __dst_negative_advice() race

   - bpf:
       - fix multi-uprobe PID filtering logic
       - fix pkt_type override upon netkit pass verdict

   - netfilter: tproxy: bail out if IP has been disabled on the device

   - af_unix: annotate data-race around unix_sk(sk)->addr

   - eth: mlx5e: fix UDP GSO for encapsulated packets

   - eth: idpf: don't enable NAPI and interrupts prior to allocating Rx
     buffers

   - eth: i40e: fully suspend and resume IO operations in EEH case

   - eth: octeontx2-pf: free send queue buffers incase of leaf to inner

   - eth: ipvlan: dont Use skb->sk in ipvlan_process_v{4
  Parent Hashes: 4a4be1ad3a6efea16c56615f31117590fd881358 13c7c941e72908b8cce5a84b45a7b5e485ca12ed
  Refs: 6}_outbound"

* tag 'net-6.10-rc2' of git://git.kernel.org/pub/scm/linux/kernel/git/netdev/net: (69 commits)
  netdev: add qstat for csum complete
  ipvlan: Dont Use skb->sk in ipvlan_process_v{4

- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'This commit merges networking fixes addressing regressions and bugs for the current and previous Linux kernel releases.', 'keywords': 'networking, bugs, bpf', 'commit_classification': "It's a bug fix.", 'commit_complexity': 'Moderate, requires some setup or understanding of the system. For example, a new map type or a new link type.', 'Major related component': 'Other component related to eBPF but not listed above.', 'program_types_related': ["It's not related to any of the above."]}
--------------------
--------------------
Processing Commit ID: f088cabffcb646b559055464bb5fa79206752f07
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: f088cabffcb646b559055464bb5fa79206752f07
  Author Name: Andrii Nakryiko
  Author Email: andrii@kernel.org
  Commit Date: 1717023708
  Commit Message:
    Merge branch 'bpf-add-a-generic-bits-iterator'

Yafang Shao says:

====================
bpf: Add a generic bits iterator

Three new kfuncs
  Parent Hashes: fbe3e8473f391adbf67eb0f317305fe62c66096c 6ba7acdb93b4ecb554d5838fca3f5f0fcf9fff14
  Refs:  namely bpf_iter_bits_{new

- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'Add a generic bits iterator with new kfuncs to the BPF subsystem.', 'keywords': 'generic, bits, iterator', 'commit_classification': "It's a new feature.", 'commit_complexity': 'Moderate, requires some setup or understanding of the system. For example, a new map type or a new link type.', 'Major related component': 'The helper and kfuncs', 'program_types_related': ['It improves the overall eBPF infrastructure (e.g., verifier, runtime, etc.).']}
--------------------
--------------------
Processing Commit ID: 6ba7acdb93b4ecb554d5838fca3f5f0fcf9fff14
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: 6ba7acdb93b4ecb554d5838fca3f5f0fcf9fff14
  Author Name: Yafang Shao
  Author Email: laoar.shao@gmail.com
  Commit Date: 1717023708
  Commit Message:
    selftests/bpf: Add selftest for bits iter

Add test cases for the bits iter:

- Positive cases
  - Bit mask representing a single word (8-byte unit)
  - Bit mask representing data spanning more than one word
  - The index of the set bit

- Nagative cases
  - bpf_iter_bits_destroy() is required after calling
    bpf_iter_bits_new()
  - bpf_iter_bits_destroy() can only destroy an initialized iter
  - bpf_iter_bits_next() must use an initialized iter
  - Bit mask representing zero words
  - Bit mask representing fewer words than expected
  - Case for ENOMEM
  - Case for NULL pointer

Signed-off-by: Yafang Shao <laoar.shao@gmail.com>
Signed-off-by: Andrii Nakryiko <andrii@kernel.org>
Link: https://lore.kernel.org/bpf/20240517023034.48138-3-laoar.shao@gmail.com

  Parent Hashes: 4665415975b0827e9646cab91c61d02a6b364d59
  Refs: 

- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'Add selftests for bits iterator handling various positive and negative cases in the BPF environment.', 'keywords': 'selftests,bits iterator,test cases', 'commit_classification': "It's a test case or test infrastructure change.", 'commit_complexity': 'Moderate, requires some setup or understanding of the system. For example, a new map type or a new link type.', 'Major related component': 'The test cases and makefiles', 'program_types_related': ['It improves the overall eBPF infrastructure (e.g., verifier, runtime, etc.).']}
--------------------
--------------------
Processing Commit ID: 4665415975b0827e9646cab91c61d02a6b364d59
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: 4665415975b0827e9646cab91c61d02a6b364d59
  Author Name: Yafang Shao
  Author Email: laoar.shao@gmail.com
  Commit Date: 1717023707
  Commit Message:
    bpf: Add bits iterator

Add three new kfuncs for the bits iterator:
- bpf_iter_bits_new
  Initialize a new bits iterator for a given memory area. Due to the
  limitation of bpf memalloc
  Parent Hashes: fbe3e8473f391adbf67eb0f317305fe62c66096c
  Refs:  the max number of words (8-byte units) that
  can be iterated over is limited to (4096 / 8).
- bpf_iter_bits_next
  Get the next bit in a bpf_iter_bits
- bpf_iter_bits_destroy
  Destroy a bpf_iter_bits

The bits iterator facilitates the iteration of the bits of a memory area

- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'The commit introduces three new kernel functions for bits iteration within a memory area using a bits iterator.', 'keywords': 'bits, iterator, kfuncs', 'commit_classification': "It's a new feature.", 'commit_complexity': 'Moderate, requires some setup or understanding of the system. For example, a new map type or a new link type.', 'Major related component': 'The helper and kfuncs', 'program_types_related': ['other']}
--------------------
--------------------
Processing Commit ID: b1e7cee96127468c2483cf10c2899c9b5cf79bf8
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: b1e7cee96127468c2483cf10c2899c9b5cf79bf8
  Author Name: Puranjay Mohan
  Author Email: puranjay@kernel.org
  Commit Date: 1716984762
  Commit Message:
    powerpc/bpf: enforce full ordering for ATOMIC operations with BPF_FETCH

The Linux Kernel Memory Model [1][2] requires RMW operations that have a
return value to be fully ordered.

BPF atomic operations with BPF_FETCH (including BPF_XCHG and
BPF_CMPXCHG) return a value back so they need to be JITed to fully
ordered operations. POWERPC currently emits relaxed operations for
these.

We can show this by running the following litmus-test:

  PPC SB+atomic_add+fetch

  {
      0:r0=x;  (* dst reg assuming offset is 0 *)
      0:r1=2;  (* src reg *)
      0:r2=1;
      0:r4=y;  (* P0 writes to this
  Parent Hashes: 1613e604df0cd359cf2a7fbd9be7a0bcfacfabd0
  Refs:  P1 reads this *)
      0:r5=z;  (* P1 writes to this

- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'Enforce full memory ordering for POWERPC BPF atomic operations using BPF_FETCH.', 'keywords': 'POWERPC, BPF_FETCH, ordering', 'commit_classification': "It's a bug fix.", 'commit_complexity': 'Moderate, requires some setup or understanding of the system. For example, a new map type or a new link type.', 'Major related component': 'The JIT compiler', 'program_types_related': ['It improves the overall eBPF infrastructure (e.g., verifier, runtime, etc.).']}
--------------------
--------------------
Processing Commit ID: fbe3e8473f391adbf67eb0f317305fe62c66096c
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: fbe3e8473f391adbf67eb0f317305fe62c66096c
  Author Name: Martin KaFai Lau
  Author Email: martin.lau@kernel.org
  Commit Date: 1716959775
  Commit Message:
    Merge branch 'use network helpers
  Parent Hashes: eb4e7726279a344c82e3c23be396bcfd0a4d5669 ed61271af5230cef9b9329bb1eacc1b1a9800d07
  Refs:  part 5'

Geliang Tang says:

====================
This patchset uses post_socket_cb callbacks of struct network_helper_opts
to refactor do_test() in bpf_tcp_ca.c.

v5:
 - address Martin's comments in v4 (thanks)
 - add patch 4

- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'Refactor do_test() in bpf_tcp_ca.c using network helpers post_socket_cb callbacks.', 'keywords': 'network, refactor, callbacks', 'commit_classification': "It's a cleanup or refactoring in the code.", 'commit_complexity': 'Moderate, requires some setup or understanding of the system. For example, a new map type or a new link type.', 'Major related component': 'Other component related to eBPF but not listed above.', 'program_types_related': ['socket like programs']}
--------------------
--------------------
Processing Commit ID: ed61271af5230cef9b9329bb1eacc1b1a9800d07
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: ed61271af5230cef9b9329bb1eacc1b1a9800d07
  Author Name: Geliang Tang
  Author Email: tanggeliang@kylinos.cn
  Commit Date: 1716943984
  Commit Message:
    selftests/bpf: Use start_server_str in do_test in bpf_tcp_ca

This patch uses new helper start_server_str() in do_test() in bpf_tcp_ca.c
to accept a struct network_helper_opts argument instead of using
start_server() and settcpca(). Then change the type of the first paramenter
of do_test() into a struct network_helper_opts one.

Define its own cb_opts and opts for each test
  Parent Hashes: 79b330c57debe6b15f441e999bb62042afd5b08e
  Refs:  set its own cc name into
cb_opts.cc

- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'Refactor bpf_tcp_ca test to use start_server_str with network_helper_opts for better test configuration.', 'keywords': 'start_server_str, network_helper_opts, do_test', 'commit_classification': "It's a cleanup or refactoring in the code.", 'commit_complexity': 'Moderate, requires some setup or understanding of the system. For example, a new map type or a new link type.', 'Major related component': 'The test cases and makefiles', 'program_types_related': ['It improves the overall eBPF infrastructure (e.g., verifier, runtime, etc.).']}
--------------------
--------------------
Processing Commit ID: 79b330c57debe6b15f441e999bb62042afd5b08e
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: 79b330c57debe6b15f441e999bb62042afd5b08e
  Author Name: Geliang Tang
  Author Email: tanggeliang@kylinos.cn
  Commit Date: 1716943984
  Commit Message:
    selftests/bpf: Use post_socket_cb in start_server_str

This patch uses start_server_str() helper in test_dctcp_fallback() in
bpf_tcp_ca.c
  Parent Hashes: e078255abd53ac44c9133fd98d51645dbd196123
  Refs:  instead of using start_server() and settcpca(). For
support opts in start_server_str() helper

- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'Use start_server_str helper in bpf_tcp_ca.c tests for DCTCP fallback.', 'keywords': 'start_server_str,test_dctcp_fallback,bpf_tcp_ca', 'commit_classification': "It's a test case or test infrastructure change.", 'commit_complexity': 'Simple, can be used without much configuration. For example, a simple helper function.', 'Major related component': 'The test cases and makefiles', 'program_types_related': ['socket like programs']}
--------------------
--------------------
Processing Commit ID: e078255abd53ac44c9133fd98d51645dbd196123
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: e078255abd53ac44c9133fd98d51645dbd196123
  Author Name: Geliang Tang
  Author Email: tanggeliang@kylinos.cn
  Commit Date: 1716943984
  Commit Message:
    selftests/bpf: Use post_socket_cb in connect_to_fd_opts

Since the post_socket_cb() callback is added in struct network_helper_opts
  Parent Hashes: 6f802cb8988e8e41f2fdb74ac949d3a0ef9a9594
  Refs: 
it's make sense to use it not only in __start_server()

- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'The commit modifies BPF selftests to use the post_socket_cb callback in connect_to_fd_opts for consistency.', 'keywords': 'selftests,bpf,callback', 'commit_classification': "It's a test case or test infrastructure change.", 'commit_complexity': 'Simple, can be used without much configuration. For example, a simple helper function.', 'Major related component': 'The test cases and makefiles', 'program_types_related': ['socket like programs']}
--------------------
--------------------
Processing Commit ID: 6f802cb8988e8e41f2fdb74ac949d3a0ef9a9594
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: 6f802cb8988e8e41f2fdb74ac949d3a0ef9a9594
  Author Name: Geliang Tang
  Author Email: tanggeliang@kylinos.cn
  Commit Date: 1716943983
  Commit Message:
    selftests/bpf: Add start_server_str helper

It's a tech debt that start_server() does not take the "opts" argument.
It's pretty handy to have start_server() as a helper that takes string
address.

So this patch creates a new helper start_server_str(). Then start_server()
can be a wrapper of it.

Signed-off-by: Geliang Tang <tanggeliang@kylinos.cn>
Link: https://lore.kernel.org/r/606e6cfd7e1aff8bc51ede49862eed0802e52170.1716638248.git.tanggeliang@kylinos.cn
Signed-off-by: Martin KaFai Lau <martin.lau@kernel.org>

  Parent Hashes: ed31adf6874db172e3212ac1ebaf701ed6190650
  Refs: 

- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'Add start_server_str helper to enhance start_server() functionality in BPF selftests.', 'keywords': 'start_server_str, helper, selftests', 'commit_classification': "It's a cleanup or refactoring in the code.", 'commit_complexity': 'Simple, can be used without much configuration. For example, a simple helper function.', 'Major related component': 'The test cases and makefiles', 'program_types_related': ['It improves the overall eBPF infrastructure (e.g., verifier, runtime, etc.).']}
--------------------
--------------------
Processing Commit ID: ed31adf6874db172e3212ac1ebaf701ed6190650
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: ed31adf6874db172e3212ac1ebaf701ed6190650
  Author Name: Geliang Tang
  Author Email: tanggeliang@kylinos.cn
  Commit Date: 1716943983
  Commit Message:
    selftests/bpf: Drop struct post_socket_opts

It's not possible to have one generic/common "struct post_socket_opts"
for all tests. It's better to have the individual test define its own
callback opts struct.

So this patch drops struct post_socket_opts
  Parent Hashes: eb4e7726279a344c82e3c23be396bcfd0a4d5669
  Refs:  and changes the second
parameter of post_socket_cb as "void *" type.

Signed-off-by: Geliang Tang <tanggeliang@kylinos.cn>
Link: https://lore.kernel.org/r/f8bda41c7cb9cb6979b2779f89fb3a684234304f.1716638248.git.tanggeliang@kylinos.cn
Signed-off-by: Martin KaFai Lau <martin.lau@kernel.org>


- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'The commit removes the generic struct post_socket_opts in selftests for more test-specific callback structures.', 'keywords': 'selftests,struct,callback', 'commit_classification': "It's a cleanup or refactoring in the code.", 'commit_complexity': 'Simple, can be used without much configuration. For example, a simple helper function.', 'Major related component': 'The test cases and makefiles', 'program_types_related': ['socket like programs']}
--------------------
--------------------
Processing Commit ID: eb4e7726279a344c82e3c23be396bcfd0a4d5669
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: eb4e7726279a344c82e3c23be396bcfd0a4d5669
  Author Name: Mykyta Yatsenko
  Author Email: yatsenko@meta.com
  Commit Date: 1716938706
  Commit Message:
    libbpf: Configure log verbosity with env variable

Configure logging verbosity by setting LIBBPF_LOG_LEVEL environment
variable
  Parent Hashes: 4b3529edbb8ff069d762c6947e055e10c1748170
  Refs:  which is applied only to default logger. Once user set their
custom logging callback

- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'This commit adds the ability to configure logging verbosity in libbpf using an environment variable.', 'keywords': 'log verbosity, libbpf, environment', 'commit_classification': "It's a new feature.", 'commit_complexity': 'Simple, can be used without much configuration. For example, a simple helper function.', 'Major related component': 'The libbpf library', 'program_types_related': ["It's not related to any of the above."]}
--------------------
--------------------
Processing Commit ID: 4b3529edbb8ff069d762c6947e055e10c1748170
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: 4b3529edbb8ff069d762c6947e055e10c1748170
  Author Name: Jakub Kicinski
  Author Email: kuba@kernel.org
  Commit Date: 1716906449
  Commit Message:
    Merge tag 'for-netdev' of https://git.kernel.org/pub/scm/linux/kernel/git/bpf/bpf-next

Daniel Borkmann says:

====================
pull-request: bpf-next 2024-05-28

We've added 23 non-merge commits during the last 11 day(s) which contain
a total of 45 files changed
  Parent Hashes: c30ff5f3aec3f77e13cfd7373390639bfdcffba7 d9cbd8343b010016fcaabc361c37720dcafddcbe
  Refs:  696 insertions(+)

- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': "Merge tag 'for-netdev' from the bpf-next branch into the current branch.", 'keywords': 'merge, bpf-next, netdev', 'commit_classification': "It's other type of commit.", 'commit_complexity': 'Simple, can be used without much configuration. For example, a simple helper function.', 'Major related component': 'Other component related to eBPF but not listed above.', 'program_types_related': ["It's not related to any of the above."]}
--------------------
--------------------
Processing Commit ID: 4b4647add7d3c8530493f7247d11e257ee425bf0
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: 4b4647add7d3c8530493f7247d11e257ee425bf0
  Author Name: Thadeu Lima de Souza Cascardo
  Author Email: cascardo@igalia.com
  Commit Date: 1716890719
  Commit Message:
    sock_map: avoid race between sock_map_close and sk_psock_put

sk_psock_get will return NULL if the refcount of psock has gone to 0
  Parent Hashes: c519cf9b7434183bb56ed1e200ac577a5fd34d9b
  Refs:  which
will happen when the last call of sk_psock_put is done. However

- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'Fix potential race condition between sock_map_close and sk_psock_put functions.', 'keywords': 'race, sock_map, refcount', 'commit_classification': "It's a bug fix.", 'commit_complexity': 'Moderate, requires some setup or understanding of the system. For example, a new map type or a new link type.', 'Major related component': 'The eBPF maps', 'program_types_related': ['socket like programs']}
--------------------
--------------------
Processing Commit ID: d9cbd8343b010016fcaabc361c37720dcafddcbe
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: d9cbd8343b010016fcaabc361c37720dcafddcbe
  Author Name: yunshui
  Author Email: jiangyunshui@kylinos.cn
  Commit Date: 1716890651
  Commit Message:
    bpf
  Parent Hashes: e245ef8a0b06fa5a18ca3bdcf82430166419283e
  Refs:  net: Use DEV_STAT_INC()

syzbot/KCSAN reported that races happen when multiple CPUs updating
dev->stats.tx_error concurrently. Adopt SMP safe DEV_STATS_INC() to
update the dev->stats fields.

Reported-by: syzbot <syzkaller@googlegroups.com>
Signed-off-by: yunshui <jiangyunshui@kylinos.cn>
Signed-off-by: Daniel Borkmann <daniel@iogearbox.net>
Link: https://lore.kernel.org/bpf/20240523033520.4029314-1-jiangyunshui@kylinos.cn


- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'Fix race condition in network stats update using SMP safe DEV_STATS_INC().', 'keywords': 'race condition, SMP safe, DEV_STATS_INC', 'commit_classification': "It's a bug fix.", 'commit_complexity': 'Moderate, requires some setup or understanding of the system. For example, a new map type or a new link type.', 'Major related component': "It's not related to any of the above, it's not related to bpf subsystem in Linux kernel, may be wrong data.", 'program_types_related': ["It's not related to any of the above."]}
--------------------
--------------------
Processing Commit ID: 2786ae339ef504f480753b54219b65471aaf98e8
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: 2786ae339ef504f480753b54219b65471aaf98e8
  Author Name: Jakub Kicinski
  Author Email: kuba@kernel.org
  Commit Date: 1716852390
  Commit Message:
    Merge tag 'for-netdev' of https://git.kernel.org/pub/scm/linux/kernel/git/bpf/bpf

Daniel Borkmann says:

====================
pull-request: bpf 2024-05-27

We've added 15 non-merge commits during the last 7 day(s) which contain
a total of 18 files changed
  Parent Hashes: 52a2f0608366a629d43dacd3191039c95fef74ba a63bf556160fb19591183383da6757f52119981d
  Refs:  583 insertions(+)

- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': "Merged changes from the 'for-netdev' branch containing updates to the Linux kernel's BPF subsystem.", 'keywords': 'merge, bpf, netdev', 'commit_classification': "It's other type of commit.", 'commit_complexity': 'Moderate, requires some setup or understanding of the system. For example, a new map type or a new link type.', 'Major related component': 'Other component related to eBPF but not listed above.', 'program_types_related': ['It improves the overall eBPF infrastructure (e.g., verifier, runtime, etc.).']}
--------------------
--------------------
Processing Commit ID: a63bf556160fb19591183383da6757f52119981d
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: a63bf556160fb19591183383da6757f52119981d
  Author Name: Jakub Sitnicki
  Author Email: jakub@cloudflare.com
  Commit Date: 1716831266
  Commit Message:
    selftests/bpf: Cover verifier checks for mutating sockmap/sockhash

Verifier enforces that only certain program types can mutate sock{map
  Parent Hashes: 3b9ce0491a43e9af7f108b2f1bced7cd35931660
  Refs: hash}
maps

- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'Add self-tests for verifying sockmap and sockhash mutation rules in the eBPF verifier.', 'keywords': 'selftests, verifier, sockmap', 'commit_classification': "It's a test case or test infrastructure change.", 'commit_complexity': 'Moderate, requires some setup or understanding of the system. For example, a new map type or a new link type.', 'Major related component': 'The test cases and makefiles', 'program_types_related': ['It improves the overall eBPF infrastructure (e.g., verifier, runtime, etc.).', "It's not related to any of the above."]}
--------------------
--------------------
Processing Commit ID: 3b9ce0491a43e9af7f108b2f1bced7cd35931660
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: 3b9ce0491a43e9af7f108b2f1bced7cd35931660
  Author Name: Jakub Sitnicki
  Author Email: jakub@cloudflare.com
  Commit Date: 1716831265
  Commit Message:
    Revert "bpf
  Parent Hashes: 98e948fb60d41447fd8d2d0c3b8637fc6b6dc26d
  Refs:  sockmap: Prevent lock inversion deadlock in map delete elem"

This reverts commit ff91059932401894e6c86341915615c5eb0eca48.

This check is no longer needed. BPF programs attached to tracepoints are
now rejected by the verifier when they attempt to delete from a
sockmap/sockhash maps.

Signed-off-by: Jakub Sitnicki <jakub@cloudflare.com>
Signed-off-by: Daniel Borkmann <daniel@iogearbox.net>
Acked-by: John Fastabend <john.fastabend@gmail.com>
Link: https://lore.kernel.org/bpf/20240527-sockmap-verify-deletes-v1-2-944b372f2101@cloudflare.com


- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'Revert commit to remove unnecessary check for tracepoints in sockmap/sockhash operations.', 'keywords': 'revert, sockmap, tracepoints', 'commit_classification': "It's other type of commit.", 'commit_complexity': 'Simple, can be used without much configuration. For example, a simple helper function.', 'Major related component': 'The eBPF maps', 'program_types_related': ['tracepoints like programs']}
--------------------
--------------------
Processing Commit ID: 98e948fb60d41447fd8d2d0c3b8637fc6b6dc26d
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: 98e948fb60d41447fd8d2d0c3b8637fc6b6dc26d
  Author Name: Jakub Sitnicki
  Author Email: jakub@cloudflare.com
  Commit Date: 1716831220
  Commit Message:
    bpf: Allow delete from sockmap/sockhash only if update is allowed

We have seen an influx of syzkaller reports where a BPF program attached to
a tracepoint triggers a locking rule violation by performing a map_delete
on a sockmap/sockhash.

We don't intend to support this artificial use scenario. Extend the
existing verifier allowed-program-type check for updating sockmap/sockhash
to also cover deleting from a map.

From now on only BPF programs which were previously allowed to update
sockmap/sockhash can delete from these map types.

Fixes: ff9105993240 ("bpf
  Parent Hashes: 95348e463eabc803341c67d562f9e0a5f0a48fe6
  Refs:  sockmap: Prevent lock inversion deadlock in map delete elem")
Reported-by: Tetsuo Handa <penguin-kernel@i-love.sakura.ne.jp>
Reported-by: syzbot+ec941d6e24f633a59172@syzkaller.appspotmail.com
Signed-off-by: Jakub Sitnicki <jakub@cloudflare.com>
Signed-off-by: Daniel Borkmann <daniel@iogearbox.net>
Tested-by: syzbot+ec941d6e24f633a59172@syzkaller.appspotmail.com
Acked-by: John Fastabend <john.fastabend@gmail.com>
Closes: https://syzkaller.appspot.com/bug?extid=ec941d6e24f633a59172
Link: https://lore.kernel.org/bpf/20240527-sockmap-verify-deletes-v1-1-944b372f2101@cloudflare.com


- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'Enhance verifier to restrict sockmap/sockhash delete operations to permitted BPF program types to avoid locking rule violations.', 'keywords': 'sockmap,sockhash,locking', 'commit_classification': "It's a bug fix.", 'commit_complexity': 'Moderate, requires some setup or understanding of the system. For example, a new map type or a new link type.', 'Major related component': 'The eBPF verifier', 'program_types_related': ['tracepoints like programs']}
--------------------
--------------------
Processing Commit ID: e245ef8a0b06fa5a18ca3bdcf82430166419283e
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: e245ef8a0b06fa5a18ca3bdcf82430166419283e
  Author Name: Dave Thaler
  Author Email: dthaler1968@googlemail.com
  Commit Date: 1716742722
  Commit Message:
    bpf
  Parent Hashes: f980f13e4eb299abba6692365315196e1ba6fd2c
  Refs:  docs: Fix instruction.rst indentation

The table captions patch corrected indented most tables to work with
the table directive for adding a caption but missed two of them.

Signed-off-by: Dave Thaler <dthaler1968@gmail.com>
Reviewed-by: Christoph Hellwig <hch@lst.de>
Link: https://lore.kernel.org/r/20240526061815.22497-1-dthaler1968@gmail.com
Signed-off-by: Alexei Starovoitov <ast@kernel.org>


- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'Fix indentation issues in instruction.rst table captions for proper rendering.', 'keywords': 'indentation, documentation, table', 'commit_classification': "It's a documentation change or typo fix.", 'commit_complexity': 'Simple, can be used without much configuration. For example, a simple helper function.', 'Major related component': 'Other component related to eBPF but not listed above.', 'program_types_related': ["It's not related to any of the above."]}
--------------------
--------------------
Processing Commit ID: 2313022ec5942e3ddd2e4e57002ed71926887f87
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: 2313022ec5942e3ddd2e4e57002ed71926887f87
  Author Name: Linus Torvalds
  Author Email: torvalds@linux-foundation.org
  Commit Date: 1716668268
  Commit Message:
    Merge tag 'uml-for-linus-6.10-rc1' of git://git.kernel.org/pub/scm/linux/kernel/git/uml/linux

Pull UML updates from Richard Weinberger:

 - Fixes for -Wmissing-prototypes warnings and further cleanup

 - Remove callback returning void from rtc and virtio drivers

 - Fix bash location

* tag 'uml-for-linus-6.10-rc1' of git://git.kernel.org/pub/scm/linux/kernel/git/uml/linux: (26 commits)
  um: virtio_uml: Convert to platform remove callback returning void
  um: rtc: Convert to platform remove callback returning void
  um: Remove unused do_get_thread_area function
  um: Fix -Wmissing-prototypes warnings for __vdso_*
  um: Add an internal header shared among the user code
  um: Fix the declaration of kasan_map_memory
  um: Fix the -Wmissing-prototypes warning for get_thread_reg
  um: Fix the -Wmissing-prototypes warning for __switch_mm
  um: Fix -Wmissing-prototypes warnings for (rt_)sigreturn
  um: Stop tracking host PID in cpu_tasks
  um: process: remove unused 'n' variable
  um: vector: remove unused len variable/calculation
  um: vector: fix bpfflash parameter evaluation
  um: slirp: remove set but unused variable 'pid'
  um: signal: move pid variable where needed
  um: Makefile: use bash from the environment
  um: Add winch to winch_handlers before registering winch IRQ
  um: Fix -Wmissing-prototypes warnings for __warp_* and foo
  um: Fix -Wmissing-prototypes warnings for text_poke*
  um: Move declarations to proper headers
  ...

  Parent Hashes: 56fb6f92854f29dcb6c3dc3ba92eeda1b615e88c 919e3ece7f5aaf7b5f3c54538d5303b6eeeb053b
  Refs: 

- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'Merged UML updates focusing on cleanup and fixing -Wmissing-prototypes warnings from the Linux kernel.', 'keywords': 'UML, cleanup, warnings', 'commit_classification': "It's a cleanup or refactoring in the code.", 'commit_complexity': 'Moderate, requires some setup or understanding of the system. For example, a new map type or a new link type.', 'Major related component': 'Other component related to eBPF but not listed above.', 'program_types_related': ["It's not related to any of the above."]}
--------------------
--------------------
Processing Commit ID: 95348e463eabc803341c67d562f9e0a5f0a48fe6
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: 95348e463eabc803341c67d562f9e0a5f0a48fe6
  Author Name: Daniel Borkmann
  Author Email: daniel@iogearbox.net
  Commit Date: 1716659591
  Commit Message:
    selftests/bpf: Add netkit test for pkt_type

Add a test case to assert that the skb->pkt_type which was set from the BPF
program is retained from the netkit xmit side to the peer's device at tcx
ingress location.

  # ./vmtest.sh -- ./test_progs -t netkit
  [...]
  ./test_progs -t netkit
  [    1.140780] bpf_testmod: loading out-of-tree module taints kernel.
  [    1.141127] bpf_testmod: module verification failed: signature and/or required key missing - tainting kernel
  [    1.284601] tsc: Refined TSC clocksource calibration: 3408.006 MHz
  [    1.286672] clocksource: tsc: mask: 0xffffffffffffffff max_cycles: 0x311fd9b189d
  Parent Hashes: 998ffeb2738e26f134dc8e63b5dcaece22573957
  Refs:  max_idle_ns: 440795225691 ns
  [    1.290384] clocksource: Switched to clocksource tsc
  #345     tc_netkit_basic:OK
  #346     tc_netkit_device:OK
  #347     tc_netkit_multi_links:OK
  #348     tc_netkit_multi_opts:OK
  #349     tc_netkit_neigh_links:OK
  #350     tc_netkit_pkt_type:OK
  Summary: 6/0 PASSED

- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'This commit adds a test for verifying pkt_type in BPF netkit selftests.', 'keywords': 'selftests,netkit,pkt_type', 'commit_classification': "It's a test case or test infrastructure change.", 'commit_complexity': 'Moderate, requires some setup or understanding of the system. For example, a new map type or a new link type.', 'Major related component': 'The test cases and makefiles', 'program_types_related': ['It improves the overall eBPF infrastructure (e.g., verifier, runtime, etc.).']}
--------------------
--------------------
Processing Commit ID: 998ffeb2738e26f134dc8e63b5dcaece22573957
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: 998ffeb2738e26f134dc8e63b5dcaece22573957
  Author Name: Daniel Borkmann
  Author Email: daniel@iogearbox.net
  Commit Date: 1716659337
  Commit Message:
    selftests/bpf: Add netkit tests for mac address

This adds simple tests around setting MAC addresses in the different
netkit modes.

Signed-off-by: Daniel Borkmann <daniel@iogearbox.net>
Link: https://lore.kernel.org/r/20240524163619.26001-3-daniel@iogearbox.net
Signed-off-by: Alexei Starovoitov <ast@kernel.org>

  Parent Hashes: 3998d184267dfcff858aaa84d3de17429253629d
  Refs: 

- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'The commit adds selftests for netkit involving MAC address settings.', 'keywords': 'selftests, netkit, MAC', 'commit_classification': "It's a test case or test infrastructure change.", 'commit_complexity': 'Simple, can be used without much configuration. For example, a simple helper function.', 'Major related component': 'The test cases and makefiles', 'program_types_related': ['other']}
--------------------
--------------------
Processing Commit ID: 3998d184267dfcff858aaa84d3de17429253629d
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: 3998d184267dfcff858aaa84d3de17429253629d
  Author Name: Daniel Borkmann
  Author Email: daniel@iogearbox.net
  Commit Date: 1716659337
  Commit Message:
    netkit: Fix pkt_type override upon netkit pass verdict

When running Cilium connectivity test suite with netkit in L2 mode
  Parent Hashes: d6fe532b7499e4575f9647879b7a34625817fe7f
  Refs:  we
found that compared to tcx a few tests were failing which pushed traffic
into an L7 proxy sitting in host namespace. The problem in particular is
around the invocation of eth_type_trans() in netkit.

In case of tcx

- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'Fixes pkt_type override issue in netkit affecting connectivity tests with traffic directed to L7 proxy.', 'keywords': 'netkit, pkt_type, Cilium', 'commit_classification': "It's a bug fix.", 'commit_complexity': 'Moderate, requires some setup or understanding of the system. For example, a new map type or a new link type.', 'Major related component': 'Other component related to eBPF but not listed above.', 'program_types_related': ["It's not related to any of the above."]}
--------------------
--------------------
Processing Commit ID: d6fe532b7499e4575f9647879b7a34625817fe7f
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: d6fe532b7499e4575f9647879b7a34625817fe7f
  Author Name: Daniel Borkmann
  Author Email: daniel@iogearbox.net
  Commit Date: 1716659337
  Commit Message:
    netkit: Fix setting mac address in l2 mode

When running Cilium connectivity test suite with netkit in L2 mode
  Parent Hashes: dd6a403795f0c7b5c566f86f2ee6b687278d3c1c
  Refs:  we
found that it is expected to be able to specify a custom MAC address for
the devices

- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'The commit fixes the issue of setting MAC addresses in Netkit when in L2 mode for Cilium connectivity tests.', 'keywords': 'Netkit, MAC address, L2 mode', 'commit_classification': "It's a bug fix.", 'commit_complexity': 'Simple, can be used without much configuration. For example, a simple helper function.', 'Major related component': 'Other component related to eBPF but not listed above.', 'program_types_related': ['other']}
--------------------
--------------------
Processing Commit ID: dd6a403795f0c7b5c566f86f2ee6b687278d3c1c
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: dd6a403795f0c7b5c566f86f2ee6b687278d3c1c
  Author Name: Shahab Vahedi
  Author Email: shahab@synopsys.com
  Commit Date: 1716659241
  Commit Message:
    ARC
  Parent Hashes: 590016ad83de770153a09151336d95544d6bd7ad
  Refs:  bpf: Fix issues reported by the static analyzers

Also updated couple of comments along the way.

One of the issues reported was indeed a bug in the code:

  memset(ctx

- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'This commit fixes issues reported by static analyzers, including a bug in the code, and updates some comments.', 'keywords': 'bug, static analyzers, comments', 'commit_classification': "It's a bug fix.", 'commit_complexity': 'Moderate, requires some setup or understanding of the system. For example, a new map type or a new link type.', 'Major related component': 'Other component related to eBPF but not listed above.', 'program_types_related': ["It's not related to any of the above."]}
--------------------
--------------------
Processing Commit ID: 590016ad83de770153a09151336d95544d6bd7ad
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: 590016ad83de770153a09151336d95544d6bd7ad
  Author Name: Alexei Starovoitov
  Author Email: ast@kernel.org
  Commit Date: 1716659163
  Commit Message:
    Merge branch 'fix-bpf-multi-uprobe-pid-filtering-logic'

Andrii Nakryiko says:

====================
Fix BPF multi-uprobe PID filtering logic

It turns out that current implementation of multi-uprobe PID filtering logic
is broken. It filters by thread
  Parent Hashes: 44382b3ed6b2787710c8ade06c0e97f5970a47c8 198034a87dfeb64d5a8359a5089022c6b923646e
  Refs:  while the promise is filtering by process.
Patch #1 fixes the logic trivially. The rest is testing and mitigations that
are necessary for libbpf to not break users of USDT programs.

v1->v2:
  - fix selftest in last patch (CI);
  - use semicolon in patch #3 (Jiri).
====================

Link: https://lore.kernel.org/r/20240521163401.3005045-1-andrii@kernel.org
Signed-off-by: Alexei Starovoitov <ast@kernel.org>


- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'Fixes BPF multi-uprobe PID filtering logic from filtering by thread to filtering by process.', 'keywords': 'BPF, uprobe, filtering', 'commit_classification': "It's a bug fix.", 'commit_complexity': 'Moderate, requires some setup or understanding of the system. For example, a new map type or a new link type.', 'Major related component': 'The libbpf library', 'program_types_related': ['kprobe/uprobe/ftrace like programs']}
--------------------
--------------------
Processing Commit ID: 198034a87dfeb64d5a8359a5089022c6b923646e
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: 198034a87dfeb64d5a8359a5089022c6b923646e
  Author Name: Andrii Nakryiko
  Author Email: andrii@kernel.org
  Commit Date: 1716659162
  Commit Message:
    selftests/bpf: extend multi-uprobe tests with USDTs

Validate libbpf's USDT-over-multi-uprobe logic by adding USDTs to
existing multi-uprobe tests. This checks correct libbpf fallback to
singular uprobes (when run on older kernels with buggy PID filtering).
We reuse already established child process and child thread testing
infrastructure
  Parent Hashes: 70342420a1cf1173bdec456e5fa574a804e422db
  Refs:  so additions are minimal. These test fail on either
older kernels or older version of libbpf that doesn't detect PID
filtering problems.

Acked-by: Jiri Olsa <jolsa@kernel.org>
Signed-off-by: Andrii Nakryiko <andrii@kernel.org>
Link: https://lore.kernel.org/r/20240521163401.3005045-6-andrii@kernel.org
Signed-off-by: Alexei Starovoitov <ast@kernel.org>


- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': "Enhanced multi-uprobe tests with USDTs to validate libbpf's logic and improve testing on older kernels.", 'keywords': 'multi-uprobe, USDTs, libbpf', 'commit_classification': "It's a test case or test infrastructure change.", 'commit_complexity': 'Moderate, requires some setup or understanding of the system. For example, a new map type or a new link type.', 'Major related component': 'The test cases and makefiles', 'program_types_related': ['tracepoints like programs']}
--------------------
--------------------
Processing Commit ID: 70342420a1cf1173bdec456e5fa574a804e422db
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: 70342420a1cf1173bdec456e5fa574a804e422db
  Author Name: Andrii Nakryiko
  Author Email: andrii@kernel.org
  Commit Date: 1716659162
  Commit Message:
    selftests/bpf: extend multi-uprobe tests with child thread case

Extend existing multi-uprobe tests to test that PID filtering works
correctly. We already have child *process* tests
  Parent Hashes: 04d939a2ab229a3821f04fc81f7c027842f501f1
  Refs:  but we need also child
*thread* tests. This patch adds spawn_thread() helper to start child
thread

- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'Extend multi-uprobe tests to include PID filtering for child threads.', 'keywords': 'multi-uprobe,PIDs,threads', 'commit_classification': "It's a test case or test infrastructure change.", 'commit_complexity': 'Moderate, requires some setup or understanding of the system. For example, a new map type or a new link type.', 'Major related component': 'The test cases and makefiles', 'program_types_related': ['kprobe/uprobe/ftrace like programs']}
--------------------
--------------------
Processing Commit ID: 04d939a2ab229a3821f04fc81f7c027842f501f1
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: 04d939a2ab229a3821f04fc81f7c027842f501f1
  Author Name: Andrii Nakryiko
  Author Email: andrii@kernel.org
  Commit Date: 1716659162
  Commit Message:
    libbpf: detect broken PID filtering logic for multi-uprobe

Libbpf is automatically (and transparently to user) detecting
multi-uprobe support in the kernel
  Parent Hashes: 4a8f635a60540888dab3804992e86410360339c8
  Refs:  and

- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'Libbpf now detects broken PID filtering logic for multi-uprobe support in the kernel.', 'keywords': 'libbpf,multi-uprobe,PID-filtering', 'commit_classification': "It's a bug fix.", 'commit_complexity': 'Moderate, requires some setup or understanding of the system. For example, a new map type or a new link type.', 'Major related component': 'The libbpf library', 'program_types_related': ['kprobe/uprobe/ftrace like programs']}
--------------------
--------------------
Processing Commit ID: 4a8f635a60540888dab3804992e86410360339c8
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: 4a8f635a60540888dab3804992e86410360339c8
  Author Name: Andrii Nakryiko
  Author Email: andrii@kernel.org
  Commit Date: 1716659162
  Commit Message:
    bpf: remove unnecessary rcu_read_{lock
  Parent Hashes: 46ba0e49b64232adac35a2bc892f1710c5b0fb7f
  Refs: unlock}() in multi-uprobe attach logic

get_pid_task() internally already calls rcu_read_lock() and
rcu_read_unlock()

- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'Removed redundant RCU read locks in the multi-uprobe attach logic for bpf.', 'keywords': 'bpf, RCU, uprobe', 'commit_classification': "It's a cleanup or refactoring in the code.", 'commit_complexity': 'Simple, can be used without much configuration. For example, a simple helper function.', 'Major related component': 'The attach events and bpf link. e.g. perf events, tracepoints, etc.', 'program_types_related': ['kprobe/uprobe/ftrace like programs']}
--------------------
--------------------
Processing Commit ID: 46ba0e49b64232adac35a2bc892f1710c5b0fb7f
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: 46ba0e49b64232adac35a2bc892f1710c5b0fb7f
  Author Name: Andrii Nakryiko
  Author Email: andrii@kernel.org
  Commit Date: 1716659162
  Commit Message:
    bpf: fix multi-uprobe PID filtering logic

Current implementation of PID filtering logic for multi-uprobes in
uprobe_prog_run() is filtering down to exact *thread*
  Parent Hashes: 44382b3ed6b2787710c8ade06c0e97f5970a47c8
  Refs:  while the intent
for PID filtering it to filter by *process* instead. The check in
uprobe_prog_run() also differs from the analogous one in
uprobe_multi_link_filter() for some reason. The latter is correct

- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'Fix process PID filtering logic for multi-uprobes in the uprobe_prog_run function.', 'keywords': 'PID filtering, multi-uprobes, logic', 'commit_classification': "It's a bug fix.", 'commit_complexity': 'Moderate, requires some setup or understanding of the system. For example, a new map type or a new link type.', 'Major related component': 'Other component related to eBPF but not listed above.', 'program_types_related': ['kprobe/uprobe/ftrace like programs']}
--------------------
--------------------
Processing Commit ID: f980f13e4eb299abba6692365315196e1ba6fd2c
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: f980f13e4eb299abba6692365315196e1ba6fd2c
  Author Name: Dave Thaler
  Author Email: dthaler1968@googlemail.com
  Commit Date: 1716658917
  Commit Message:
    bpf
  Parent Hashes: 6a6d8b6f00ade597e0030669fae3fdf57cfba33b
  Refs:  docs: Clarify call local offset

In the Jump instructions section it explains that the offset is
"relative to the instruction following the jump instruction".
But the program-local section confusingly said "referenced by
offset from the call instruction

- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'Clarifies documentation on offset referencing in program-local section for BPF jump and call instructions.', 'keywords': 'documentation, offset, jump', 'commit_classification': "It's a documentation change or typo fix.", 'commit_complexity': 'Simple, can be used without much configuration. For example, a simple helper function.', 'Major related component': 'Other component related to eBPF but not listed above.', 'program_types_related': ["It's not related to any of the above."]}
--------------------
--------------------
Processing Commit ID: 6a6d8b6f00ade597e0030669fae3fdf57cfba33b
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: 6a6d8b6f00ade597e0030669fae3fdf57cfba33b
  Author Name: Dave Thaler
  Author Email: dthaler1968@googlemail.com
  Commit Date: 1716658771
  Commit Message:
    bpf
  Parent Hashes: 4e1215d9a1903fc9e976aa8903674d050c7af5ff
  Refs:  docs: Add table captions

As suggested by Ines Robles in his IETF GENART review at
https://datatracker.ietf.org/doc/review-ietf-bpf-isa-02-genart-lc-robles-2024-05-16/

Signed-off-by: Dave Thaler <dthaler1968@gmail.com>
Link: https://lore.kernel.org/r/20240524164618.18894-1-dthaler1968@gmail.com
Signed-off-by: Alexei Starovoitov <ast@kernel.org>


- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'The commit adds table captions to documentation as per an IETF GENART review suggestion.', 'keywords': 'table captions, documentation, review', 'commit_classification': "It's a documentation change or typo fix.", 'commit_complexity': 'Simple, can be used without much configuration. For example, a simple helper function.', 'Major related component': "It's not related to any of the above, it's not related to bpf subsystem in Linux kernel, may be wrong data.", 'program_types_related': ["It's not related to any of the above."]}
--------------------
--------------------
Processing Commit ID: 4e1215d9a1903fc9e976aa8903674d050c7af5ff
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: 4e1215d9a1903fc9e976aa8903674d050c7af5ff
  Author Name: Dave Thaler
  Author Email: dthaler1968@googlemail.com
  Commit Date: 1716658743
  Commit Message:
    bpf
  Parent Hashes: a985fdca5e7e665d58dc40c92a67c8b67b6291db
  Refs:  docs: clarify sign extension of 64-bit use of 32-bit imm

imm is defined as a 32-bit signed integer.

{MOV

- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'Clarify documentation regarding sign extension of 64-bit use of 32-bit immediate values.', 'keywords': 'sign extension, 64-bit, documentation', 'commit_classification': "It's a documentation change or typo fix.", 'commit_complexity': 'Simple, can be used without much configuration. For example, a simple helper function.', 'Major related component': 'Other component related to eBPF but not listed above.', 'program_types_related': ['It improves the overall eBPF infrastructure (e.g., verifier, runtime, etc.).']}
--------------------
--------------------
Processing Commit ID: a985fdca5e7e665d58dc40c92a67c8b67b6291db
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: a985fdca5e7e665d58dc40c92a67c8b67b6291db
  Author Name: Dave Thaler
  Author Email: dthaler1968@googlemail.com
  Commit Date: 1716658715
  Commit Message:
    bpf
  Parent Hashes: 4652072e7b9d643edc9ebb04e3e2c021461b7af0
  Refs:  docs: Use RFC 2119 language for ISA requirements

Per IETF convention and discussion at LSF/MM/BPF

- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'Update documentation to use RFC 2119 language for ISA requirements.', 'keywords': 'documentation, RFC 2119, ISA', 'commit_classification': "It's a documentation change or typo fix.", 'commit_complexity': 'Simple, can be used without much configuration. For example, a simple helper function.', 'Major related component': "It's not related to any of the above, it's not related to bpf subsystem in Linux kernel, may be wrong data.", 'program_types_related': ["It's not related to any of the above."]}
--------------------
--------------------
Processing Commit ID: 4652072e7b9d643edc9ebb04e3e2c021461b7af0
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: 4652072e7b9d643edc9ebb04e3e2c021461b7af0
  Author Name: Dave Thaler
  Author Email: dthaler1968@googlemail.com
  Commit Date: 1716658669
  Commit Message:
    bpf
  Parent Hashes: 2c1713a8f1c94033a6e00aae4693ab03e8a3b9f1
  Refs:  docs: Move sentence about returning R0 to abi.rst

As discussed at LSF/MM/BPF

- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'Moved documentation sentence about returning R0 to abi.rst in bpf.', 'keywords': 'documentation, returning, R0', 'commit_classification': "It's a documentation change or typo fix.", 'commit_complexity': 'Simple, can be used without much configuration. For example, a simple helper function.', 'Major related component': "It's not related to any of the above, it's not related to bpf subsystem in Linux kernel, may be wrong data.", 'program_types_related': ["It's not related to any of the above."]}
--------------------
--------------------
Processing Commit ID: b1480ed230acf4f7f069a7f5e3ddda62bbf4ba97
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: b1480ed230acf4f7f069a7f5e3ddda62bbf4ba97
  Author Name: Will Deacon
  Author Email: will@kernel.org
  Commit Date: 1716576906
  Commit Message:
    arm64: patching: fix handling of execmem addresses

Klara Modin reported warnings for a kernel configured with BPF_JIT but
without MODULES:

[   44.131296] Trying to vfree() bad address (000000004a17c299)
[   44.138024] WARNING: CPU: 1 PID: 193 at mm/vmalloc.c:3189 remove_vm_area (mm/vmalloc.c:3189 (discriminator 1))
[   44.146675] CPU: 1 PID: 193 Comm: kworker/1:2 Tainted: G      D W          6.9.0-01786-g2c9e5d4a0082 #25
[   44.158229] Hardware name: Raspberry Pi 3 Model B (DT)
[   44.164433] Workqueue: events bpf_prog_free_deferred
[   44.170492] pstate: 60000005 (nZCv daif -PAN -UAO -TCO -DIT -SSBS BTYPE=--)
[   44.178601] pc : remove_vm_area (mm/vmalloc.c:3189 (discriminator 1))
[   44.183705] lr : remove_vm_area (mm/vmalloc.c:3189 (discriminator 1))
[   44.188772] sp : ffff800082a13c70
[   44.193112] x29: ffff800082a13c70 x28: 0000000000000000 x27: 0000000000000000
[   44.201384] x26: 0000000000000000 x25: ffff00003a44efa0 x24: 00000000d4202000
[   44.209658] x23: ffff800081223dd0 x22: ffff00003a198a40 x21: ffff8000814dd880
[   44.217924] x20: 00000000d4202000 x19: ffff8000814dd880 x18: 0000000000000006
[   44.226206] x17: 0000000000000000 x16: 0000000000000020 x15: 0000000000000002
[   44.234460] x14: ffff8000811a6370 x13: 0000000020000000 x12: 0000000000000000
[   44.242710] x11: ffff8000811a6370 x10: 0000000000000144 x9 : ffff8000811fe370
[   44.250959] x8 : 0000000000017fe8 x7 : 00000000fffff000 x6 : ffff8000811fe370
[   44.259206] x5 : 0000000000000000 x4 : 0000000000000000 x3 : 0000000000000000
[   44.267457] x2 : 0000000000000000 x1 : 0000000000000000 x0 : ffff000002203240
[   44.275703] Call trace:
[   44.279158] remove_vm_area (mm/vmalloc.c:3189 (discriminator 1))
[   44.283858] vfree (mm/vmalloc.c:3322)
[   44.287835] execmem_free (mm/execmem.c:70)
[   44.292347] bpf_jit_free_exec+0x10/0x1c
[   44.297283] bpf_prog_pack_free (kernel/bpf/core.c:1006)
[   44.302457] bpf_jit_binary_pack_free (kernel/bpf/core.c:1195)
[   44.307951] bpf_jit_free (include/linux/filter.h:1083 arch/arm64/net/bpf_jit_comp.c:2474)
[   44.312342] bpf_prog_free_deferred (kernel/bpf/core.c:2785)
[   44.317785] process_one_work (kernel/workqueue.c:3273)
[   44.322684] worker_thread (kernel/workqueue.c:3342 (discriminator 2) kernel/workqueue.c:3429 (discriminator 2))
[   44.327292] kthread (kernel/kthread.c:388)
[   44.331342] ret_from_fork (arch/arm64/kernel/entry.S:861)

The problem is because bpf_arch_text_copy() silently fails to write to the
read-only area as a result of patch_map() faulting and the resulting
-EFAULT being chucked away.

Update patch_map() to use CONFIG_EXECMEM instead of
CONFIG_STRICT_MODULE_RWX to check for vmalloc addresses.

Link: https://lkml.kernel.org/r/20240521213813.703309-1-rppt@kernel.org
Fixes: 2c9e5d4a0082 ("bpf: remove CONFIG_BPF_JIT dependency on CONFIG_MODULES of")
Signed-off-by: Will Deacon <will@kernel.org>
Signed-off-by: Mike Rapoport (IBM) <rppt@kernel.org>
Reported-by: Klara Modin <klarasmodin@gmail.com>
Closes: https://lore.kernel.org/all/7983fbbf-0127-457c-9394-8d6e4299c685@gmail.com
Tested-by: Klara Modin <klarasmodin@gmail.com>
Cc: Björn Töpel <bjorn@kernel.org>
Cc: Luis Chamberlain <mcgrof@kernel.org>
Signed-off-by: Andrew Morton <akpm@linux-foundation.org>

  Parent Hashes: fb9293b6b0156fbf6ab97a1625d99a29c36d9f0c
  Refs: 

- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'Fix handling of execmem addresses in arm64 patching to address a BPF_JIT warning when configured without modules.', 'keywords': 'arm64, execmem, BPF_JIT', 'commit_classification': "It's a bug fix.", 'commit_complexity': 'Moderate, requires some setup or understanding of the system. For example, a new map type or a new link type.', 'Major related component': 'The JIT compiler', 'program_types_related': ['It improves the overall eBPF infrastructure (e.g., verifier, runtime, etc.).']}
--------------------
--------------------
Processing Commit ID: 2c1713a8f1c94033a6e00aae4693ab03e8a3b9f1
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: 2c1713a8f1c94033a6e00aae4693ab03e8a3b9f1
  Author Name: Thomas Weißschuh
  Author Email: linux@weissschuh.net
  Commit Date: 1716565472
  Commit Message:
    bpf: constify member bpf_sysctl_kern:: Table

The sysctl core is preparing to only expose instances of struct ctl_table
as "const". This will also affect the ctl_table argument of sysctl handlers
  Parent Hashes: 99fa63d9ca60c4c1cc843fde205e4bc6e86b218f
  Refs: 
for which bpf_sysctl_kern::table is also used.

As the function prototype of all sysctl handlers throughout the tree
needs to stay consistent that change will be done in one commit.

To reduce the size of that final commit

- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'The commit modifies bpf_sysctl_kern to constify the table parameter in preparation for changes to sysctl handler consistency.', 'keywords': 'bpf_sysctl_kern,constify,sysctl', 'commit_classification': "It's a cleanup or refactoring in the code.", 'commit_complexity': 'Simple, can be used without much configuration. For example, a simple helper function.', 'Major related component': 'The syscall interface', 'program_types_related': ["It's not related to any of the above."]}
--------------------
--------------------
Processing Commit ID: 99fa63d9ca60c4c1cc843fde205e4bc6e86b218f
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: 99fa63d9ca60c4c1cc843fde205e4bc6e86b218f
  Author Name: Xiao Wang
  Author Email: xiao.w.wang@intel.com
  Commit Date: 1716565233
  Commit Message:
    riscv
  Parent Hashes: e944fc8152744a41dc62e720995538e48b053bb9
  Refs:  bpf: Try RVC for reg move within BPF_CMPXCHG JIT

We could try to emit compressed insn for reg move operation during CMPXCHG
JIT

- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'The commit attempts to emit compressed instructions for register move operations during CMPXCHG JIT for RISC-V architecture.', 'keywords': 'RISC-V,compressed,insn', 'commit_classification': "It's a performance optimization.", 'commit_complexity': 'Moderate, requires some setup or understanding of the system. For example, a new map type or a new link type.', 'Major related component': 'The JIT compiler', 'program_types_related': ['It improves the overall eBPF infrastructure (e.g., verifier, runtime, etc.).']}
--------------------
--------------------
Processing Commit ID: e944fc8152744a41dc62e720995538e48b053bb9
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: e944fc8152744a41dc62e720995538e48b053bb9
  Author Name: Xiao Wang
  Author Email: xiao.w.wang@intel.com
  Commit Date: 1716563816
  Commit Message:
    riscv
  Parent Hashes: c12603e76ef666ce5c51a9d6faf155c9e3de7601
  Refs:  bpf: Use STACK_ALIGN macro for size rounding up

Use the macro STACK_ALIGN that is defined in asm/processor.h for stack size
rounding up

- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'The commit utilizes the STACK_ALIGN macro for stack size rounding up in the RISC-V architecture.', 'keywords': 'STACK_ALIGN, stack, RISC-V', 'commit_classification': "It's a performance optimization.", 'commit_complexity': 'Simple, can be used without much configuration. For example, a simple helper function.', 'Major related component': 'The JIT compiler', 'program_types_related': ['It improves the overall eBPF infrastructure (e.g., verifier, runtime, etc.).']}
--------------------
--------------------
Processing Commit ID: 44382b3ed6b2787710c8ade06c0e97f5970a47c8
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: 44382b3ed6b2787710c8ade06c0e97f5970a47c8
  Author Name: Friedrich Vock
  Author Email: friedrich.vock@gmx.de
  Commit Date: 1716563532
  Commit Message:
    bpf: Fix potential integer overflow in resolve_btfids

err is a 32-bit integer
  Parent Hashes: 8d00547ea8754afdc4a550af2fb7af2e3ba93cf8
  Refs:  but elf_update returns an off_t

- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'Fix potential integer overflow in resolve_btfids function.', 'keywords': 'integer,overflow,resolve_btfids', 'commit_classification': "It's a bug fix.", 'commit_complexity': 'Simple, can be used without much configuration. For example, a simple helper function.', 'Major related component': 'The BPF Type Format (BTF)', 'program_types_related': ['It improves the overall eBPF infrastructure (e.g., verifier, runtime, etc.).']}
--------------------
--------------------
Processing Commit ID: c12603e76ef666ce5c51a9d6faf155c9e3de7601
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: c12603e76ef666ce5c51a9d6faf155c9e3de7601
  Author Name: Xiao Wang
  Author Email: xiao.w.wang@intel.com
  Commit Date: 1716562392
  Commit Message:
    riscv
  Parent Hashes: ecec1887e24f11a3fcc391aa0f33fe0802be0804
  Refs:  bpf: Optimize zextw insn with Zba extension

The Zba extension provides add.uw insn which can be used to implement
zext.w with rs2 set as ZERO.

Signed-off-by: Xiao Wang <xiao.w.wang@intel.com>
Signed-off-by: Daniel Borkmann <daniel@iogearbox.net>
Tested-by: Pu Lehui <pulehui@huawei.com>
Reviewed-by: Andrew Jones <ajones@ventanamicro.com>
Reviewed-by: Pu Lehui <pulehui@huawei.com>
Link: https://lore.kernel.org/bpf/20240516090430.493122-1-xiao.w.wang@intel.com


- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'Optimize zextw instruction with Zba extension for RISC-V architecture.', 'keywords': 'Zba extension,zextw,RISC-V', 'commit_classification': "It's a performance optimization.", 'commit_complexity': 'Moderate, requires some setup or understanding of the system. For example, a new map type or a new link type.', 'Major related component': 'The JIT compiler', 'program_types_related': ['It improves the overall eBPF infrastructure (e.g., verifier, runtime, etc.).']}
--------------------
--------------------
Processing Commit ID: ecec1887e24f11a3fcc391aa0f33fe0802be0804
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: ecec1887e24f11a3fcc391aa0f33fe0802be0804
  Author Name: Martin KaFai Lau
  Author Email: martin.lau@kernel.org
  Commit Date: 1716498890
  Commit Message:
    Merge branch 'Replace mono_delivery_time with tstamp_type'

Abhishek Chauhan says:

====================
Patch 1 :- This patch takes care of only renaming the mono delivery
timestamp to tstamp_type with no change in functionality of
existing available code in kernel also
Starts assigning tstamp_type with either mono or real and
introduces a new enum in the skbuff.h
  Parent Hashes: a87f34e742d279d54d529e4bc4763fdaab32a466 c34e3ab2a76e6a55a64e0d56acc5607062c2bad9
  Refs:  again no change in functionality
of the existing available code in kernel 

- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'Renames mono delivery timestamp to tstamp_type without changing functionality in the kernel.', 'keywords': 'rename,tstamp_type,enum', 'commit_classification': "It's a cleanup or refactoring in the code.", 'commit_complexity': 'Simple, can be used without much configuration. For example, a simple helper function.', 'Major related component': 'Other component related to eBPF but not listed above.', 'program_types_related': ["It's not related to any of the above."]}
--------------------
--------------------
Processing Commit ID: c34e3ab2a76e6a55a64e0d56acc5607062c2bad9
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: c34e3ab2a76e6a55a64e0d56acc5607062c2bad9
  Author Name: Abhishek Chauhan
  Author Email: quic_abchauha@quicinc.com
  Commit Date: 1716498883
  Commit Message:
    selftests/bpf: Handle forwarding of UDP CLOCK_TAI packets

With changes in the design to forward CLOCK_TAI in the skbuff
framework
  Parent Hashes: 1693c5db6ab8262e6f5263f9d211855959aa5acd
  Refs:   existing selftest framework needs modification
to handle forwarding of UDP packets with CLOCK_TAI as clockid.

Signed-off-by: Abhishek Chauhan <quic_abchauha@quicinc.com>
Reviewed-by: Martin KaFai Lau <martin.lau@kernel.org>
Link: https://lore.kernel.org/r/20240509211834.3235191-4-quic_abchauha@quicinc.com
Signed-off-by: Martin KaFai Lau <martin.lau@kernel.org>


- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'Modified selftests/bpf to handle forwarding of UDP packets with CLOCK_TAI in the skbuff framework.', 'keywords': 'selftests, UDP, CLOCK_TAI', 'commit_classification': "It's a test case or test infrastructure change.", 'commit_complexity': 'Moderate, requires some setup or understanding of the system. For example, a new map type or a new link type.', 'Major related component': 'The test cases and makefiles', 'program_types_related': ['socket like programs']}
--------------------
--------------------
Processing Commit ID: a87f34e742d279d54d529e4bc4763fdaab32a466
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: a87f34e742d279d54d529e4bc4763fdaab32a466
  Author Name: Brad Cowie
  Author Email: brad@faucet.nz
  Commit Date: 1716415256
  Commit Message:
    selftests/bpf: Update tests for new ct zone opts for nf_conntrack kfuncs

Add test for allocating and looking up ct entry in a
non-default ct zone with kfuncs bpf_{xdp
  Parent Hashes: ece4b296904167336d0aaab26bd7122018835202
  Refs: skb}_ct_alloc
and bpf_{xdp

- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'This commit updates self-tests for new connection tracking zone options in nf_conntrack kfuncs.', 'keywords': 'self-tests, nf_conntrack, kfuncs', 'commit_classification': "It's a test case or test infrastructure change.", 'commit_complexity': 'Moderate, requires some setup or understanding of the system. For example, a new map type or a new link type.', 'Major related component': 'The helper and kfuncs', 'program_types_related': ['xdp like programs', 'tc/netfilter like programs']}
--------------------
--------------------
Processing Commit ID: ece4b296904167336d0aaab26bd7122018835202
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: ece4b296904167336d0aaab26bd7122018835202
  Author Name: Brad Cowie
  Author Email: brad@faucet.nz
  Commit Date: 1716415256
  Commit Message:
    net: netfilter: Make ct zone opts configurable for bpf ct helpers

Add ct zone id and direction to bpf_ct_opts so that arbitrary ct zones
can be used for xdp/tc bpf ct helper functions bpf_{xdp
  Parent Hashes: 6c8d7598dfed759bf1d9d0322b4c2b42eb7252d8
  Refs: skb}_ct_alloc
and bpf_{xdp

- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'Make connection tracking zone options configurable for BPF connection tracking helpers in xdp/tc programs.', 'keywords': 'ct zone, bpf ct, netfilter', 'commit_classification': "It's a new feature.", 'commit_complexity': 'Moderate, requires some setup or understanding of the system. For example, a new map type or a new link type.', 'Major related component': 'The helper and kfuncs', 'program_types_related': ['xdp like programs', 'tc/netfilter like programs']}
--------------------
--------------------
Processing Commit ID: 6c8d7598dfed759bf1d9d0322b4c2b42eb7252d8
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: 6c8d7598dfed759bf1d9d0322b4c2b42eb7252d8
  Author Name: Geliang Tang
  Author Email: tanggeliang@kylinos.cn
  Commit Date: 1716314841
  Commit Message:
    selftests/bpf: Fix prog numbers in test_sockmap

bpf_prog5 and bpf_prog7 are removed from progs/test_sockmap_kern.h in
commit d79a32129b21 ("bpf: Selftests
  Parent Hashes: 1b0215a3633a4c54ed7ec3af93e7a782dda8d965
  Refs:  remove prints from sockmap tests")

- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'Fixes program numbering in selftests related to sockmap handling in BPF.', 'keywords': 'selftests, sockmap, fix', 'commit_classification': "It's a test case or test infrastructure change.", 'commit_complexity': 'Simple, can be used without much configuration. For example, a simple helper function.', 'Major related component': 'The test cases and makefiles', 'program_types_related': ['socket like programs']}
--------------------
--------------------
Processing Commit ID: 1b0215a3633a4c54ed7ec3af93e7a782dda8d965
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: 1b0215a3633a4c54ed7ec3af93e7a782dda8d965
  Author Name: Ying Zhang
  Author Email: yingzhang098@163.com
  Commit Date: 1716313699
  Commit Message:
    bpf: Remove unused variable "prev_state"

The variable "prev_state" is not used for any actual operations

v2: Fix commit message and description.

Signed-off-by: Ying Zhang <yingzhang098@163.com>
Signed-off-by: Andrii Nakryiko <andrii@kernel.org>
Acked-by: Yonghong Song <yonghong.song@linux.dev>
Link: https://lore.kernel.org/bpf/20240521161702.4339-1-yingzhang098@163.com

  Parent Hashes: f4aba3471cfb9ccf69b476463f19b4c50fef6b14
  Refs: 

- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'Remove the unused variable "prev_state" from the BPF codebase.', 'keywords': 'remove, unused, variable', 'commit_classification': "It's a cleanup or refactoring in the code.", 'commit_complexity': 'Simple, can be used without much configuration. For example, a simple helper function.', 'Major related component': 'Other component related to eBPF but not listed above.', 'program_types_related': ['It improves the overall eBPF infrastructure (e.g., verifier, runtime, etc.).']}
--------------------
--------------------
Processing Commit ID: f4aba3471cfb9ccf69b476463f19b4c50fef6b14
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: f4aba3471cfb9ccf69b476463f19b4c50fef6b14
  Author Name: Ivan Babrou
  Author Email: ivan@cloudflare.com
  Commit Date: 1716312988
  Commit Message:
    bpftool: Un-const bpf_func_info to fix it for llvm 17 and newer

LLVM 17 started treating const structs as constants:

* https://github.com/llvm/llvm-project/commit/0b2d5b967d98

Combined with pointer laundering via ptr_to_u64
  Parent Hashes: 6f130e4d4a5f7174f98300376f3994817ad7e21c
  Refs:  which takes a const ptr

- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'This commit modifies bpftool to handle non-const bpf_func_info to ensure compatibility with LLVM version 17 and newer.', 'keywords': 'bpftool, LLVM 17, bpf_func_info', 'commit_classification': "It's a bug fix.", 'commit_complexity': 'Simple, can be used without much configuration. For example, a simple helper function.', 'Major related component': 'The bpftool utility', 'program_types_related': ['It improves the overall eBPF infrastructure (e.g., verifier, runtime, etc.).']}
--------------------
--------------------
Processing Commit ID: 6f130e4d4a5f7174f98300376f3994817ad7e21c
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: 6f130e4d4a5f7174f98300376f3994817ad7e21c
  Author Name: Mohammad Shehar Yaar Tausif
  Author Email: sheharyaar48@gmail.com
  Commit Date: 1716054376
  Commit Message:
    bpf: Fix order of args in call to bpf_map_kvcalloc

The original function call passed size of smap->bucket before the number of
buckets which raises the error 'calloc-transposed-args' on compilation.

Signed-off-by: Mohammad Shehar Yaar Tausif <sheharyaar48@gmail.com>
Signed-off-by: Andrii Nakryiko <andrii@kernel.org>
Link: https://lore.kernel.org/bpf/20240516072411.42016-1-sheharyaar48@gmail.com
Signed-off-by: Alexei Starovoitov <ast@kernel.org>

  Parent Hashes: 34021caef79f76e70ac31247d321ecd0683c4939
  Refs: 

- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'Fix order of arguments in bpf_map_kvcalloc to resolve calloc-transposed-args compilation error.', 'keywords': 'args, bpf_map_kvcalloc, calloc', 'commit_classification': "It's a bug fix.", 'commit_complexity': 'Simple, can be used without much configuration. For example, a simple helper function.', 'Major related component': 'The eBPF maps', 'program_types_related': ['It improves the overall eBPF infrastructure (e.g., verifier, runtime, etc.).']}
--------------------
--------------------
Processing Commit ID: 34021caef79f76e70ac31247d321ecd0683c4939
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: 34021caef79f76e70ac31247d321ecd0683c4939
  Author Name: Alan Maguire
  Author Email: alan.maguire@oracle.com
  Commit Date: 1716054376
  Commit Message:
    kbuild
  Parent Hashes: e7b64f9d3f5b10186038201e0b91f734cbd7fc3d
  Refs:  bpf: Use test-ge check for v1.25-only pahole

There is no need to set the pahole v1.25-only flags in an
"ifeq" version clause; we are already in a <= v1.25 branch
of "ifeq"

- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'Simplified kbuild configurations by removing redundant pahole version check for v1.25.', 'keywords': 'kbuild,pahole,version', 'commit_classification': "It's a build system or CI/CD change.", 'commit_complexity': 'Simple, can be used without much configuration. For example, a simple helper function.', 'Major related component': "It's not related to any of the above, it's not related to bpf subsystem in Linux kernel, may be wrong data.", 'program_types_related': ["It's not related to any of the above."]}
--------------------
--------------------
Processing Commit ID: e7b64f9d3f5b10186038201e0b91f734cbd7fc3d
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: e7b64f9d3f5b10186038201e0b91f734cbd7fc3d
  Author Name: Artem Savkov
  Author Email: asavkov@redhat.com
  Commit Date: 1716054376
  Commit Message:
    bpftool: Fix make dependencies for vmlinux.h

With pre-generated vmlinux.h there is no dependency on neither vmlinux
nor bootstrap bpftool. Define dependencies separately for both modes.
This avoids needless rebuilds in some corner cases.

Suggested-by: Jan Stancek <jstancek@redhat.com>
Signed-off-by: Artem Savkov <asavkov@redhat.com>
Signed-off-by: Andrii Nakryiko <andrii@kernel.org>
Acked-by: Quentin Monnet <qmo@kernel.org>
Link: https://lore.kernel.org/bpf/20240513112658.43691-1-asavkov@redhat.com
Signed-off-by: Alexei Starovoitov <ast@kernel.org>

  Parent Hashes: 94133cf24bb33889aac267a7f0e3e6a08b8a8e5a
  Refs: 

- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'Fix make dependencies for vmlinux.h in bpftool to avoid unnecessary rebuilds.', 'keywords': 'bpftool,vmlinux,dependencies', 'commit_classification': "It's a build system or CI/CD change.", 'commit_complexity': 'Moderate, requires some setup or understanding of the system. For example, a new map type or a new link type.', 'Major related component': 'The bpftool utility', 'program_types_related': ["It's not related to any of the above."]}
--------------------
--------------------
Processing Commit ID: 94133cf24bb33889aac267a7f0e3e6a08b8a8e5a
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: 94133cf24bb33889aac267a7f0e3e6a08b8a8e5a
  Author Name: Mykyta Yatsenko
  Author Email: yatsenko@meta.com
  Commit Date: 1716054376
  Commit Message:
    bpftool: Introduce btf c dump sorting

Sort bpftool c dump output; aiming to simplify vmlinux.h diffing and
forcing more natural type definitions ordering.

Definitions are sorted first by their BTF kind ranks
  Parent Hashes: 4b377b4868ef17b040065bd468668c707d2477a5
  Refs:  then by their base
type name and by their own name.

Type ranks

Assign ranks to btf kinds (defined in function btf_type_rank) to set
next order:
1. Anonymous enums/enums64
2. Named enums/enums64
3. Trivial types typedefs (ints

- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': "Sorts bpftool's BTF c dump output to improve diffing and type ordering.", 'keywords': 'bpftool, BTF, sorting', 'commit_classification': "It's a cleanup or refactoring in the code.", 'commit_complexity': 'Moderate, requires some setup or understanding of the system. For example, a new map type or a new link type.', 'Major related component': 'The bpftool utility', 'program_types_related': ["It's not related to any of the above."]}
--------------------
--------------------
Processing Commit ID: f08a1e912d3e60bf3028ea1c5199a609d12cd37c
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: f08a1e912d3e60bf3028ea1c5199a609d12cd37c
  Author Name: Linus Torvalds
  Author Email: torvalds@linux-foundation.org
  Commit Date: 1715997434
  Commit Message:
    Merge tag 'net-6.10-rc0' of git://git.kernel.org/pub/scm/linux/kernel/git/netdev/net

Pull networking fixes from Jakub Kicinski:
 "Current release - regressions:

   - virtio_net: fix missed error path rtnl_unlock after control queue
     locking rework

  Current release - new code bugs:

   - bpf: fix KASAN slab-out-of-bounds in percpu_array_map_gen_lookup
  Parent Hashes: 26aa834ff2eef00a863a64b1a94a5a88a94eb963 fe56d6e4a99a40f50e64d5a8043f1fa838b1f7a1
  Refs: 
     caused by missing nested map handling

   - drv: dsa: correct initialization order for KSZ88x3 ports

  Previous releases - regressions:

   - af_packet: do not call packet_read_pending() from
     tpacket_destruct_skb() fix performance regression

   - ipv6: fix route deleting failure when metric equals 0

- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'Merge with networking fixes including bug resolutions for bpf and virtio_net.', 'keywords': 'networking, fixes, bpf', 'commit_classification': "It's other type of commit.", 'commit_complexity': 'Moderate, requires some setup or understanding of the system. For example, a new map type or a new link type.', 'Major related component': 'Other component related to eBPF but not listed above.', 'program_types_related': ['other']}
--------------------
--------------------
Processing Commit ID: 91b6163be404e36baea39fc978e4739fd0448ebd
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: 91b6163be404e36baea39fc978e4739fd0448ebd
  Author Name: Linus Torvalds
  Author Email: torvalds@linux-foundation.org
  Commit Date: 1715992284
  Commit Message:
    Merge tag 'sysctl-6.10-rc1' of git://git.kernel.org/pub/scm/linux/kernel/git/sysctl/sysctl

Pull sysctl updates from Joel Granados:

 - Remove sentinel elements from ctl_table structs in kernel/*

   Removing sentinels in ctl_table arrays reduces the build time size
   and runtime memory consumed by ~64 bytes per array. Removals for
   net/
  Parent Hashes: 06f054b1fee83415fe35204845708988fc16ef22 a35dd3a786f57903151b18275b1eed105084cf72
  Refs:  io_uring/

- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'Merge sysctl updates to remove sentinel elements from ctl_table structs for reduced memory and build time size.', 'keywords': 'sysctl, ctl_table, memory reduction', 'commit_classification': "It's other type of commit.", 'commit_complexity': 'Moderate, requires some setup or understanding of the system. For example, a new map type or a new link type.', 'Major related component': 'Other component related to eBPF but not listed above.', 'program_types_related': ["It's not related to any of the above."]}
--------------------
--------------------
Processing Commit ID: 52d94c180a9f6e586c8234b7feb7c8b9282f53c9
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: 52d94c180a9f6e586c8234b7feb7c8b9282f53c9
  Author Name: Jakub Kicinski
  Author Email: kuba@kernel.org
  Commit Date: 1715906884
  Commit Message:
    Merge tag 'for-netdev' of https://git.kernel.org/pub/scm/linux/kernel/git/bpf/bpf

Daniel Borkmann says:

====================
pull-request: bpf 2024-05-17

We've added 7 non-merge commits during the last 2 day(s) which contain
a total of 8 files changed
  Parent Hashes: 83e93942796db58652288f0391ac00072401816f 51e2b8d33199df9675d2a36ec6aad0c27e91c6fe
  Refs:  20 insertions(+)

- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'Merged updates from bpf repository containing 8 file changes.', 'keywords': 'merge, bpf, updates', 'commit_classification': "It's other type of commit.", 'commit_complexity': 'Moderate, requires some setup or understanding of the system. For example, a new map type or a new link type.', 'Major related component': 'Other component related to eBPF but not listed above.', 'program_types_related': ["It's not related to any of the above."]}
--------------------
--------------------
Processing Commit ID: 51e2b8d33199df9675d2a36ec6aad0c27e91c6fe
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: 51e2b8d33199df9675d2a36ec6aad0c27e91c6fe
  Author Name: Martin KaFai Lau
  Author Email: martin.lau@kernel.org
  Commit Date: 1715903411
  Commit Message:
    selftests/bpf: Adjust btf_dump test to reflect recent change in file_operations

The btf_dump test fails:

test_btf_dump_struct_data:FAIL:file_operations unexpected file_operations: actual '(struct file_operations){
	.owner = (struct module *)0xffffffffffffffff
  Parent Hashes: 5405807edd4168c2dc2f307f3c6b70e9579bf7be
  Refs: 
	.fop_flags = (fop_flags_t)4294967295

- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'Adjust btf_dump selftest to align with changes in file_operations structure.', 'keywords': 'btf_dump,test,file_operations', 'commit_classification': "It's a test case or test infrastructure change.", 'commit_complexity': 'Simple, can be used without much configuration. For example, a simple helper function.', 'Major related component': 'The test cases and makefiles', 'program_types_related': ['It improves the overall eBPF infrastructure (e.g., verifier, runtime, etc.).']}
--------------------
--------------------
Processing Commit ID: 5405807edd4168c2dc2f307f3c6b70e9579bf7be
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: 5405807edd4168c2dc2f307f3c6b70e9579bf7be
  Author Name: Martin KaFai Lau
  Author Email: martin.lau@kernel.org
  Commit Date: 1715903296
  Commit Message:
    selftests/bpf: Adjust test_access_variable_array after a kernel function name change

After commit 4c3e509ea9f2 ("sched/balancing: Rename load_balance() => sched_balance_rq()")
  Parent Hashes: 2322113ac9d0c5653017adbab504fb307b0e92e2
  Refs: 
the load_balance kernel function is renamed to sched_balance_rq.

This patch adjusts the fentry program in test_access_variable_array.c
to reflect this kernel function name change.

Signed-off-by: Martin KaFai Lau <martin.lau@kernel.org>
Signed-off-by: Daniel Borkmann <daniel@iogearbox.net>
Acked-by: Daniel Borkmann <daniel@iogearbox.net>
Link: https://lore.kernel.org/bpf/20240516170140.2689430-1-martin.lau@linux.dev


- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'Adjusts the bpf selftest for a changed kernel function name after a recent rename.', 'keywords': 'selftests,bpf,sched_balance_rq', 'commit_classification': "It's a test case or test infrastructure change.", 'commit_complexity': 'Simple, can be used without much configuration. For example, a simple helper function.', 'Major related component': 'The test cases and makefiles', 'program_types_related': ['tracepoints like programs']}
--------------------
--------------------
Processing Commit ID: a49468240e89628236b738b5ab9416eae8f90c15
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: a49468240e89628236b738b5ab9416eae8f90c15
  Author Name: Linus Torvalds
  Author Email: torvalds@linux-foundation.org
  Commit Date: 1715807108
  Commit Message:
    Merge tag 'modules-6.10-rc1' of git://git.kernel.org/pub/scm/linux/kernel/git/mcgrof/linux

Pull modules updates from Luis Chamberlain:
 "Finally something fun. Mike Rapoport does some cleanup to allow us to
  take out module_alloc() out of modules into a new paint shedded
  execmem_alloc() and execmem_free() so to make emphasis these helpers
  are actually used outside of modules.

  It starts with a non-functional changes API rename / placeholders to
  then allow architectures to define their requirements into a new shiny
  struct execmem_info with ranges
  Parent Hashes: 8c06da67d0bd3139a97f301b4aa9c482b9d4f29e 2c9e5d4a008293407836d29d35dfd4353615bd2f
  Refs:  and requirements for those ranges.

  Archs now can intitialize this execmem_info as the last part of
  mm_core_init() if they have to diverge from the norm. Each range is a
  known type clearly articulated and spelled out in enum execmem_type.

  Although a lot of this is major cleanup and prep work for future
  enhancements an immediate clear gain is we get to enable KPROBES
  without MODULES now. That is ultimately what motiviated to pick this
  work up again

- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'The commit integrates module updates for execmem helper functions and architecture execution memory info struct for future enhancements and kprobe enabling.', 'keywords': 'execmem, cleanup, kprobes', 'commit_classification': "It's a cleanup or refactoring in the code.", 'commit_complexity': 'Moderate, requires some setup or understanding of the system. For example, a new map type or a new link type.', 'Major related component': 'The eBPF verifier', 'program_types_related': ['kprobe/uprobe/ftrace like programs']}
--------------------
--------------------
Processing Commit ID: 2322113ac9d0c5653017adbab504fb307b0e92e2
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: 2322113ac9d0c5653017adbab504fb307b0e92e2
  Author Name: Andrii Nakryiko
  Author Email: andrii@kernel.org
  Commit Date: 1715790894
  Commit Message:
    selftests/bpf: add more variations of map-in-map situations

Add test cases validating usage of PERCPU_ARRAY and PERCPU_HASH maps as
inner maps.

Signed-off-by: Andrii Nakryiko <andrii@kernel.org>
Acked-by: Kumar Kartikeya Dwivedi <memxor@gmail.com>
Link: https://lore.kernel.org/r/20240515062440.846086-2-andrii@kernel.org
Signed-off-by: Alexei Starovoitov <ast@kernel.org>

  Parent Hashes: 9ee98229083186837199912a7debb666146b8c17
  Refs: 

- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'Add test cases for using PERCPU_ARRAY and PERCPU_HASH maps as inner maps in selftests.', 'keywords': 'test cases, inner maps, PERCPU', 'commit_classification': "It's a test case or test infrastructure change.", 'commit_complexity': 'Moderate, requires some setup or understanding of the system. For example, a new map type or a new link type.', 'Major related component': 'The test cases and makefiles', 'program_types_related': ['It improves the overall eBPF infrastructure (e.g., verifier, runtime, etc.).']}
--------------------
--------------------
Processing Commit ID: 9ee98229083186837199912a7debb666146b8c17
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: 9ee98229083186837199912a7debb666146b8c17
  Author Name: Andrii Nakryiko
  Author Email: andrii@kernel.org
  Commit Date: 1715790894
  Commit Message:
    bpf: save extended inner map info for percpu array maps as well

ARRAY_OF_MAPS and HASH_OF_MAPS map types have special logic to save
a few extra fields required for correct operations of ARRAY maps
  Parent Hashes: 325423cafc12031a69692363ddcabc63113bb3d6
  Refs:  when
they are used as inner maps. PERCPU_ARRAY maps have similar
requirements as they now support generating inline element lookup
logic. So make sure that both classes of maps are handled correctly.

Reported-by: Jakub Kicinski <kuba@kernel.org>
Fixes: db69718b8efa ("bpf: inline bpf_map_lookup_elem() for PERCPU_ARRAY maps")
Signed-off-by: Andrii Nakryiko <andrii@kernel.org>
Acked-by: Kumar Kartikeya Dwivedi <memxor@gmail.com>
Link: https://lore.kernel.org/r/20240515062440.846086-1-andrii@kernel.org
Signed-off-by: Alexei Starovoitov <ast@kernel.org>


- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'The commit extends inner map handling to include PERCPU_ARRAY maps for enhanced element lookup logic.', 'keywords': 'inner map, PERCPU_ARRAY, element lookup', 'commit_classification': "It's a bug fix.", 'commit_complexity': 'Moderate, requires some setup or understanding of the system. For example, a new map type or a new link type.', 'Major related component': 'The eBPF maps', 'program_types_related': ['It improves the overall eBPF infrastructure (e.g., verifier, runtime, etc.).', 'other']}
--------------------
--------------------
Processing Commit ID: 7a8030057f6791d35dd20987f9ff15855c01c1bb
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: 7a8030057f6791d35dd20987f9ff15855c01c1bb
  Author Name: Puranjay Mohan
  Author Email: puranjay@kernel.org
  Commit Date: 1715790894
  Commit Message:
    bpf
  Parent Hashes: 1de27bba6d50a909647f304eadc0f7c59a842a50
  Refs:  docs: Fix the description of 'src' in ALU instructions

An ALU instruction's source operand can be the value in the source
register or the 32-bit immediate value encoded in the instruction. This
is controlled by the 's' bit of the 'opcode'.

The current description explicitly uses the phrase 'value of the source
register' when defining the meaning of 'src'.

Change the description to use 'source operand' in place of 'value of the
source register'.

Signed-off-by: Puranjay Mohan <puranjay@kernel.org>
Acked-by: Dave Thaler <dthaler1968@gmail.com>
Link: https://lore.kernel.org/r/20240514130303.113607-1-puranjay@kernel.org
Signed-off-by: Alexei Starovoitov <ast@kernel.org>


- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'Update documentation to clarify the description of the source operand in ALU instructions.', 'keywords': 'ALU,instruction,operand', 'commit_classification': "It's a documentation change or typo fix.", 'commit_complexity': 'Simple, can be used without much configuration. For example, a simple helper function.', 'Major related component': "It's not related to any of the above, it's not related to bpf subsystem in Linux kernel, may be wrong data.", 'program_types_related': ["It's not related to any of the above."]}
--------------------
--------------------
Processing Commit ID: 1de27bba6d50a909647f304eadc0f7c59a842a50
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: 1de27bba6d50a909647f304eadc0f7c59a842a50
  Author Name: Andrii Nakryiko
  Author Email: andrii@kernel.org
  Commit Date: 1715790893
  Commit Message:
    libbpf: fix feature detectors when using token_fd

Adjust `union bpf_attr` size passed to kernel in two feature-detecting
functions to take into account prog_token_fd field.

Libbpf is avoiding memset()'ing entire `union bpf_attr` by only using
minimal set of bpf_attr's fields. Two places have been missed when
wiring BPF token support in libbpf's feature detection logic.

Fix them trivially.

Fixes: f3dcee938f48 ("libbpf: Wire up token_fd into feature probing logic")
Signed-off-by: Andrii Nakryiko <andrii@kernel.org>
Link: https://lore.kernel.org/r/20240513180804.403775-1-andrii@kernel.org
Signed-off-by: Alexei Starovoitov <ast@kernel.org>

  Parent Hashes: 621cde16e49b3ecf7d59a8106a20aaebfb4a59a9
  Refs: 

- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'Fix feature detection logic in libbpf by adjusting bpf_attr size for token_fd support.', 'keywords': 'libbpf,feature detection,token_fd', 'commit_classification': "It's a bug fix.", 'commit_complexity': 'Simple, can be used without much configuration. For example, a simple helper function.', 'Major related component': 'The libbpf library', 'program_types_related': ['It improves the overall eBPF infrastructure (e.g., verifier, runtime, etc.).']}
--------------------
--------------------
Processing Commit ID: 8bd67ebb50c0145fd2ca8681ab65eb7e8cde1afc
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: 8bd67ebb50c0145fd2ca8681ab65eb7e8cde1afc
  Author Name: Nikolay Aleksandrov
  Author Email: razor@blackwall.org
  Commit Date: 1715769662
  Commit Message:
    net: bridge: xmit: make sure we have at least eth header len bytes

syzbot triggered an uninit value[1] error in bridge device's xmit path
by sending a short (less than ETH_HLEN bytes) skb. To fix it check if
we can actually pull that amount instead of assuming.

Tested with dropwatch:
 drop at: br_dev_xmit+0xb93/0x12d0 [bridge] (0xffffffffc06739b3)
 origin: software
 timestamp: Mon May 13 11:31:53 2024 778214037 nsec
 protocol: 0x88a8
 length: 2
 original length: 2
 drop reason: PKT_TOO_SMALL

[1]
BUG: KMSAN: uninit-value in br_dev_xmit+0x61d/0x1cb0 net/bridge/br_device.c:65
 br_dev_xmit+0x61d/0x1cb0 net/bridge/br_device.c:65
 __netdev_start_xmit include/linux/netdevice.h:4903 [inline]
 netdev_start_xmit include/linux/netdevice.h:4917 [inline]
 xmit_one net/core/dev.c:3531 [inline]
 dev_hard_start_xmit+0x247/0xa20 net/core/dev.c:3547
 __dev_queue_xmit+0x34db/0x5350 net/core/dev.c:4341
 dev_queue_xmit include/linux/netdevice.h:3091 [inline]
 __bpf_tx_skb net/core/filter.c:2136 [inline]
 __bpf_redirect_common net/core/filter.c:2180 [inline]
 __bpf_redirect+0x14a6/0x1620 net/core/filter.c:2187
 ____bpf_clone_redirect net/core/filter.c:2460 [inline]
 bpf_clone_redirect+0x328/0x470 net/core/filter.c:2432
 ___bpf_prog_run+0x13fe/0xe0f0 kernel/bpf/core.c:1997
 __bpf_prog_run512+0xb5/0xe0 kernel/bpf/core.c:2238
 bpf_dispatcher_nop_func include/linux/bpf.h:1234 [inline]
 __bpf_prog_run include/linux/filter.h:657 [inline]
 bpf_prog_run include/linux/filter.h:664 [inline]
 bpf_test_run+0x499/0xc30 net/bpf/test_run.c:425
 bpf_prog_test_run_skb+0x14ea/0x1f20 net/bpf/test_run.c:1058
 bpf_prog_test_run+0x6b7/0xad0 kernel/bpf/syscall.c:4269
 __sys_bpf+0x6aa/0xd90 kernel/bpf/syscall.c:5678
 __do_sys_bpf kernel/bpf/syscall.c:5767 [inline]
 __se_sys_bpf kernel/bpf/syscall.c:5765 [inline]
 __x64_sys_bpf+0xa0/0xe0 kernel/bpf/syscall.c:5765
 x64_sys_call+0x96b/0x3b50 arch/x86/include/generated/asm/syscalls_64.h:322
 do_syscall_x64 arch/x86/entry/common.c:52 [inline]
 do_syscall_64+0xcf/0x1e0 arch/x86/entry/common.c:83
 entry_SYSCALL_64_after_hwframe+0x77/0x7f

Fixes: 1da177e4c3f4 ("Linux-2.6.12-rc2")
Reported-by: syzbot+a63a1f6a062033cf0f40@syzkaller.appspotmail.com
Closes: https://syzkaller.appspot.com/bug?extid=a63a1f6a062033cf0f40
Signed-off-by: Nikolay Aleksandrov <razor@blackwall.org>
Signed-off-by: David S. Miller <davem@davemloft.net>

  Parent Hashes: aea27a92a41dae14843f92c79e9e42d8f570105c
  Refs: 

- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'Fix uninitialized value error in bridge xmit path by ensuring minimum Ethernet header length.', 'keywords': 'bridge,xmit,error', 'commit_classification': "It's a bug fix.", 'commit_complexity': 'Moderate, requires some setup or understanding of the system. For example, a new map type or a new link type.', 'Major related component': 'Other component related to eBPF but not listed above.', 'program_types_related': ['tc/netfilter like programs', 'It improves the overall eBPF infrastructure (e.g., verifier, runtime, etc.).']}
--------------------
--------------------
Processing Commit ID: 1b294a1f35616977caddaddf3e9d28e576a1adbc
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: 1b294a1f35616977caddaddf3e9d28e576a1adbc
  Author Name: Linus Torvalds
  Author Email: torvalds@linux-foundation.org
  Commit Date: 1715740944
  Commit Message:
    Merge tag 'net-next-6.10' of git://git.kernel.org/pub/scm/linux/kernel/git/netdev/net-next

Pull networking updates from Jakub Kicinski:
 "Core & protocols:

   - Complete rework of garbage collection of AF_UNIX sockets.

     AF_UNIX is prone to forming reference count cycles due to fd
     passing functionality. New method based on Tarjan's Strongly
     Connected Components algorithm should be both faster and remove a
     lot of workarounds we accumulated over the years.

   - Add TCP fraglist GRO support
  Parent Hashes: b850dc206a57ae272c639e31ac202ec0c2f46960 654de42f3fc6edc29d743c1dbcd1424f7793f63d
  Refs:  allowing chaining multiple TCP
     packets and forwarding them together. Useful for small switches /
     routers which lack basic checksum offload in some scenarios (e.g.
     PPPoE).

   - Support using SMP threads for handling packet backlog i.e. packet
     processing from software interfaces and old drivers which don't use
     NAPI. This helps move the processing out of the softirq jumble.

   - Continue work of converting from rtnl lock to RCU protection.

     Don't require rtnl lock when reading: IPv6 routing FIB

- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'Merge networking updates including AF_UNIX rework, TCP fraglist GRO support, and SMP threads usage for packet backlog.', 'keywords': 'networking, AF_UNIX, TCP', 'commit_classification': "It's other type of commit.", 'commit_complexity': "Complex, needs expert knowledge or significant changes to existing systems. Like adding a completely new subsystem support or a completely new program type don't exist before.", 'Major related component': 'Other component related to eBPF but not listed above.', 'program_types_related': ["It's not related to any of the above."]}
--------------------
--------------------
Processing Commit ID: 614da38e2f7afe9e01c6e359dfa09285f26fa381
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: 614da38e2f7afe9e01c6e359dfa09285f26fa381
  Author Name: Linus Torvalds
  Author Email: torvalds@linux-foundation.org
  Commit Date: 1715724766
  Commit Message:
    Merge tag 'hid-for-linus-2024051401' of git://git.kernel.org/pub/scm/linux/kernel/git/hid/hid

Pull HID updates from Jiri Kosina:

 - Firmware loading from host support in intel-ish driver
  Parent Hashes: ce952d8f0e9b58dc6a2bde7e47ca7fa7925583cc c9c92fc4c2ef4e2f11af0ba19cb18d9b5e3e6f08
  Refs:  needed to
   support Lunar Lake and later (Zhang Lixu)

 - updates to HID-BPF infrastructure

- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'Merge HID updates including intel-ish driver firmware loading support and HID-BPF infrastructure improvements.', 'keywords': 'HID,BPF,firmware', 'commit_classification': "It's a new feature.", 'commit_complexity': "Complex, needs expert knowledge or significant changes to existing systems. Like adding a completely new subsystem support or a completely new program type don't exist before.", 'Major related component': 'Other component related to eBPF but not listed above.', 'program_types_related': ['HID driver like programs']}
--------------------
--------------------
Processing Commit ID: 21c38a3bd4ee3fb7337d013a638302fb5e5f9dc2
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: 21c38a3bd4ee3fb7337d013a638302fb5e5f9dc2
  Author Name: Jesper Dangaard Brouer
  Author Email: hawk@kernel.org
  Commit Date: 1715715797
  Commit Message:
    cgroup/rstat: add cgroup_rstat_cpu_lock helpers and tracepoints

This closely resembles helpers added for the global cgroup_rstat_lock in
commit fc29e04ae1ad ("cgroup/rstat: add cgroup_rstat_lock helpers and
tracepoints"). This is for the per CPU lock cgroup_rstat_cpu_lock.

Based on production workloads
  Parent Hashes: c1457d9aad5ee2feafcf85aa9a58ab50500159d2
  Refs:  we observe the fast-path "update" function
cgroup_rstat_updated() is invoked around 3 million times per sec

- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'Add cgroup_rstat_cpu_lock helpers and tracepoints for improved cgroup statistics locking efficiency.', 'keywords': 'cgroup,helpers,tracepoints', 'commit_classification': "It's a new feature.", 'commit_complexity': 'Moderate, requires some setup or understanding of the system. For example, a new map type or a new link type.', 'Major related component': 'Other component related to eBPF but not listed above.', 'program_types_related': ['It improves the overall eBPF infrastructure (e.g., verifier, runtime, etc.).']}
--------------------
--------------------
Processing Commit ID: e29fd84c5b49085cf27e1d5f27237d2fb19edefe
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: e29fd84c5b49085cf27e1d5f27237d2fb19edefe
  Author Name: Jiri Kosina
  Author Email: jkosina@suse.com
  Commit Date: 1715687089
  Commit Message:
    Merge branch 'for-6.10/hid-bpf' into for-linus

- updates to HID-BPF infrastructure
  Parent Hashes: bc5fbae23a880ebe42d4843294667e932379fb71 89ea968a9d759f71ac7b8d50949a8e5e5bcb1111
  Refs:  with some of the specific
  fixes (e.g. rdesc fixups) abstracted into separate BPF programs
  for consumption by libevdev/udev-hid-bpf (Benjamin Tissoires)


- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'Merges updates to the HID-BPF infrastructure including rdesc fixups abstracted into separate BPF programs.', 'keywords': 'HID-BPF,infrastructure,fixups', 'commit_classification': "It's other type of commit.", 'commit_complexity': 'Moderate, requires some setup or understanding of the system. For example, a new map type or a new link type.', 'Major related component': 'The attach events and bpf link. e.g. perf events, tracepoints, etc.', 'program_types_related': ['HID driver like programs', "It's not related to any of the above."]}
--------------------
--------------------
Processing Commit ID: 2c9e5d4a008293407836d29d35dfd4353615bd2f
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: 2c9e5d4a008293407836d29d35dfd4353615bd2f
  Author Name: Mike Rapoport (IBM)
  Author Email: rppt@kernel.org
  Commit Date: 1715672189
  Commit Message:
    bpf: remove CONFIG_BPF_JIT dependency on CONFIG_MODULES of

BPF just-in-time compiler depended on CONFIG_MODULES because it used
module_alloc() to allocate memory for the generated code.

Since code allocations are now implemented with execmem
  Parent Hashes: 7582b7be16d0ba90e3dbd9575a730cabd9eb852a
  Refs:  drop dependency of
CONFIG_BPF_JIT on CONFIG_MODULES and make it select CONFIG_EXECMEM.

Suggested-by: Björn Töpel <bjorn@kernel.org>
Signed-off-by: Mike Rapoport (IBM) <rppt@kernel.org>
Signed-off-by: Luis Chamberlain <mcgrof@kernel.org>


- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'Remove CONFIG_BPF_JIT dependency on CONFIG_MODULES, now using CONFIG_EXECMEM for memory allocation.', 'keywords': 'BPF JIT, CONFIG_MODULES, CONFIG_EXECMEM', 'commit_classification': "It's a cleanup or refactoring in the code.", 'commit_complexity': 'Moderate, requires some setup or understanding of the system. For example, a new map type or a new link type.', 'Major related component': 'The JIT compiler', 'program_types_related': ['It improves the overall eBPF infrastructure (e.g., verifier, runtime, etc.).']}
--------------------
--------------------
Processing Commit ID: e2effa2235d9c7d0e9410637a2602bc69ee4f800
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: e2effa2235d9c7d0e9410637a2602bc69ee4f800
  Author Name: Mike Rapoport (IBM)
  Author Email: rppt@kernel.org
  Commit Date: 1715671903
  Commit Message:
    arm64: extend execmem_info for generated code allocations

The memory allocations for kprobes and BPF on arm64 can be placed
anywhere in vmalloc address space and currently this is implemented with
overrides of alloc_insn_page() and bpf_jit_alloc_exec() in arm64.

Define EXECMEM_KPROBES and EXECMEM_BPF ranges in arm64::execmem_info and
drop overrides of alloc_insn_page() and bpf_jit_alloc_exec().

Signed-off-by: Mike Rapoport (IBM) <rppt@kernel.org>
Acked-by: Will Deacon <will@kernel.org>
Signed-off-by: Luis Chamberlain <mcgrof@kernel.org>

  Parent Hashes: 4d7b321a9ce0782a953874ec69acc2b12b9cb2cd
  Refs: 

- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'Enhance arm64 execmem_info for improved management of kprobes and BPF memory allocations.', 'keywords': 'arm64, execmem_info, memory', 'commit_classification': "It's a performance optimization.", 'commit_complexity': 'Moderate, requires some setup or understanding of the system. For example, a new map type or a new link type.', 'Major related component': 'The JIT compiler', 'program_types_related': ['kprobe/uprobe/ftrace like programs']}
--------------------
--------------------
Processing Commit ID: 4d7b321a9ce0782a953874ec69acc2b12b9cb2cd
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: 4d7b321a9ce0782a953874ec69acc2b12b9cb2cd
  Author Name: Mike Rapoport (IBM)
  Author Email: rppt@kernel.org
  Commit Date: 1715671903
  Commit Message:
    riscv: extend execmem_params for generated code allocations

The memory allocations for kprobes and BPF on RISC-V are not placed in
the modules area and these custom allocations are implemented with
overrides of alloc_insn_page() and  bpf_jit_alloc_exec().

Define MODULES_VADDR and MODULES_END as VMALLOC_START and VMALLOC_END for
32 bit and slightly reorder execmem_params initialization to support both
32 and 64 bit variants
  Parent Hashes: 223b5e57d0d50b0c07b933350dbcde92018d3080
  Refs:  define EXECMEM_KPROBES and EXECMEM_BPF ranges in
riscv::execmem_params and drop overrides of alloc_insn_page() and
bpf_jit_alloc_exec().

Signed-off-by: Mike Rapoport (IBM) <rppt@kernel.org>
Reviewed-by: Alexandre Ghiti <alexghiti@rivosinc.com>
Signed-off-by: Luis Chamberlain <mcgrof@kernel.org>


- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'Extend execmem_params for custom memory allocations for kprobes and BPF on RISC-V.', 'keywords': 'execmem_params,RISC-V,BPF', 'commit_classification': "It's a new feature.", 'commit_complexity': 'Moderate, requires some setup or understanding of the system. For example, a new map type or a new link type.', 'Major related component': 'Other component related to eBPF but not listed above.', 'program_types_related': ['It improves the overall eBPF infrastructure (e.g., verifier, runtime, etc.).']}
--------------------
--------------------
Processing Commit ID: 17ca7fc22f4bbc795e4d136449521b2fecb88e06
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: 17ca7fc22f4bbc795e4d136449521b2fecb88e06
  Author Name: Linus Torvalds
  Author Email: torvalds@linux-foundation.org
  Commit Date: 1715645627
  Commit Message:
    Merge tag 'perf-core-2024-05-13' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip

Pull perf events updates from Ingo Molnar:

 - Combine perf and BPF for fast evalution of HW breakpoint
   conditions

 - Add LBR capture support outside of hardware events

 - Trigger IO signals for watermark_wakeup

 - Add RAPL support for Intel Arrow Lake and Lunar Lake

 - Optimize frequency-throttling

 - Miscellaneous cleanups & fixes

* tag 'perf-core-2024-05-13' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip: (21 commits)
  perf/bpf: Mark perf_event_set_bpf_handler() and perf_event_free_bpf_handler() as inline too
  selftests/perf_events: Test FASYNC with watermark wakeups
  perf/ring_buffer: Trigger IO signals for watermark_wakeup
  perf: Move perf_event_fasync() to perf_event.h
  perf/bpf: Change the !CONFIG_BPF_SYSCALL stubs to static inlines
  selftest/bpf: Test a perf BPF program that suppresses side effects
  perf/bpf: Allow a BPF program to suppress all sample side effects
  perf/bpf: Remove unneeded uses_default_overflow_handler()
  perf/bpf: Call BPF handler directly
  Parent Hashes: 48fc82c40bc29a80361b1eab0e4a9494628a7144 854dd99b5ddc9d90e31e5f112462a5994dd31810
  Refs:  not through overflow machinery
  perf/bpf: Remove #ifdef CONFIG_BPF_SYSCALL from struct perf_event members
  perf/bpf: Create bpf_overflow_handler() stub for !CONFIG_BPF_SYSCALL
  perf/bpf: Reorder bpf_overflow_handler() ahead of __perf_event_overflow()
  perf/x86/rapl: Add support for Intel Lunar Lake
  perf/x86/rapl: Add support for Intel Arrow Lake
  perf/core: Reduce PMU access to adjust sample freq
  perf/core: Optimize perf_adjust_freq_unthr_context()
  perf/x86/amd: Don't reject non-sampling events with configured LBR
  perf/x86/amd: Support capturing LBR from software events
  perf/x86/amd: Avoid taking branches before disabling LBR
  perf/x86/amd: Ensure amd_pmu_core_disable_all() is always inlined
  ...


- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'This commit merges perf updates including BPF integration for hardware breakpoint conditions and miscellaneous cleanups and optimizations.', 'keywords': 'perf, BPF, optimizations', 'commit_classification': "It's other type of commit.", 'commit_complexity': "Complex, needs expert knowledge or significant changes to existing systems. Like adding a completely new subsystem support or a completely new program type don't exist before.", 'Major related component': 'Other component related to eBPF but not listed above.', 'program_types_related': ['It improves the overall eBPF infrastructure (e.g., verifier, runtime, etc.).']}
--------------------
--------------------
Processing Commit ID: 6e62702feb6d474e969b52f0379de93e9729e457
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: 6e62702feb6d474e969b52f0379de93e9729e457
  Author Name: Jakub Kicinski
  Author Email: kuba@kernel.org
  Commit Date: 1715643670
  Commit Message:
    Merge tag 'for-netdev' of https://git.kernel.org/pub/scm/linux/kernel/git/bpf/bpf-next

Daniel Borkmann says:

====================
pull-request: bpf-next 2024-05-13

We've added 119 non-merge commits during the last 14 day(s) which contain
a total of 134 files changed
  Parent Hashes: afd29f36aaf733985df1ba162424581b8b8853b4 ba39486d2c43ba7c103c438540aa56c8bde3b6c7
  Refs:  9462 insertions(+)

- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'This commit merges multiple changes from the bpf-next branch into the main branch.', 'keywords': 'merge, bpf-next, commit', 'commit_classification': "It's other type of commit.", 'commit_complexity': 'Moderate, requires some setup or understanding of the system. For example, a new map type or a new link type.', 'Major related component': 'Other component related to eBPF but not listed above.', 'program_types_related': ['It improves the overall eBPF infrastructure (e.g., verifier, runtime, etc.).']}
--------------------
--------------------
Processing Commit ID: c9f9df3f6347b33ae770747c40bae38836e3658c
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: c9f9df3f6347b33ae770747c40bae38836e3658c
  Author Name: Jakub Kicinski
  Author Email: kuba@kernel.org
  Commit Date: 1715631048
  Commit Message:
    Merge tag 'for-netdev' of https://git.kernel.org/pub/scm/linux/kernel/git/bpf/bpf

Daniel Borkmann says:

====================
pull-request: bpf 2024-05-13

We've added 3 non-merge commits during the last 2 day(s) which contain
a total of 2 files changed
  Parent Hashes: 1164057b3c0093240e45517d711da2d1fd86789a 3e9bc0472b910d4115e16e9c2d684c7757cb6c60
  Refs:  62 insertions(+)

- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'This commit merges changes from the bpf repository affecting 2 files with 62 insertions.', 'keywords': 'bpf,merge,changes', 'commit_classification': "It's a cleanup or refactoring in the code.", 'commit_complexity': 'Simple, can be used without much configuration. For example, a simple helper function.', 'Major related component': 'Other component related to eBPF but not listed above.', 'program_types_related': ['It improves the overall eBPF infrastructure (e.g., verifier, runtime, etc.).']}
--------------------
--------------------
Processing Commit ID: c0b9620bc3f0a0f914996cc6631522d41870a9e0
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: c0b9620bc3f0a0f914996cc6631522d41870a9e0
  Author Name: Linus Torvalds
  Author Email: torvalds@linux-foundation.org
  Commit Date: 1715618946
  Commit Message:
    Merge tag 'rcu.next.v6.10' of https://github.com/urezki/linux

Pull RCU updates from Uladzislau Rezki:

 - Fix a lockdep complain for lazy-preemptible kernel
  Parent Hashes: 736676f5c3abd1fc01c41813a95246e892937f6d 64619b283bb35b12a96129e82b40304f7e5551b7
  Refs:  remove redundant
   BH disable for TINY_RCU

- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'Merge RCU updates to fix a lockdep complaint in lazy-preemptible kernel.', 'keywords': 'RCU, lockdep, preemptible', 'commit_classification': "It's a bug fix.", 'commit_complexity': 'Moderate, requires some setup or understanding of the system. For example, a new map type or a new link type.', 'Major related component': 'Other component related to eBPF but not listed above.', 'program_types_related': ["It's not related to any of the above."]}
--------------------
--------------------
Processing Commit ID: ba39486d2c43ba7c103c438540aa56c8bde3b6c7
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: ba39486d2c43ba7c103c438540aa56c8bde3b6c7
  Author Name: Jose E. Marchesi
  Author Email: jose.marchesi@oracle.com
  Commit Date: 1715560904
  Commit Message:
    bpf: make list_for_each_entry portable

[Changes from V1:
- The __compat_break has been abandoned in favor of
  a more readable can_loop macro that can be used anywhere
  Parent Hashes: 6a2f786e6905007e82bac212296deca29815916d
  Refs:  including
  loop conditions.]

The macro list_for_each_entry is defined in bpf_arena_list.h as
follows:

  #define list_for_each_entry(pos

- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'Improves portability of list_for_each_entry macro in bpf_arena_list.h by using can_loop macro.', 'keywords': 'list_for_each_entry, portability, can_loop', 'commit_classification': "It's a cleanup or refactoring in the code.", 'commit_complexity': 'Simple, can be used without much configuration. For example, a simple helper function.', 'Major related component': 'Other component related to eBPF but not listed above.', 'program_types_related': ['It improves the overall eBPF infrastructure (e.g., verifier, runtime, etc.).']}
--------------------
--------------------
Processing Commit ID: 6a2f786e6905007e82bac212296deca29815916d
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: 6a2f786e6905007e82bac212296deca29815916d
  Author Name: Jose E. Marchesi
  Author Email: jose.marchesi@oracle.com
  Commit Date: 1715560284
  Commit Message:
    bpf: ignore expected GCC warning in test_global_func10.c

The BPF selftest global_func10 in progs/test_global_func10.c contains:

  struct Small {
  	long x;
  };

  struct Big {
  	long x;
  	long y;
  };

  [...]

  __noinline int foo(const struct Big *big)
  {
	if (!big)
		return 0;

	return bpf_get_prandom_u32() < big->y;
  }

  [...]

  SEC("cgroup_skb/ingress")
  __failure __msg("invalid indirect access to stack")
  int global_func10(struct __sk_buff *skb)
  {
	const struct Small small = {.x = skb->len };

	return foo((struct Big *)&small) ? 1 : 0;
  }

GCC emits a "maybe uninitialized" warning for the code above
  Parent Hashes: 73868988c90d2701587ab2a48b5858ab935afb17
  Refs:  because
it knows `foo' accesses `big->y'.

Since the purpose of this selftest is to check that the verifier will
fail on this sort of invalid memory access

- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'The commit modifies a BPF selftest to ignore a specific GCC warning indicating uninitialized data access.', 'keywords': 'BPF selftest, GCC warning, verifier', 'commit_classification': "It's a test case or test infrastructure change.", 'commit_complexity': 'Simple, can be used without much configuration. For example, a simple helper function.', 'Major related component': 'The test cases and makefiles', 'program_types_related': ['cgroup like programs']}
--------------------
--------------------
Processing Commit ID: 73868988c90d2701587ab2a48b5858ab935afb17
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: 73868988c90d2701587ab2a48b5858ab935afb17
  Author Name: Jose E. Marchesi
  Author Email: jose.marchesi@oracle.com
  Commit Date: 1715560215
  Commit Message:
    bpf: disable strict aliasing in test_global_func9.c

The BPF selftest test_global_func9.c performs type punning and breaks
srict-aliasing rules.

In particular
  Parent Hashes: a3c1c95538e22283ef6fa529e3ffa0e6d47ee190
  Refs:  given:

  int global_func9(struct __sk_buff *skb)
  {
	int result = 0;

	[...]
	{
		const struct C c = {.x = skb->len

- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'Disable strict aliasing in test_global_func9.c due to type punning violations.', 'keywords': 'disable, strict aliasing, selftest', 'commit_classification': "It's a test case or test infrastructure change.", 'commit_complexity': 'Simple, can be used without much configuration. For example, a simple helper function.', 'Major related component': 'The test cases and makefiles', 'program_types_related': ['xdp like programs', 'other']}
--------------------
--------------------
Processing Commit ID: a3c1c95538e22283ef6fa529e3ffa0e6d47ee190
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: a3c1c95538e22283ef6fa529e3ffa0e6d47ee190
  Author Name: Geliang Tang
  Author Email: tanggeliang@kylinos.cn
  Commit Date: 1715560122
  Commit Message:
    selftests/bpf: Free strdup memory in xdp_hw_metadata

The strdup() function returns a pointer to a new string which is a
duplicate of the string "ifname". Memory for the new string is obtained
with malloc()
  Parent Hashes: 5ddafcc377f98778acc08f660dee6400aece6a62
  Refs:  and need to be freed with free().

This patch adds this missing "free(saved_hwtstamp_ifname)" in cleanup()
to avoid a potential memory leak in xdp_hw_metadata.c.

Signed-off-by: Geliang Tang <tanggeliang@kylinos.cn>
Link: https://lore.kernel.org/r/af9bcccb96655e82de5ce2b4510b88c9c8ed5ed0.1715417367.git.tanggeliang@kylinos.cn
Signed-off-by: Alexei Starovoitov <ast@kernel.org>


- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'Fixes a potential memory leak by adding a missing free operation in xdp_hw_metadata.c.', 'keywords': 'memory leak, free, strdup', 'commit_classification': "It's a bug fix.", 'commit_complexity': 'Simple, can be used without much configuration. For example, a simple helper function.', 'Major related component': 'The test cases and makefiles', 'program_types_related': ['xdp like programs']}
--------------------
--------------------
Processing Commit ID: 5ddafcc377f98778acc08f660dee6400aece6a62
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: 5ddafcc377f98778acc08f660dee6400aece6a62
  Author Name: Cupertino Miranda
  Author Email: cupertino.miranda@oracle.com
  Commit Date: 1715559914
  Commit Message:
    selftests/bpf: Fix a few tests for GCC related warnings.

This patch corrects a few warnings to allow selftests to compile for
GCC.

-- progs/cpumask_failure.c --

progs/bpf_misc.h:136:22: error: ‘cpumask’ is used uninitialized
[-Werror=uninitialized]
  136 | #define __sink(expr) asm volatile("" : "+g"(expr))
      |                      ^~~
progs/cpumask_failure.c:68:9: note: in expansion of macro ‘__sink’
   68 |         __sink(cpumask);

The macro __sink(cpumask) with the '+' contraint modifier forces the
the compiler to expect a read and write from cpumask. GCC detects
that cpumask is never initialized and reports an error.
This patch removes the spurious non required definitions of cpumask.

-- progs/dynptr_fail.c --

progs/dynptr_fail.c:1444:9: error: ‘ptr1’ may be used uninitialized
[-Werror=maybe-uninitialized]
 1444 |         bpf_dynptr_clone(&ptr1
  Parent Hashes: 792a04bed41caec79c787d105b0d442351b3bcc8
  Refs:  &ptr2);

Many of the tests in the file are related to the detection of
uninitialized pointers by the verifier. GCC is able to detect possible
uninitialized values

- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'Fixes GCC warnings in eBPF selftests for successful compilation.', 'keywords': 'GCC,warnings,selftests', 'commit_classification': "It's a test case or test infrastructure change.", 'commit_complexity': 'Simple, can be used without much configuration. For example, a simple helper function.', 'Major related component': 'The test cases and makefiles', 'program_types_related': ['It improves the overall eBPF infrastructure (e.g., verifier, runtime, etc.).']}
--------------------
--------------------
Processing Commit ID: 792a04bed41caec79c787d105b0d442351b3bcc8
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: 792a04bed41caec79c787d105b0d442351b3bcc8
  Author Name: David Faust
  Author Email: david.faust@oracle.com
  Commit Date: 1715559572
  Commit Message:
    bpf: avoid gcc overflow warning in test_xdp_vlan.c

This patch fixes an integer overflow warning raised by GCC in
xdp_prognum1 of progs/test_xdp_vlan.c:

  GCC-BPF  [test_maps] test_xdp_vlan.bpf.o
progs/test_xdp_vlan.c: In function 'xdp_prognum1':
progs/test_xdp_vlan.c:163:25: error: integer overflow in expression
 '(short int)(((__builtin_constant_p((int)vlan_hdr->h_vlan_TCI)) != 0
   ? (int)(short unsigned int)((short int)((int)vlan_hdr->h_vlan_TCI
   << 8 >> 8) << 8 | (short int)((int)vlan_hdr->h_vlan_TCI << 0 >> 8
   << 0)) & 61440 : (int)__builtin_bswap16(vlan_hdr->h_vlan_TCI)
   & 61440) << 8 >> 8) << 8' of type 'short int' results in '0' [-Werror=overflow]
  163 |                         bpf_htons((bpf_ntohs(vlan_hdr->h_vlan_TCI) & 0xf000)
      |                         ^~~~~~~~~

The problem lies with the expansion of the bpf_htons macro and the
expression passed into it.  The bpf_htons macro (and similarly the
bpf_ntohs macro) expand to a ternary operation using either
__builtin_bswap16 or ___bpf_swab16 to swap the bytes
  Parent Hashes: bbe91a9f6889934e661fa924144c7023f0a1c4cf
  Refs:  depending on
whether the expression is constant.

For an expression

- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'Fixed GCC overflow warning in xdp_prognum1 function of test_xdp_vlan.c program.', 'keywords': 'GCC overflow warning', 'commit_classification': "It's a bug fix.", 'commit_complexity': 'Simple, can be used without much configuration. For example, a simple helper function.', 'Major related component': 'The test cases and makefiles', 'program_types_related': ['xdp like programs']}
--------------------
--------------------
Processing Commit ID: e9dd2290f1fb9a46c1c0e322cb0e53cf914903fb
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: e9dd2290f1fb9a46c1c0e322cb0e53cf914903fb
  Author Name: Alexei Starovoitov
  Author Email: ast@kernel.org
  Commit Date: 1715559053
  Commit Message:
    Merge branch 'retire-progs-test_sock_addr'

Jordan Rife says:

====================
Retire progs/test_sock_addr.c

This patch series migrates remaining tests from bpf/test_sock_addr.c to
prog_tests/sock_addr.c and progs/verifier_sock_addr.c in order to fully
retire the old-style test program and expands test coverage to test
previously untested scenarios related to sockaddr hooks.

This is a continuation of the work started recently during the expansion
of prog_tests/sock_addr.c.

Link: https://lore.kernel.org/bpf/20240429214529.2644801-1-jrife@google.com/T/#u

=======
Patches
=======
* Patch 1 moves tests that check valid return values for recvmsg hooks
  into progs/verifier_sock_addr.c
  Parent Hashes: 20a759df3bba35bf5c3ddec0c02ad69b603b584c a3d3eb957ddc733d04c0da67024b1c30d8826cc2
  Refs:  a new addition to the verifier test
  suite.
* Patches 2-5 lay the groundwork for test migration

- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'This commit migrates tests from bpf/test_sock_addr.c to prog_tests for better test coverage of sockaddr hooks.', 'keywords': 'test migration, sockaddr hooks, verifier', 'commit_classification': "It's a test case or test infrastructure change.", 'commit_complexity': 'Moderate, requires some setup or understanding of the system. For example, a new map type or a new link type.', 'Major related component': 'The test cases and makefiles', 'program_types_related': ['It improves the overall eBPF infrastructure (e.g., verifier, runtime, etc.).', 'socket like programs', 'other']}
--------------------
--------------------
Processing Commit ID: a3d3eb957ddc733d04c0da67024b1c30d8826cc2
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: a3d3eb957ddc733d04c0da67024b1c30d8826cc2
  Author Name: Jordan Rife
  Author Email: jrife@google.com
  Commit Date: 1715559042
  Commit Message:
    selftests/bpf: Expand ATTACH_REJECT tests

This expands coverage for ATTACH_REJECT tests to include connect_unix
  Parent Hashes: bc467e953e4fbafd94d04c355f875bf1adf438e2
  Refs: 
sendmsg_unix

- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'Expanded the ATTACH_REJECT test coverage to include connect_unix.', 'keywords': 'ATTACH_REJECT,test coverage,connect_unix', 'commit_classification': "It's a test case or test infrastructure change.", 'commit_complexity': 'Simple, can be used without much configuration. For example, a simple helper function.', 'Major related component': 'The test cases and makefiles', 'program_types_related': ['socket like programs']}
--------------------
--------------------
Processing Commit ID: bc467e953e4fbafd94d04c355f875bf1adf438e2
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: bc467e953e4fbafd94d04c355f875bf1adf438e2
  Author Name: Jordan Rife
  Author Email: jrife@google.com
  Commit Date: 1715559042
  Commit Message:
    selftests/bpf: Expand getsockname and getpeername tests

This expands coverage for getsockname and getpeername hooks to include
getsockname4
  Parent Hashes: dfb7539b47b501ccc0d23bae718500ada2157aee
  Refs:  getsockname6

- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'This commit expands test coverage for BPF getsockname and getpeername hooks.', 'keywords': 'getsockname, getpeername, hooks', 'commit_classification': "It's a test case or test infrastructure change.", 'commit_complexity': 'Moderate, requires some setup or understanding of the system. For example, a new map type or a new link type.', 'Major related component': 'The test cases and makefiles', 'program_types_related': ['socket like programs']}
--------------------
--------------------
Processing Commit ID: dfb7539b47b501ccc0d23bae718500ada2157aee
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: dfb7539b47b501ccc0d23bae718500ada2157aee
  Author Name: Jordan Rife
  Author Email: jrife@google.com
  Commit Date: 1715559042
  Commit Message:
    sefltests/bpf: Expand sockaddr hook deny tests

This patch expands test coverage for EPERM tests to include connect and
bind calls and rounds out the coverage for sendmsg by adding tests for
sendmsg_unix.

Signed-off-by: Jordan Rife <jrife@google.com>
Link: https://lore.kernel.org/r/20240510190246.3247730-16-jrife@google.com
Signed-off-by: Alexei Starovoitov <ast@kernel.org>

  Parent Hashes: 1e0a8367c89f82816735973d0e65a3c8e1b43179
  Refs: 

- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'This commit adds expanded selftests for EPERM scenarios involving connect, bind, and sendmsg_unix calls.', 'keywords': 'selftests, EPERM, sockaddr', 'commit_classification': "It's a test case or test infrastructure change.", 'commit_complexity': 'Moderate, requires some setup or understanding of the system. For example, a new map type or a new link type.', 'Major related component': 'The test cases and makefiles', 'program_types_related': ["It's not related to any of the above."]}
--------------------
--------------------
Processing Commit ID: 1e0a8367c89f82816735973d0e65a3c8e1b43179
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: 1e0a8367c89f82816735973d0e65a3c8e1b43179
  Author Name: Jordan Rife
  Author Email: jrife@google.com
  Commit Date: 1715559042
  Commit Message:
    selftests/bpf: Expand sockaddr program return value tests

This patch expands verifier coverage for program return values to cover
bind
  Parent Hashes: 61ecfdfce2647281e7d14119bfa529922ce2d8b2
  Refs:  connect

- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'The commit expands verifier tests for sockaddr program return values to include bind operations.', 'keywords': 'verifier,sockaddr,tests', 'commit_classification': "It's a test case or test infrastructure change.", 'commit_complexity': 'Moderate, requires some setup or understanding of the system. For example, a new map type or a new link type.', 'Major related component': 'The test cases and makefiles', 'program_types_related': ['It improves the overall eBPF infrastructure (e.g., verifier, runtime, etc.).']}
--------------------
--------------------
Processing Commit ID: 61ecfdfce2647281e7d14119bfa529922ce2d8b2
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: 61ecfdfce2647281e7d14119bfa529922ce2d8b2
  Author Name: Jordan Rife
  Author Email: jrife@google.com
  Commit Date: 1715559042
  Commit Message:
    selftests/bpf: Retire test_sock_addr.(c|sh)

Fully remove test_sock_addr.c and test_sock_addr.sh
  Parent Hashes: 9c3f17862faef89696d26655a6d10f90137df42e
  Refs:  as test coverage
has been fully moved to prog_tests/sock_addr.c.

Signed-off-by: Jordan Rife <jrife@google.com>
Link: https://lore.kernel.org/r/20240510190246.3247730-14-jrife@google.com
Signed-off-by: Alexei Starovoitov <ast@kernel.org>


- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'The commit removes obsolete test files due to test coverage relocation.', 'keywords': 'remove,test,coverage', 'commit_classification': "It's a cleanup or refactoring in the code.", 'commit_complexity': 'Simple, can be used without much configuration. For example, a simple helper function.', 'Major related component': 'The test cases and makefiles', 'program_types_related': ['socket like programs']}
--------------------
--------------------
Processing Commit ID: 9c3f17862faef89696d26655a6d10f90137df42e
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: 9c3f17862faef89696d26655a6d10f90137df42e
  Author Name: Jordan Rife
  Author Email: jrife@google.com
  Commit Date: 1715559042
  Commit Message:
    selftests/bpf: Remove redundant sendmsg test cases

Remove these test cases completely
  Parent Hashes: cded71f595c0c4396acc9657911c5aa2a289a8dc
  Refs:  as the same behavior is already
covered by other sendmsg* test cases in prog_tests/sock_addr.c. This
just rewrites the destination address similar to sendmsg_v4_prog and
sendmsg_v6_prog.

Signed-off-by: Jordan Rife <jrife@google.com>
Link: https://lore.kernel.org/r/20240510190246.3247730-13-jrife@google.com
Signed-off-by: Alexei Starovoitov <ast@kernel.org>


- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'Remove redundant sendmsg test cases in selftests/bpf.', 'keywords': 'remove, sendmsg, test cases', 'commit_classification': "It's a cleanup or refactoring in the code.", 'commit_complexity': 'Simple, can be used without much configuration. For example, a simple helper function.', 'Major related component': 'The test cases and makefiles', 'program_types_related': ['socket like programs']}
--------------------
--------------------
Processing Commit ID: cded71f595c0c4396acc9657911c5aa2a289a8dc
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: cded71f595c0c4396acc9657911c5aa2a289a8dc
  Author Name: Jordan Rife
  Author Email: jrife@google.com
  Commit Date: 1715559042
  Commit Message:
    selftests/bpf: Migrate ATTACH_REJECT test cases

Migrate test case from bpf/test_sock_addr.c ensuring that program
attachment fails when using an inappropriate attach type.

Signed-off-by: Jordan Rife <jrife@google.com>
Link: https://lore.kernel.org/r/20240510190246.3247730-12-jrife@google.com
Signed-off-by: Alexei Starovoitov <ast@kernel.org>

  Parent Hashes: b0f3af0bffefc54650d9fb10810fc2f974365dfd
  Refs: 

- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'Migrates ATTACH_REJECT test cases to ensure proper program attachment failure handling in selftests/bpf.', 'keywords': 'migrate, ATTACH_REJECT, selftests', 'commit_classification': "It's a test case or test infrastructure change.", 'commit_complexity': 'Moderate, requires some setup or understanding of the system. For example, a new map type or a new link type.', 'Major related component': 'The test cases and makefiles', 'program_types_related': ['tc/netfilter like programs', "It's not related to any of the above."]}
--------------------
--------------------
Processing Commit ID: b0f3af0bffefc54650d9fb10810fc2f974365dfd
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: b0f3af0bffefc54650d9fb10810fc2f974365dfd
  Author Name: Jordan Rife
  Author Email: jrife@google.com
  Commit Date: 1715559042
  Commit Message:
    selftests/bpf: Migrate expected_attach_type tests

Migrates tests from progs/test_sock_addr.c ensuring that programs fail
to load when the expected attach type does not match.

Signed-off-by: Jordan Rife <jrife@google.com>
Link: https://lore.kernel.org/r/20240510190246.3247730-11-jrife@google.com
Signed-off-by: Alexei Starovoitov <ast@kernel.org>

  Parent Hashes: 8eaf8056a44b28a7b198aa699e35854bbec2c452
  Refs: 

- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'This commit migrates bpf selftests to ensure program loading fails with incorrect attach types.', 'keywords': 'migrate, selftests, expected_attach_type', 'commit_classification': "It's a test case or test infrastructure change.", 'commit_complexity': 'Moderate, requires some setup or understanding of the system. For example, a new map type or a new link type.', 'Major related component': 'The test cases and makefiles', 'program_types_related': ['socket like programs']}
--------------------
--------------------
Processing Commit ID: 8eaf8056a44b28a7b198aa699e35854bbec2c452
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: 8eaf8056a44b28a7b198aa699e35854bbec2c452
  Author Name: Jordan Rife
  Author Email: jrife@google.com
  Commit Date: 1715559041
  Commit Message:
    selftests/bpf: Migrate wildcard destination rewrite test

Migrate test case from bpf/test_sock_addr.c ensuring that sendmsg
respects when sendmsg6 hooks rewrite the destination IP with the IPv6
wildcard IP
  Parent Hashes: 54462e8452f139e313e315959e005408cd31a4e6
  Refs:  [::].

Signed-off-by: Jordan Rife <jrife@google.com>
Link: https://lore.kernel.org/r/20240510190246.3247730-10-jrife@google.com
Signed-off-by: Alexei Starovoitov <ast@kernel.org>


- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'The commit migrates a test case to ensure sendmsg hooks handle IPv6 wildcard IPs correctly.', 'keywords': 'migrate,test case,sendmsg', 'commit_classification': "It's a test case or test infrastructure change.", 'commit_complexity': 'Moderate, requires some setup or understanding of the system. For example, a new map type or a new link type.', 'Major related component': 'The test cases and makefiles', 'program_types_related': ['socket like programs']}
--------------------
--------------------
Processing Commit ID: 54462e8452f139e313e315959e005408cd31a4e6
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: 54462e8452f139e313e315959e005408cd31a4e6
  Author Name: Jordan Rife
  Author Email: jrife@google.com
  Commit Date: 1715559041
  Commit Message:
    selftests/bpf: Migrate sendmsg6 v4 mapped address tests

Migrate test case from bpf/test_sock_addr.c ensuring that sendmsg
returns -ENOTSUPP when sending to an IPv4-mapped IPv6 address to
prog_tests/sock_addr.c.

Signed-off-by: Jordan Rife <jrife@google.com>
Link: https://lore.kernel.org/r/20240510190246.3247730-9-jrife@google.com
Signed-off-by: Alexei Starovoitov <ast@kernel.org>

  Parent Hashes: f46a10483b27cc5a62b45e7e727445de6430e785
  Refs: 

- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'Migrate IPv4-mapped IPv6 address test cases from bpf/test_sock_addr.c to prog_tests/sock_addr.c.', 'keywords': 'migrate, test case, sock_addr', 'commit_classification': "It's a test case or test infrastructure change.", 'commit_complexity': 'Moderate, requires some setup or understanding of the system. For example, a new map type or a new link type.', 'Major related component': 'The test cases and makefiles', 'program_types_related': ['It improves the overall eBPF infrastructure (e.g., verifier, runtime, etc.).']}
--------------------
--------------------
Processing Commit ID: f46a10483b27cc5a62b45e7e727445de6430e785
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: f46a10483b27cc5a62b45e7e727445de6430e785
  Author Name: Jordan Rife
  Author Email: jrife@google.com
  Commit Date: 1715559041
  Commit Message:
    selftests/bpf: Migrate sendmsg deny test cases

This set of tests checks that sendmsg calls are rejected (return -EPERM)
when the sendmsg* hook returns 0. Replace those in bpf/test_sock_addr.c
with corresponding tests in prog_tests/sock_addr.c.

Signed-off-by: Jordan Rife <jrife@google.com>
Link: https://lore.kernel.org/r/20240510190246.3247730-8-jrife@google.com
Signed-off-by: Alexei Starovoitov <ast@kernel.org>

  Parent Hashes: d1b24fcf1c16290ce8cac467be2f7d6773de9da4
  Refs: 

- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'Migrate sendmsg deny test cases from bpf/test_sock_addr.c to prog_tests/sock_addr.c.', 'keywords': 'migrate,test cases,sendmsg', 'commit_classification': "It's a test case or test infrastructure change.", 'commit_complexity': 'Simple, can be used without much configuration. For example, a simple helper function.', 'Major related component': 'The test cases and makefiles', 'program_types_related': ['socket like programs']}
--------------------
--------------------
Processing Commit ID: d1b24fcf1c16290ce8cac467be2f7d6773de9da4
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: d1b24fcf1c16290ce8cac467be2f7d6773de9da4
  Author Name: Jordan Rife
  Author Email: jrife@google.com
  Commit Date: 1715559041
  Commit Message:
    selftests/bpf: Migrate WILDCARD_IP test

Move wildcard IP sendmsg test case out of bpf/test_sock_addr.c into
prog_tests/sock_addr.c.

Signed-off-by: Jordan Rife <jrife@google.com>
Link: https://lore.kernel.org/r/20240510190246.3247730-7-jrife@google.com
Signed-off-by: Alexei Starovoitov <ast@kernel.org>

  Parent Hashes: a2618c0d854235deaac2325cf8200a55274afa2b
  Refs: 

- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'Migrated WILDCARD_IP test case to a new location in the source tree.', 'keywords': 'Migrate,test,WILDCARD_IP', 'commit_classification': "It's a test case or test infrastructure change.", 'commit_complexity': 'Simple, can be used without much configuration. For example, a simple helper function.', 'Major related component': 'The test cases and makefiles', 'program_types_related': ['socket like programs']}
--------------------
--------------------
Processing Commit ID: a2618c0d854235deaac2325cf8200a55274afa2b
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: a2618c0d854235deaac2325cf8200a55274afa2b
  Author Name: Jordan Rife
  Author Email: jrife@google.com
  Commit Date: 1715559041
  Commit Message:
    selftests/bpf: Handle SYSCALL_EPERM and SYSCALL_ENOTSUPP test cases

In preparation to move test cases from bpf/test_sock_addr.c that expect
system calls to return ENOTSUPP or EPERM
  Parent Hashes: 5a047b2226c0511d4528d1467dc90f08fffafc38
  Refs:  this patch propagates errno
from relevant system calls up to test_sock_addr() where the result can
be checked.

Signed-off-by: Jordan Rife <jrife@google.com>
Link: https://lore.kernel.org/r/20240510190246.3247730-6-jrife@google.com
Signed-off-by: Alexei Starovoitov <ast@kernel.org>


- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'The commit updates selftests for bpf to handle SYSCALL_EPERM and SYSCALL_ENOTSUPP cases in test_sock_addr.c.', 'keywords': 'selftests, SYSCALL_EPERM, SYSCALL_ENOTSUPP', 'commit_classification': "It's a test case or test infrastructure change.", 'commit_complexity': 'Moderate, requires some setup or understanding of the system. For example, a new map type or a new link type.', 'Major related component': 'The test cases and makefiles', 'program_types_related': ['socket like programs', 'It improves the overall eBPF infrastructure (e.g., verifier, runtime, etc.).']}
--------------------
--------------------
Processing Commit ID: 5a047b2226c0511d4528d1467dc90f08fffafc38
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: 5a047b2226c0511d4528d1467dc90f08fffafc38
  Author Name: Jordan Rife
  Author Email: jrife@google.com
  Commit Date: 1715559041
  Commit Message:
    selftests/bpf: Handle ATTACH_REJECT test cases

In preparation to move test cases from bpf/test_sock_addr.c that expect
ATTACH_REJECT
  Parent Hashes: 5eff48f33fb733de9b88a5381e0428f3e873c670
  Refs:  this patch adds BPF_SKEL_FUNCS_RAW to generate load and
destroy functions that use bpf_prog_attach() to control the attach_type.

The normal load functions use bpf_program__attach_cgroup which does not
have the same degree of control over the attach type

- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'This commit enhances selftests/bpf by handling ATTACH_REJECT test cases and improving attach type control in BPF skeleton functions.', 'keywords': 'selftests,bpf,ATTACH_REJECT', 'commit_classification': "It's a test case or test infrastructure change.", 'commit_complexity': 'Moderate, requires some setup or understanding of the system. For example, a new map type or a new link type.', 'Major related component': 'The test cases and makefiles', 'program_types_related': ['cgroup like programs']}
--------------------
--------------------
Processing Commit ID: 5eff48f33fb733de9b88a5381e0428f3e873c670
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: 5eff48f33fb733de9b88a5381e0428f3e873c670
  Author Name: Jordan Rife
  Author Email: jrife@google.com
  Commit Date: 1715559041
  Commit Message:
    selftests/bpf: Handle LOAD_REJECT test cases

In preparation to move test cases from bpf/test_sock_addr.c that expect
LOAD_REJECT
  Parent Hashes: 86b65c6db0190fb6c119e83da4de0eccf74fb1ff
  Refs:  this patch adds expected_attach_type and extends load_fn to
accept an expected attach type and a flag indicating whether or not
rejection is expected.

Signed-off-by: Jordan Rife <jrife@google.com>
Link: https://lore.kernel.org/r/20240510190246.3247730-4-jrife@google.com
Signed-off-by: Alexei Starovoitov <ast@kernel.org>


- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'Handle LOAD_REJECT test cases in selftests/bpf by adding expected_attach_type and extending load_fn function.', 'keywords': 'LOAD_REJECT,test cases,expected_attach_type', 'commit_classification': "It's a test case or test infrastructure change.", 'commit_complexity': 'Moderate, requires some setup or understanding of the system. For example, a new map type or a new link type.', 'Major related component': 'The test cases and makefiles', 'program_types_related': ['It improves the overall eBPF infrastructure (e.g., verifier, runtime, etc.).', "It's not related to any of the above."]}
--------------------
--------------------
Processing Commit ID: 86b65c6db0190fb6c119e83da4de0eccf74fb1ff
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: 86b65c6db0190fb6c119e83da4de0eccf74fb1ff
  Author Name: Jordan Rife
  Author Email: jrife@google.com
  Commit Date: 1715559040
  Commit Message:
    selftests/bpf: Use program name for skel load/destroy functions

In preparation to migrate tests from bpf/test_sock_addr.c to
sock_addr.c
  Parent Hashes: 73964e9085bbea517a675d5d8ceeb1e609a34748
  Refs:  update BPF_SKEL_FUNCS so that it generates functions
based on prog_name instead of skel_name. This allows us to differentiate
between programs in the same skeleton.

Signed-off-by: Jordan Rife <jrife@google.com>
Link: https://lore.kernel.org/r/20240510190246.3247730-3-jrife@google.com
Signed-off-by: Alexei Starovoitov <ast@kernel.org>


- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'The commit updates BPF_SKEL_FUNCS to use program names for load/destroy functions in bpf self-tests, aiding migration of test_sock_addr to sock_addr.', 'keywords': 'BPF_SKEL_FUNCS, self-tests, program names', 'commit_classification': "It's a test case or test infrastructure change.", 'commit_complexity': 'Moderate, requires some setup or understanding of the system. For example, a new map type or a new link type.', 'Major related component': 'The test cases and makefiles', 'program_types_related': ['It improves the overall eBPF infrastructure (e.g., verifier, runtime, etc.).']}
--------------------
--------------------
Processing Commit ID: 73964e9085bbea517a675d5d8ceeb1e609a34748
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: 73964e9085bbea517a675d5d8ceeb1e609a34748
  Author Name: Jordan Rife
  Author Email: jrife@google.com
  Commit Date: 1715559040
  Commit Message:
    selftests/bpf: Migrate recvmsg* return code tests to verifier_sock_addr.c

This set of tests check that the BPF verifier rejects programs with
invalid return codes (recvmsg4 and recvmsg6 hooks can only return 1).
This patch replaces the tests in test_sock_addr.c with
verifier_sock_addr.c
  Parent Hashes: 20a759df3bba35bf5c3ddec0c02ad69b603b584c
  Refs:  a new verifier prog_tests for sockaddr hooks

- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'Migrate and verify BPF tests for recvmsg return codes to verifier_sock_addr.c.', 'keywords': 'BPF verifier, recvmsg, tests', 'commit_classification': "It's a test case or test infrastructure change.", 'commit_complexity': 'Moderate, requires some setup or understanding of the system. For example, a new map type or a new link type.', 'Major related component': 'The test cases and makefiles', 'program_types_related': ['socket like programs']}
--------------------
--------------------
Processing Commit ID: ea558c86248b4955e5c5f3c0c921df450880605e
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: ea558c86248b4955e5c5f3c0c921df450880605e
  Author Name: Namhyung Kim
  Author Email: namhyung@kernel.org
  Commit Date: 1715558992
  Commit Message:
    tools lib subcmd: Show parent options in help

I've just realized that help message in a subcommand didn't show one
in the parent command.  Since the option parser understands the parent
  Parent Hashes: d9c5f5f94c2d356fdf3503f7fcaf254512bc032d
  Refs: 
display code should do the same.  For example

- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'Updated help message to show parent options in subcommands for tools library.', 'keywords': 'help, subcommand, parser', 'commit_classification': "It's a cleanup or refactoring in the code.", 'commit_complexity': 'Simple, can be used without much configuration. For example, a simple helper function.', 'Major related component': 'The libbpf library', 'program_types_related': ["It's not related to any of the above."]}
--------------------
--------------------
Processing Commit ID: 20a759df3bba35bf5c3ddec0c02ad69b603b584c
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: 20a759df3bba35bf5c3ddec0c02ad69b603b584c
  Author Name: Puranjay Mohan
  Author Email: puranjay@kernel.org
  Commit Date: 1715558406
  Commit Message:
    riscv
  Parent Hashes: 80c5a07ae673a740ef7ef0fe1ab588075a25ce8d
  Refs:  bpf: make some atomic operations fully ordered

The BPF atomic operations with the BPF_FETCH modifier along with
BPF_XCHG and BPF_CMPXCHG are fully ordered but the RISC-V JIT implements
all atomic operations except BPF_CMPXCHG with relaxed ordering.

Section 8.1 of the "The RISC-V Instruction Set Manual Volume I:
Unprivileged ISA" [1]

- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'RISC-V JIT updates atomic operations to be fully ordered in BPF contexts.', 'keywords': 'RISC-V, atomic, JIT', 'commit_classification': "It's a bug fix.", 'commit_complexity': 'Moderate, requires some setup or understanding of the system. For example, a new map type or a new link type.', 'Major related component': 'The JIT compiler', 'program_types_related': ['It improves the overall eBPF infrastructure (e.g., verifier, runtime, etc.).']}
--------------------
--------------------
Processing Commit ID: 80c5a07ae673a740ef7ef0fe1ab588075a25ce8d
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: 80c5a07ae673a740ef7ef0fe1ab588075a25ce8d
  Author Name: Xiao Wang
  Author Email: xiao.w.wang@intel.com
  Commit Date: 1715558203
  Commit Message:
    riscv
  Parent Hashes: 68378982f0b21de02ac3c6a11e2420badefcb4bc
  Refs:  bpf: Fix typo in comment

We can use either "instruction" or "insn" in the comment.

Signed-off-by: Xiao Wang <xiao.w.wang@intel.com>
Reviewed-by: Pu Lehui <pulehui@huawei.com>
Link: https://lore.kernel.org/r/20240507111618.437121-1-xiao.w.wang@intel.com
Signed-off-by: Alexei Starovoitov <ast@kernel.org>


- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'Fix a typo in a comment for the RISC-V architecture support in eBPF.', 'keywords': 'typo,fixed,comment', 'commit_classification': "It's a documentation change or typo fix.", 'commit_complexity': 'Simple, can be used without much configuration. For example, a simple helper function.', 'Major related component': 'Other component related to eBPF but not listed above.', 'program_types_related': ["It's not related to any of the above."]}
--------------------
--------------------
Processing Commit ID: 68378982f0b21de02ac3c6a11e2420badefcb4bc
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: 68378982f0b21de02ac3c6a11e2420badefcb4bc
  Author Name: Ilya Leoshkevich
  Author Email: iii@linux.ibm.com
  Commit Date: 1715558157
  Commit Message:
    s390/bpf: Emit a barrier for BPF_FETCH instructions

BPF_ATOMIC_OP() macro documentation states that "BPF_ADD | BPF_FETCH"
should be the same as atomic_fetch_add()
  Parent Hashes: 55302bc1ca64160fec4dfa25e52142691ecb5dcd
  Refs:  which is currently not the
case on s390x: the serialization instruction "bcr 14

- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'The commit addresses a serialization issue on s390x with BPF_FETCH instructions, ensuring proper atomic operations.', 'keywords': 's390,bpf,atomic', 'commit_classification': "It's a bug fix.", 'commit_complexity': 'Moderate, requires some setup or understanding of the system. For example, a new map type or a new link type.', 'Major related component': 'The JIT compiler', 'program_types_related': ['It improves the overall eBPF infrastructure (e.g., verifier, runtime, etc.).']}
--------------------
--------------------
Processing Commit ID: 55302bc1ca64160fec4dfa25e52142691ecb5dcd
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: 55302bc1ca64160fec4dfa25e52142691ecb5dcd
  Author Name: Alexei Starovoitov
  Author Email: ast@kernel.org
  Commit Date: 1715558075
  Commit Message:
    Merge branch 'bpf-inline-helpers-in-arm64-and-riscv-jits'

Puranjay Mohan says:

====================
bpf: Inline helpers in arm64 and riscv JITs

Changes in v5 -> v6:
arm64 v5: https://lore.kernel.org/all/20240430234739.79185-1-puranjay@kernel.org/
riscv v2: https://lore.kernel.org/all/20240430175834.33152-1-puranjay@kernel.org/
- Combine riscv and arm64 changes in single series
- Some coding style fixes

Changes in v4 -> v5:
v4: https://lore.kernel.org/all/20240429131647.50165-1-puranjay@kernel.org/
- Implement the inlining of the bpf_get_smp_processor_id() in the JIT.

NOTE: This needs to be based on:
https://lore.kernel.org/all/20240430175834.33152-1-puranjay@kernel.org/
to be built.

Manual run of bpf-ci with this series rebased on above:
https://github.com/kernel-patches/bpf/pull/6929

Changes in v3 -> v4:
v3: https://lore.kernel.org/all/20240426121349.97651-1-puranjay@kernel.org/
- Fix coding style issue related to C89 standards.

Changes in v2 -> v3:
v2: https://lore.kernel.org/all/20240424173550.16359-1-puranjay@kernel.org/
- Fixed the xlated dump of percpu mov to "r0 = &(void __percpu *)(r0)"
- Made ARM64 and x86-64 use the same code for inlining. The only difference
  that remains is the per-cpu address of the cpu_number.

Changes in v1 -> v2:
v1: https://lore.kernel.org/all/20240405091707.66675-1-puranjay12@gmail.com/
- Add a patch to inline bpf_get_smp_processor_id()
- Fix an issue in MRS instruction encoding as pointed out by Will
- Remove CONFIG_SMP check because arm64 kernel always compiles with CONFIG_SMP

This series adds the support of internal only per-CPU instructions and inlines
the bpf_get_smp_processor_id() helper call for ARM64 and RISC-V BPF JITs.

Here is an example of calls to bpf_get_smp_processor_id() and
percpu_array_map_lookup_elem() before and after this series on ARM64.

                                         BPF
                                        =====
              BEFORE                                       AFTER
             --------                                     -------

int cpu = bpf_get_smp_processor_id();           int cpu = bpf_get_smp_processor_id();
(85) call bpf_get_smp_processor_id#229032       (85) call bpf_get_smp_processor_id#8

p = bpf_map_lookup_elem(map
  Parent Hashes: f122668ddcce450c2585f0be4bf4478d6fd6176b 75fe4c0b3e181f5e3b990128013ac192fdfd4012
  Refs:  &zero);            p = bpf_map_lookup_elem(map

- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'The commit merges inline helper support for ARM64 and RISC-V JITs in the BPF subsystem.', 'keywords': 'inline helpers, ARM64, RISC-V', 'commit_classification': "It's a performance optimization.", 'commit_complexity': 'Moderate, requires some setup or understanding of the system. For example, a new map type or a new link type.', 'Major related component': 'The JIT compiler', 'program_types_related': ['It improves the overall eBPF infrastructure (e.g., verifier, runtime, etc.).']}
--------------------
--------------------
Processing Commit ID: 75fe4c0b3e181f5e3b990128013ac192fdfd4012
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: 75fe4c0b3e181f5e3b990128013ac192fdfd4012
  Author Name: Puranjay Mohan
  Author Email: puranjay@kernel.org
  Commit Date: 1715558074
  Commit Message:
    bpf
  Parent Hashes: 7a4c32222b0e14349a6311e72bf6ebd3e1d1064b
  Refs:  arm64: inline bpf_get_smp_processor_id() helper

Inline calls to bpf_get_smp_processor_id() helper in the JIT by emitting
a read from struct thread_info. The SP_EL0 system register holds the
pointer to the task_struct and thread_info is the first member of this
struct. We can read the cpu number from the thread_info.

Here is how the ARM64 JITed assembly changes after this commit:

                                      ARM64 JIT
                                     ===========

              BEFORE                                    AFTER
             --------                                  -------

int cpu = bpf_get_smp_processor_id();        int cpu = bpf_get_smp_processor_id();

mov     x10

- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'Inline calls to bpf_get_smp_processor_id in ARM64 JIT using thread_info.', 'keywords': 'inline,JIT,ARM64', 'commit_classification': "It's a performance optimization.", 'commit_complexity': 'Moderate, requires some setup or understanding of the system. For example, a new map type or a new link type.', 'Major related component': 'The JIT compiler', 'program_types_related': ['It improves the overall eBPF infrastructure (e.g., verifier, runtime, etc.).']}
--------------------
--------------------
Processing Commit ID: 7a4c32222b0e14349a6311e72bf6ebd3e1d1064b
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: 7a4c32222b0e14349a6311e72bf6ebd3e1d1064b
  Author Name: Puranjay Mohan
  Author Email: puranjay12@gmail.com
  Commit Date: 1715558074
  Commit Message:
    arm64
  Parent Hashes: 2ddec2c80b4402c293c7e6e0881cecaaf77e8cec
  Refs:  bpf: add internal-only MOV instruction to resolve per-CPU addrs

Support an instruction for resolving absolute addresses of per-CPU
data from their per-CPU offsets. This instruction is internal-only and
users are not allowed to use them directly. They will only be used for
internal inlining optimizations for now between BPF verifier and BPF
JITs.

Since commit 7158627686f0 ("arm64: percpu: implement optimised pcpu
access using tpidr_el1")

- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'Add internal-only MOV instruction for resolving absolute addresses of per-CPU data for inlining optimizations in BPF verifier and JITs on arm64.', 'keywords': 'MOV instruction, per-CPU, optimization', 'commit_classification': "It's a performance optimization.", 'commit_complexity': 'Moderate, requires some setup or understanding of the system. For example, a new map type or a new link type.', 'Major related component': 'The JIT compiler', 'program_types_related': ['It improves the overall eBPF infrastructure (e.g., verifier, runtime, etc.).']}
--------------------
--------------------
Processing Commit ID: 2ddec2c80b4402c293c7e6e0881cecaaf77e8cec
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: 2ddec2c80b4402c293c7e6e0881cecaaf77e8cec
  Author Name: Puranjay Mohan
  Author Email: puranjay@kernel.org
  Commit Date: 1715558074
  Commit Message:
    riscv
  Parent Hashes: 19c56d4e5be102cd118162b9f72d9c6d353e76fc
  Refs:  bpf: inline bpf_get_smp_processor_id()

Inline the calls to bpf_get_smp_processor_id() in the riscv bpf jit.

RISCV saves the pointer to the CPU's task_struct in the TP (thread
pointer) register. This makes it trivial to get the CPU's processor id.
As thread_info is the first member of task_struct

- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'Inline bpf_get_smp_processor_id() calls in the RISC-V BPF JIT for efficient CPU processor ID retrieval.', 'keywords': 'inline,RISC-V,JIT', 'commit_classification': "It's a performance optimization.", 'commit_complexity': 'Moderate, requires some setup or understanding of the system. For example, a new map type or a new link type.', 'Major related component': 'The JIT compiler', 'program_types_related': ['It improves the overall eBPF infrastructure (e.g., verifier, runtime, etc.).']}
--------------------
--------------------
Processing Commit ID: 19c56d4e5be102cd118162b9f72d9c6d353e76fc
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: 19c56d4e5be102cd118162b9f72d9c6d353e76fc
  Author Name: Puranjay Mohan
  Author Email: puranjay@kernel.org
  Commit Date: 1715558074
  Commit Message:
    riscv
  Parent Hashes: f122668ddcce450c2585f0be4bf4478d6fd6176b
  Refs:  bpf: add internal-only MOV instruction to resolve per-CPU addrs

Support an instruction for resolving absolute addresses of per-CPU
data from their per-CPU offsets. This instruction is internal-only and
users are not allowed to use them directly. They will only be used for
internal inlining optimizations for now between BPF verifier and BPF
JITs.

RISC-V uses generic per-cpu implementation where the offsets for CPUs
are kept in an array called __per_cpu_offset[cpu_number]. RISCV stores
the address of the task_struct in TP register. The first element in
task_struct is struct thread_info

- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'Add an internal-only MOV instruction for resolving per-CPU addresses in RISC-V architecture.', 'keywords': 'MOV instruction,RISC-V,per-CPU', 'commit_classification': "It's a performance optimization.", 'commit_complexity': 'Moderate, requires some setup or understanding of the system. For example, a new map type or a new link type.', 'Major related component': 'The JIT compiler', 'program_types_related': ['It improves the overall eBPF infrastructure (e.g., verifier, runtime, etc.).']}
--------------------
--------------------
Processing Commit ID: f122668ddcce450c2585f0be4bf4478d6fd6176b
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: f122668ddcce450c2585f0be4bf4478d6fd6176b
  Author Name: Shahab Vahedi
  Author Email: shahab@synopsys.com
  Commit Date: 1715557896
  Commit Message:
    ARC: Add eBPF JIT support

This will add eBPF JIT support to the 32-bit ARCv2 processors. The
implementation is qualified by running the BPF tests on a Synopsys HSDK
board with "ARC HS38 v2.1c at 500 MHz" as the 4-core CPU.

The test_bpf.ko reports 2-10 fold improvements in execution time of its
tests. For instance:

test_bpf: #33 tcpdump port 22 jited:0 704 1766 2104 PASS
test_bpf: #33 tcpdump port 22 jited:1 120  224  260 PASS

test_bpf: #141 ALU_DIV_X: 4294967295 / 4294967295 = 1 jited:0 238 PASS
test_bpf: #141 ALU_DIV_X: 4294967295 / 4294967295 = 1 jited:1  23 PASS

test_bpf: #776 JMP32_JGE_K: all ... magnitudes jited:0 2034681 PASS
test_bpf: #776 JMP32_JGE_K: all ... magnitudes jited:1 1020022 PASS

Deployment and structure
------------------------
The related codes are added to "arch/arc/net":

- bpf_jit.h       -- The interface that a back-end translator must provide
- bpf_jit_core.c  -- Knows how to handle the input eBPF byte stream
- bpf_jit_arcv2.c -- The back-end code that knows the translation logic

The bpf_int_jit_compile() at the end of bpf_jit_core.c is the entrance
to the whole process. Normally
  Parent Hashes: fcd1ed89a0439c45e1336bd9649485c44b7597c7
  Refs:  the translation is done in one pass

- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'Adds eBPF JIT support to 32-bit ARCv2 processors for improved performance.', 'keywords': 'eBPF JIT support, ARCv2, performance', 'commit_classification': "It's a new feature.", 'commit_complexity': "Complex, needs expert knowledge or significant changes to existing systems. Like adding a completely new subsystem support or a completely new program type don't exist before.", 'Major related component': 'The JIT compiler', 'program_types_related': ['It improves the overall eBPF infrastructure (e.g., verifier, runtime, etc.).']}
--------------------
--------------------
Processing Commit ID: fcd1ed89a0439c45e1336bd9649485c44b7597c7
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: fcd1ed89a0439c45e1336bd9649485c44b7597c7
  Author Name: Alan Maguire
  Author Email: alan.maguire@oracle.com
  Commit Date: 1715291075
  Commit Message:
    kbuild
  Parent Hashes: 0d03a4d24bfa4f806ddc2cfa8ebd0eac81139b23
  Refs: bpf: Switch to using --btf_features for pahole v1.26 and later

The btf_features list can be used for pahole v1.26 and later -
it is useful because if a feature is not yet implemented it will
not exit with a failure message.  This will allow us to add feature
requests to the pahole options without having to check pahole versions
in future; if the version of pahole supports the feature it will be
added.

Signed-off-by: Alan Maguire <alan.maguire@oracle.com>
Signed-off-by: Andrii Nakryiko <andrii@kernel.org>
Tested-by: Eduard Zingerman <eddyz87@gmail.com>
Acked-by: Andrii Nakryiko <andrii@kernel.org>
Link: https://lore.kernel.org/bpf/20240507135514.490467-1-alan.maguire@oracle.com


- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'Enable btf_features for pahole v1.26+ to avoid compatibility issues with future feature requests.', 'keywords': 'btf_features,pahole,compatibility', 'commit_classification': "It's a build system or CI/CD change.", 'commit_complexity': 'Moderate, requires some setup or understanding of the system. For example, a new map type or a new link type.', 'Major related component': 'Other component related to eBPF but not listed above.', 'program_types_related': ['It improves the overall eBPF infrastructure (e.g., verifier, runtime, etc.).']}
--------------------
--------------------
Processing Commit ID: 7abbf38cd8edb92bc72fe3405f8a0bf19f7761c2
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: 7abbf38cd8edb92bc72fe3405f8a0bf19f7761c2
  Author Name: Geliang Tang
  Author Email: tanggeliang@kylinos.cn
  Commit Date: 1715287238
  Commit Message:
    selftests/bpf: Drop get_port in test_tcp_check_syncookie

The arguments "addr" and "len" of run_test() have dropped. This makes
function get_port() useless. Drop it from test_tcp_check_syncookie_user.c.

Signed-off-by: Geliang Tang <tanggeliang@kylinos.cn>
Link: https://lore.kernel.org/r/a9b5c8064ab4cbf0f68886fe0e4706428b8d0d47.1714907662.git.tanggeliang@kylinos.cn
Signed-off-by: Martin KaFai Lau <martin.lau@kernel.org>

  Parent Hashes: 65a3f0df44dd3db0f77e6ccff0a126969abc0da4
  Refs: 

- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'Removed the unused get_port function from test_tcp_check_syncookie due to dropped arguments.', 'keywords': 'Dropped, test, function', 'commit_classification': "It's a cleanup or refactoring in the code.", 'commit_complexity': 'Simple, can be used without much configuration. For example, a simple helper function.', 'Major related component': 'The test cases and makefiles', 'program_types_related': ["It's not related to any of the above."]}
--------------------
--------------------
Processing Commit ID: 65a3f0df44dd3db0f77e6ccff0a126969abc0da4
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: 65a3f0df44dd3db0f77e6ccff0a126969abc0da4
  Author Name: Geliang Tang
  Author Email: tanggeliang@kylinos.cn
  Commit Date: 1715287238
  Commit Message:
    selftests/bpf: Use connect_to_fd in test_tcp_check_syncookie

This patch uses public helper connect_to_fd() exported in network_helpers.h
instead of the local defined function connect_to_server() in
test_tcp_check_syncookie_user.c. This can avoid duplicate code.

Then the arguments "addr" and "len" of run_test() become useless
  Parent Hashes: 5059c73eca67e686dea42af079c41857cb00a5a6
  Refs:  drop them
too.

Signed-off-by: Geliang Tang <tanggeliang@kylinos.cn>
Link: https://lore.kernel.org/r/e0ae6b790ac0abc7193aadfb2660c8c9eb0fe1f0.1714907662.git.tanggeliang@kylinos.cn
Signed-off-by: Martin KaFai Lau <martin.lau@kernel.org>


- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'The commit replaces a locally defined function with a public helper to reduce code duplication in a BPF selftest.', 'keywords': 'selftests,bpf,connect_to_fd', 'commit_classification': "It's a cleanup or refactoring in the code.", 'commit_complexity': 'Simple, can be used without much configuration. For example, a simple helper function.', 'Major related component': 'The test cases and makefiles', 'program_types_related': ['tracepoints like programs']}
--------------------
--------------------
Processing Commit ID: 5059c73eca67e686dea42af079c41857cb00a5a6
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: 5059c73eca67e686dea42af079c41857cb00a5a6
  Author Name: Geliang Tang
  Author Email: tanggeliang@kylinos.cn
  Commit Date: 1715287238
  Commit Message:
    selftests/bpf: Use connect_to_fd in sockopt_inherit

This patch uses public helper connect_to_fd() exported in network_helpers.h
instead of the local defined function connect_to_server() in
prog_tests/sockopt_inherit.c. This can avoid duplicate code.

Signed-off-by: Geliang Tang <tanggeliang@kylinos.cn>
Link: https://lore.kernel.org/r/71db79127cc160b0643fd9a12c70ae019ae076a1.1714907662.git.tanggeliang@kylinos.cn
Signed-off-by: Martin KaFai Lau <martin.lau@kernel.org>

  Parent Hashes: 49e1fa8dbd81340f610057be3f3909f24c232807
  Refs: 

- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'Refactored sockopt_inherit test to use connect_to_fd from network_helpers.h, replacing local connect_to_server to eliminate code duplication.', 'keywords': 'refactoring, selftests, duplication', 'commit_classification': "It's a cleanup or refactoring in the code.", 'commit_complexity': 'Simple, can be used without much configuration. For example, a simple helper function.', 'Major related component': 'The test cases and makefiles', 'program_types_related': ['socket like programs']}
--------------------
--------------------
Processing Commit ID: 49e1fa8dbd81340f610057be3f3909f24c232807
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: 49e1fa8dbd81340f610057be3f3909f24c232807
  Author Name: Geliang Tang
  Author Email: tanggeliang@kylinos.cn
  Commit Date: 1715287238
  Commit Message:
    selftests/bpf: Use start_server_addr in test_tcp_check_syncookie

Include network_helpers.h in test_tcp_check_syncookie_user.c
  Parent Hashes: 5166b3e3e30a8eb93f7182283ed4db719bdfde1a
  Refs:  use
public helper start_server_addr() in it instead of the local defined
function start_server(). This can avoid duplicate code.

Add two helpers v6only_true() and v6only_false() to set IPV6_V6ONLY
sockopt to true or false

- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'The commit refactors test_tcp_check_syncookie to use start_server_addr and adds helpers to manage IPV6_V6ONLY sockopt.', 'keywords': 'refactor, helpers, IPV6_V6ONLY', 'commit_classification': "It's a cleanup or refactoring in the code.", 'commit_complexity': 'Moderate, requires some setup or understanding of the system. For example, a new map type or a new link type.', 'Major related component': 'The test cases and makefiles', 'program_types_related': ["It's not related to any of the above."]}
--------------------
--------------------
Processing Commit ID: 5166b3e3e30a8eb93f7182283ed4db719bdfde1a
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: 5166b3e3e30a8eb93f7182283ed4db719bdfde1a
  Author Name: Geliang Tang
  Author Email: tanggeliang@kylinos.cn
  Commit Date: 1715287238
  Commit Message:
    selftests/bpf: Use start_server_addr in sockopt_inherit

Include network_helpers.h in prog_tests/sockopt_inherit.c
  Parent Hashes: 20434d2d896f85b38fa1fe91b8739afcd9cde3b3
  Refs:  use public
helper start_server_addr() instead of the local defined function
start_server(). This can avoid duplicate code.

Add a helper custom_cb() to set SOL_CUSTOM sockopt looply

- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'Refactor sockopt_inherit.c to use network_helpers and add custom_cb for SOL_CUSTOM sockopt loop.', 'keywords': 'network_helpers sockopt custom_cb', 'commit_classification': "It's a cleanup or refactoring in the code.", 'commit_complexity': 'Moderate, requires some setup or understanding of the system. For example, a new map type or a new link type.', 'Major related component': 'The test cases and makefiles', 'program_types_related': ['socket like programs']}
--------------------
--------------------
Processing Commit ID: 20434d2d896f85b38fa1fe91b8739afcd9cde3b3
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: 20434d2d896f85b38fa1fe91b8739afcd9cde3b3
  Author Name: Geliang Tang
  Author Email: tanggeliang@kylinos.cn
  Commit Date: 1715287229
  Commit Message:
    selftests/bpf: Add post_socket_cb for network_helper_opts

__start_server() sets SO_REUSPORT through setsockopt() when the parameter
'reuseport' is set. This patch makes it more flexible by adding a function
pointer post_socket_cb into struct network_helper_opts. The
'const struct post_socket_opts *cb_opts' args in the post_socket_cb is
for the future extension.

The 'reuseport' parameter can be dropped.
Now the original start_reuseport_server() can be implemented by setting a
newly defined reuseport_cb() function pointer to post_socket_cb filed of
struct network_helper_opts.

Signed-off-by: Geliang Tang <tanggeliang@kylinos.cn>
Link: https://lore.kernel.org/r/470cb82f209f055fc7fb39c66c6b090b5b7ed2b2.1714907662.git.tanggeliang@kylinos.cn
Signed-off-by: Martin KaFai Lau <martin.lau@kernel.org>

  Parent Hashes: cbe35adf691a3227b11131a922245c4d6409d2d6
  Refs: 

- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'Introduced post_socket_cb function pointer to enhance flexibility in network_helper_opts for setting SO_REUSEPORT.', 'keywords': 'post_socket_cb,function pointer,network_helper_opts', 'commit_classification': "It's a test case or test infrastructure change.", 'commit_complexity': 'Moderate, requires some setup or understanding of the system. For example, a new map type or a new link type.', 'Major related component': 'The test cases and makefiles', 'program_types_related': ['socket like programs']}
--------------------
--------------------
Processing Commit ID: cbe35adf691a3227b11131a922245c4d6409d2d6
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: cbe35adf691a3227b11131a922245c4d6409d2d6
  Author Name: Alexei Starovoitov
  Author Email: ast@kernel.org
  Commit Date: 1715278393
  Commit Message:
    Merge branch 'selftests-bpf-retire-bpf_tcp_helpers-h'

Martin KaFai Lau says:

====================
selftests/bpf: Retire bpf_tcp_helpers.h

From: Martin KaFai Lau <martin.lau@kernel.org>

The earlier commit 8e6d9ae2e09f ("selftests/bpf: Use bpf_tracing.h instead of bpf_tcp_helpers.h")
removed the bpf_tcp_helpers.h usages from the non networking tests.

This patch set is a continuation of this effort to retire
the bpf_tcp_helpers.h from the networking tests (mostly tcp-cc related).

The main usage of the bpf_tcp_helpers.h is the partial kernel
socket definitions (e.g. sock
  Parent Hashes: 009367099eb61a4fc2af44d4eb06b6b4de7de6db 6a650816b098a15c4690a22e3889858264d01aa8
  Refs:  tcp_sock). New fields are kept adding
back to those partial socket definitions while everything is available
in the vmlinux.h. The recent bpf_cc_cubic.c test tried to extend
bpf_tcp_helpers.c but eventually used the vmlinux.h instead. To avoid
this unnecessary detour for new tests and have one consistent way
of using the kernel sockets

- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'This commit retires the bpf_tcp_helpers.h from networking tests for consistent kernel socket usage via vmlinux.h.', 'keywords': 'retire, bpf_tcp_helpers, vmlinux', 'commit_classification': "It's a test case or test infrastructure change.", 'commit_complexity': 'Moderate, requires some setup or understanding of the system. For example, a new map type or a new link type.', 'Major related component': 'The test cases and makefiles', 'program_types_related': ['tc/netfilter like programs']}
--------------------
--------------------
Processing Commit ID: 6a650816b098a15c4690a22e3889858264d01aa8
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: 6a650816b098a15c4690a22e3889858264d01aa8
  Author Name: Martin KaFai Lau
  Author Email: martin.lau@kernel.org
  Commit Date: 1715278392
  Commit Message:
    selftests/bpf: Retire bpf_tcp_helpers.h

The previous patches have consolidated the tests to use
bpf_tracing_net.h (i.e. vmlinux.h) instead of bpf_tcp_helpers.h.

This patch can finally retire the bpf_tcp_helpers.h from
the repository.

Signed-off-by: Martin KaFai Lau <martin.lau@kernel.org>
Link: https://lore.kernel.org/r/20240509175026.3423614-11-martin.lau@linux.dev
Signed-off-by: Alexei Starovoitov <ast@kernel.org>

  Parent Hashes: c075c9c4af289bb5956b0164283a85cf9c293c8e
  Refs: 

- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'The commit retires bpf_tcp_helpers.h in favor of using bpf_tracing_net.h for selftests.', 'keywords': 'retire,bpf_tcp_helpers.h,bpf_tracing_net.h', 'commit_classification': "It's a cleanup or refactoring in the code.", 'commit_complexity': 'Simple, can be used without much configuration. For example, a simple helper function.', 'Major related component': 'The test cases and makefiles', 'program_types_related': ['tracepoints like programs']}
--------------------
--------------------
Processing Commit ID: c075c9c4af289bb5956b0164283a85cf9c293c8e
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: c075c9c4af289bb5956b0164283a85cf9c293c8e
  Author Name: Martin KaFai Lau
  Author Email: martin.lau@kernel.org
  Commit Date: 1715278392
  Commit Message:
    selftests/bpf: Remove the bpf_tcp_helpers.h usages from other non tcp-cc tests

The patch removes the remaining bpf_tcp_helpers.h usages in the
non tcp-cc networking tests. It either replaces it with bpf_tracing_net.h
or just removed it because the test is not actually using any
kernel sockets. For the later
  Parent Hashes: 6eee55aa769c241182da73a391980f51edba27dc
  Refs:  the missing macro (mainly SOL_TCP) is
defined locally.

An exception is the test_sock_fields which is testing
the "struct bpf_sock" type instead of the kernel sock type.
Whenever "vmlinux.h" is used instead

- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'The commit removes inappropriate bpf_tcp_helpers.h references from non tcp-cc networking tests and updates test_sock_fields to use vmlinux.h.', 'keywords': 'bpf_tcp_helpers,non tcp-cc,vmlinux', 'commit_classification': "It's a cleanup or refactoring in the code.", 'commit_complexity': 'Simple, can be used without much configuration. For example, a simple helper function.', 'Major related component': 'The test cases and makefiles', 'program_types_related': ['tracepoints like programs', 'It improves the overall eBPF infrastructure (e.g., verifier, runtime, etc.).']}
--------------------
--------------------
Processing Commit ID: 6eee55aa769c241182da73a391980f51edba27dc
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: 6eee55aa769c241182da73a391980f51edba27dc
  Author Name: Martin KaFai Lau
  Author Email: martin.lau@kernel.org
  Commit Date: 1715278392
  Commit Message:
    selftests/bpf: Remove bpf_tcp_helpers.h usages from other misc bpf tcp-cc tests

This patch removed the final few bpf_tcp_helpers.h usages
in some misc bpf tcp-cc tests and replace it with
bpf_tracing_net.h (i.e. vmlinux.h)

Signed-off-by: Martin KaFai Lau <martin.lau@kernel.org>
Link: https://lore.kernel.org/r/20240509175026.3423614-9-martin.lau@linux.dev
Signed-off-by: Alexei Starovoitov <ast@kernel.org>

  Parent Hashes: 6ad4e6e94697e960630594907666bc09e78a3b8a
  Refs: 

- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'The commit removes usages of bpf_tcp_helpers.h in BPF tcp-cc tests and replaces it with bpf_tracing_net.h.', 'keywords': 'bpf_tcp_helpers.h,tcp-cc,bpf_tracing_net.h', 'commit_classification': "It's a cleanup or refactoring in the code.", 'commit_complexity': 'Simple, can be used without much configuration. For example, a simple helper function.', 'Major related component': 'The test cases and makefiles', 'program_types_related': ['tracepoints like programs']}
--------------------
--------------------
Processing Commit ID: 6ad4e6e94697e960630594907666bc09e78a3b8a
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: 6ad4e6e94697e960630594907666bc09e78a3b8a
  Author Name: Martin KaFai Lau
  Author Email: martin.lau@kernel.org
  Commit Date: 1715278392
  Commit Message:
    selftests/bpf: Use bpf_tracing_net.h in bpf_dctcp

This patch uses bpf_tracing_net.h (i.e. vmlinux.h) in bpf_dctcp.
This will allow to retire the bpf_tcp_helpers.h and consolidate
tcp-cc tests to vmlinux.h.

It will have a dup on min/max macros with the bpf_cubic. It could
be further refactored in the future.

Signed-off-by: Martin KaFai Lau <martin.lau@kernel.org>
Link: https://lore.kernel.org/r/20240509175026.3423614-8-martin.lau@linux.dev
Signed-off-by: Alexei Starovoitov <ast@kernel.org>

  Parent Hashes: a824c9a8a4d9a654d62674a8425c0f1abc9c3d33
  Refs: 

- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'The commit updates bpf_dctcp to use bpf_tracing_net.h, allowing tcp-cc tests consolidation into vmlinux.h.', 'keywords': 'bpf_dctcp,bpf_tracing_net,consolidation', 'commit_classification': "It's a cleanup or refactoring in the code.", 'commit_complexity': 'Moderate, requires some setup or understanding of the system. For example, a new map type or a new link type.', 'Major related component': 'The test cases and makefiles', 'program_types_related': ['tracepoints like programs']}
--------------------
--------------------
Processing Commit ID: a824c9a8a4d9a654d62674a8425c0f1abc9c3d33
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: a824c9a8a4d9a654d62674a8425c0f1abc9c3d33
  Author Name: Martin KaFai Lau
  Author Email: martin.lau@kernel.org
  Commit Date: 1715278392
  Commit Message:
    selftests/bpf: Use bpf_tracing_net.h in bpf_cubic

This patch uses bpf_tracing_net.h (i.e. vmlinux.h) in bpf_cubic.
This will allow to retire the bpf_tcp_helpers.h and consolidate
tcp-cc tests to vmlinux.h.

Signed-off-by: Martin KaFai Lau <martin.lau@kernel.org>
Link: https://lore.kernel.org/r/20240509175026.3423614-7-martin.lau@linux.dev
Signed-off-by: Alexei Starovoitov <ast@kernel.org>

  Parent Hashes: b1d87ae9b0d3d91767d85183e40c96f4229a6c21
  Refs: 

- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'The commit updates selftests to use bpf_tracing_net.h in bpf_cubic and retires bpf_tcp_helpers.h.', 'keywords': 'bpf_tracing_net,vmlinux,tests', 'commit_classification': "It's a test case or test infrastructure change.", 'commit_complexity': 'Simple, can be used without much configuration. For example, a simple helper function.', 'Major related component': 'The test cases and makefiles', 'program_types_related': ['tc/netfilter like programs', 'It improves the overall eBPF infrastructure (e.g., verifier, runtime, etc.).']}
--------------------
--------------------
Processing Commit ID: b1d87ae9b0d3d91767d85183e40c96f4229a6c21
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: b1d87ae9b0d3d91767d85183e40c96f4229a6c21
  Author Name: Martin KaFai Lau
  Author Email: martin.lau@kernel.org
  Commit Date: 1715278392
  Commit Message:
    selftests/bpf: Rename tcp-cc private struct in bpf_cubic and bpf_dctcp

The "struct bictcp" and "struct dctcp" are private to the bpf prog
and they are stored in the private buffer in inet_csk(sk)->icsk_ca_priv.
Hence
  Parent Hashes: 7d3851a31832bf8dc776a78494b788518734ad0f
  Refs:  there is no bpf CO-RE required.

The same struct name exists in the vmlinux.h. To reuse vmlinux.h

- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'Rename private structs in bpf_cubic and bpf_dctcp to avoid name conflict with vmlinux.h.', 'keywords': 'private structs, bpf_cubic, bpf_dctcp', 'commit_classification': "It's a cleanup or refactoring in the code.", 'commit_complexity': 'Simple, can be used without much configuration. For example, a simple helper function.', 'Major related component': 'The test cases and makefiles', 'program_types_related': ['tc/netfilter like programs']}
--------------------
--------------------
Processing Commit ID: 7d3851a31832bf8dc776a78494b788518734ad0f
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: 7d3851a31832bf8dc776a78494b788518734ad0f
  Author Name: Martin KaFai Lau
  Author Email: martin.lau@kernel.org
  Commit Date: 1715278391
  Commit Message:
    selftests/bpf: Sanitize the SEC and inline usages in the bpf-tcp-cc tests

It is needed to remove the BPF_STRUCT_OPS usages from the tcp-cc tests
because it is defined in bpf_tcp_helpers.h which is going to be retired.
While at it
  Parent Hashes: cc5b18ce1714160be3e0e3b9440a6306dc87e5c4
  Refs:  this patch consolidates all tcp-cc struct_ops programs to
use the SEC("struct_ops") + BPF_PROG().

It also removes the unnecessary __always_inline usages from the
tcp-cc tests.

Signed-off-by: Martin KaFai Lau <martin.lau@kernel.org>
Link: https://lore.kernel.org/r/20240509175026.3423614-5-martin.lau@linux.dev
Signed-off-by: Alexei Starovoitov <ast@kernel.org>


- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'Refactor bpf-tcp-cc tests by removing BPF_STRUCT_OPS and unnecessary __always_inline usages for alignment with upcoming changes.', 'keywords': 'bpf-tcp-cc,BPF_STRUCT_OPS,sanitize', 'commit_classification': "It's a cleanup or refactoring in the code.", 'commit_complexity': 'Simple, can be used without much configuration. For example, a simple helper function.', 'Major related component': 'The test cases and makefiles', 'program_types_related': ['tc/netfilter like programs']}
--------------------
--------------------
Processing Commit ID: cc5b18ce1714160be3e0e3b9440a6306dc87e5c4
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: cc5b18ce1714160be3e0e3b9440a6306dc87e5c4
  Author Name: Martin KaFai Lau
  Author Email: martin.lau@kernel.org
  Commit Date: 1715278391
  Commit Message:
    selftests/bpf: Reuse the tcp_sk() from the bpf_tracing_net.h

This patch removes the individual tcp_sk implementations from the
tcp-cc tests. The tcp_sk() implementation from the bpf_tracing_net.h
is reused instead.

Signed-off-by: Martin KaFai Lau <martin.lau@kernel.org>
Link: https://lore.kernel.org/r/20240509175026.3423614-4-martin.lau@linux.dev
Signed-off-by: Alexei Starovoitov <ast@kernel.org>

  Parent Hashes: cbaec46df6c08a2fab6be03d093d3d6ce74adc9a
  Refs: 

- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'Refactor selftests by reusing the tcp_sk() from bpf_tracing_net.h in tcp-cc tests.', 'keywords': 'selftests,tcp_sk,bpf_tracing_net', 'commit_classification': "It's a cleanup or refactoring in the code.", 'commit_complexity': 'Simple, can be used without much configuration. For example, a simple helper function.', 'Major related component': 'The test cases and makefiles', 'program_types_related': ['tracepoints like programs']}
--------------------
--------------------
Processing Commit ID: cbaec46df6c08a2fab6be03d093d3d6ce74adc9a
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: cbaec46df6c08a2fab6be03d093d3d6ce74adc9a
  Author Name: Martin KaFai Lau
  Author Email: martin.lau@kernel.org
  Commit Date: 1715278391
  Commit Message:
    selftests/bpf: Add a few tcp helper functions and macros to bpf_tracing_net.h

This patch adds a few tcp related helper functions to bpf_tracing_net.h.
They will be useful for both tcp-cc and network tracing related
bpf progs. They have already been in the bpf_tcp_helpers.h. This change
is needed to retire the bpf_tcp_helpers.h and consolidate all tests
to vmlinux.h (i.e. bpf_tracing_net.h).

Some of the helpers (tcp_sk and inet_csk) are also defined in
bpf_cc_cubic.c and they are removed. While at it
  Parent Hashes: c0338e609e6e8aff8a7052c90cff83a6bc792ebc
  Refs:  remove
the vmlinux.h from bpf_cc_cubic.c. bpf_tracing_net.h (which has
vmlinux.h after this patch) is enough and will be consistent
with the other tcp-cc tests in the later patches.

The other TCP_* macro additions will be needed for the bpf_dctcp
changes in the later patch.

Signed-off-by: Martin KaFai Lau <martin.lau@kernel.org>
Link: https://lore.kernel.org/r/20240509175026.3423614-3-martin.lau@linux.dev
Signed-off-by: Alexei Starovoitov <ast@kernel.org>


- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'The commit adds TCP helper functions to bpf_tracing_net.h for tcp-cc and network tracing eBPF programs.', 'keywords': 'tcp helper functions,tracing,consolidation', 'commit_classification': "It's a cleanup or refactoring in the code.", 'commit_complexity': 'Moderate, requires some setup or understanding of the system. For example, a new map type or a new link type.', 'Major related component': 'Other component related to eBPF but not listed above.', 'program_types_related': ['tracepoints like programs', 'kprobe/uprobe/ftrace like programs', 'tc/netfilter like programs']}
--------------------
--------------------
Processing Commit ID: c0338e609e6e8aff8a7052c90cff83a6bc792ebc
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: c0338e609e6e8aff8a7052c90cff83a6bc792ebc
  Author Name: Martin KaFai Lau
  Author Email: martin.lau@kernel.org
  Commit Date: 1715278391
  Commit Message:
    selftests/bpf: Remove bpf_tracing_net.h usages from two networking tests

This patch removes the bpf_tracing_net.h usage from the networking tests
  Parent Hashes: 009367099eb61a4fc2af44d4eb06b6b4de7de6db
  Refs: 
fib_lookup and test_lwt_redirect. Instead of using the (copied) macro
TC_ACT_SHOT and ETH_HLEN from bpf_tracing_net.h

- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'The commit removes the usage of bpf_tracing_net.h in two networking tests.', 'keywords': 'bpf_tracing_net, networking, tests', 'commit_classification': "It's a cleanup or refactoring in the code.", 'commit_complexity': 'Simple, can be used without much configuration. For example, a simple helper function.', 'Major related component': 'The test cases and makefiles', 'program_types_related': ['tc/netfilter like programs']}
--------------------
--------------------
Processing Commit ID: 009367099eb61a4fc2af44d4eb06b6b4de7de6db
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: 009367099eb61a4fc2af44d4eb06b6b4de7de6db
  Author Name: Jose E. Marchesi
  Author Email: jose.marchesi@oracle.com
  Commit Date: 1715205655
  Commit Message:
    bpf: Avoid uninitialized value in BPF_CORE_READ_BITFIELD

[Changes from V1:
 - Use a default branch in the switch statement to initialize `val'.]

GCC warns that `val' may be used uninitialized in the
BPF_CRE_READ_BITFIELD macro
  Parent Hashes: 911edc69c832161b62a8ad10a6972290157a7bd3
  Refs:  defined in bpf_core_read.h as:

	[...]
	unsigned long long val;						      \
	[...]								      \
	switch (__CORE_RELO(s

- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'Fixed potential uninitialized value warning in BPF_CORE_READ_BITFIELD macro.', 'keywords': 'uninitialized,value,macro', 'commit_classification': "It's a bug fix.", 'commit_complexity': 'Simple, can be used without much configuration. For example, a simple helper function.', 'Major related component': 'The eBPF verifier', 'program_types_related': ['It improves the overall eBPF infrastructure (e.g., verifier, runtime, etc.).']}
--------------------
--------------------
Processing Commit ID: 911edc69c832161b62a8ad10a6972290157a7bd3
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: 911edc69c832161b62a8ad10a6972290157a7bd3
  Author Name: Jose E. Marchesi
  Author Email: jose.marchesi@oracle.com
  Commit Date: 1715187419
  Commit Message:
    bpf: guard BPF_NO_PRESERVE_ACCESS_INDEX in skb_pkt_end.c

This little patch is a follow-up to:
https://lore.kernel.org/bpf/20240507095011.15867-1-jose.marchesi@oracle.com/T/#u

The temporary workaround of passing -DBPF_NO_PRESERVE_ACCESS_INDEX
when building with GCC triggers a redefinition preprocessor error when
building progs/skb_pkt_end.c.  This patch adds a guard to avoid
redefinition.

Signed-off-by: Jose E. Marchesi <jose.marchesi@oracle.com>
Cc: david.faust@oracle.com
Cc: cupertino.miranda@oracle.com
Cc: Eduard Zingerman <eddyz87@gmail.com>
Cc: Yonghong Song <yonghong.song@linux.dev>
Cc: Andrii Nakryiko <andrii.nakryiko@gmail.com>
Acked-by: Yonghong Song <yonghong.song@linux.dev>
Link: https://lore.kernel.org/r/20240508110332.17332-1-jose.marchesi@oracle.com
Signed-off-by: Alexei Starovoitov <ast@kernel.org>

  Parent Hashes: 1209a523f6914404e8941d9e04caa42be7cab8d5
  Refs: 

- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'This patch adds a guard to prevent preprocessor errors when building with BPF_NO_PRESERVE_ACCESS_INDEX.', 'keywords': 'guard, preprocessor, GCC', 'commit_classification': "It's a bug fix.", 'commit_complexity': 'Simple, can be used without much configuration. For example, a simple helper function.', 'Major related component': 'The test cases and makefiles', 'program_types_related': ['It improves the overall eBPF infrastructure (e.g., verifier, runtime, etc.).']}
--------------------
--------------------
Processing Commit ID: 1209a523f6914404e8941d9e04caa42be7cab8d5
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: 1209a523f6914404e8941d9e04caa42be7cab8d5
  Author Name: Jose E. Marchesi
  Author Email: jose.marchesi@oracle.com
  Commit Date: 1715187390
  Commit Message:
    bpf: avoid UB in usages of the __imm_insn macro

[Changes from V2:
 - no-strict-aliasing is only applied when building with GCC.
 - cpumask_failure.c is excluded
  Parent Hashes: cd3fc3b9782130a5bc1dc3dfccffbc1657637a93
  Refs:  as it doesn't use __imm_insn.]

The __imm_insn macro is defined in bpf_misc.h as:

  #define __imm_insn(name

- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'The commit addresses undefined behavior in the usage of the __imm_insn macro for BPF programs.', 'keywords': 'undefined behavior, macro, GCC', 'commit_classification': "It's a bug fix.", 'commit_complexity': 'Moderate, requires some setup or understanding of the system. For example, a new map type or a new link type.', 'Major related component': 'Other component related to eBPF but not listed above.', 'program_types_related': ['kprobe/uprobe/ftrace like programs']}
--------------------
--------------------
Processing Commit ID: cd3fc3b9782130a5bc1dc3dfccffbc1657637a93
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: cd3fc3b9782130a5bc1dc3dfccffbc1657637a93
  Author Name: Jose E. Marchesi
  Author Email: jose.marchesi@oracle.com
  Commit Date: 1715187327
  Commit Message:
    bpf: avoid uninitialized warnings in verifier_global_subprogs.c

[Changes from V1:
- The warning to disable is -Wmaybe-uninitialized
  Parent Hashes: e612b5c1d3ee325aff991b4078b4999bf6bac096
  Refs:  not -Wuninitialized.
- This warning is only supported in GCC.]

The BPF selftest verifier_global_subprogs.c contains code that
purposedly performs out of bounds access to memory

- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'The commit addresses uninitialized warnings in the BPF verifier by disabling specific GCC warnings in verifier_global_subprogs.c.', 'keywords': 'uninitialized,warnings,BPF', 'commit_classification': "It's a test case or test infrastructure change.", 'commit_complexity': 'Simple, can be used without much configuration. For example, a simple helper function.', 'Major related component': 'The test cases and makefiles', 'program_types_related': ['It improves the overall eBPF infrastructure (e.g., verifier, runtime, etc.).']}
--------------------
--------------------
Processing Commit ID: e612b5c1d3ee325aff991b4078b4999bf6bac096
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: e612b5c1d3ee325aff991b4078b4999bf6bac096
  Author Name: Puranjay Mohan
  Author Email: puranjay@kernel.org
  Commit Date: 1715179145
  Commit Message:
    bpf
  Parent Hashes: 7e2c7a3f732b77623cea01b89b8cc6724c90a439
  Refs:  arm64: Add support for lse atomics in bpf_arena

When LSE atomics are available

- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'Add support for LSE atomics in bpf_arena on arm64 architecture.', 'keywords': 'LSE atomics, bpf_arena, arm64', 'commit_classification': "It's a new feature.", 'commit_complexity': 'Moderate, requires some setup or understanding of the system. For example, a new map type or a new link type.', 'Major related component': 'Other component related to eBPF but not listed above.', 'program_types_related': ['It improves the overall eBPF infrastructure (e.g., verifier, runtime, etc.).']}
--------------------
--------------------
Processing Commit ID: 7e2c7a3f732b77623cea01b89b8cc6724c90a439
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: 7e2c7a3f732b77623cea01b89b8cc6724c90a439
  Author Name: Martin KaFai Lau
  Author Email: martin.lau@kernel.org
  Commit Date: 1715124313
  Commit Message:
    Merge branch 'libbpf: further struct_ops fixes and improvements'

Andrii Nakryiko says:

====================
Fix yet another case of mishandling SEC("struct_ops") programs that were
nulled out programmatically through BPF skeleton by the user.

While at it
  Parent Hashes: 93d1c2da15017a443cad812468450b72f43e3bd8 7b9959b8cdbc40b31b4c66bb900ec8d5e5b305bd
  Refs:  add some improvements around detecting and reporting errors

- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'This commit addresses mishandling of SEC("struct_ops") programs and adds improvements for detecting and reporting errors in libbpf.', 'keywords': 'struct_ops, errors, improvements', 'commit_classification': "It's a bug fix.", 'commit_complexity': 'Moderate, requires some setup or understanding of the system. For example, a new map type or a new link type.', 'Major related component': 'The libbpf library', 'program_types_related': ['LSM like programs', 'It improves the overall eBPF infrastructure (e.g., verifier, runtime, etc.).']}
--------------------
--------------------
Processing Commit ID: 7b9959b8cdbc40b31b4c66bb900ec8d5e5b305bd
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: 7b9959b8cdbc40b31b4c66bb900ec8d5e5b305bd
  Author Name: Andrii Nakryiko
  Author Email: andrii@kernel.org
  Commit Date: 1715124119
  Commit Message:
    selftests/bpf: shorten subtest names for struct_ops_module test

Drive-by clean up
  Parent Hashes: 41df0733ea414a49094258adab4d600db0420731
  Refs:  we shouldn't use meaningless "test_" prefix for
subtest names.

Signed-off-by: Andrii Nakryiko <andrii@kernel.org>
Link: https://lore.kernel.org/r/20240507001335.1445325-8-andrii@kernel.org
Signed-off-by: Martin KaFai Lau <martin.lau@kernel.org>


- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'The commit shortens subtest names for struct_ops_module in selftests to avoid meaningless prefixes.', 'keywords': 'shorten,selftests,cleanup', 'commit_classification': "It's a cleanup or refactoring in the code.", 'commit_complexity': 'Simple, can be used without much configuration. For example, a simple helper function.', 'Major related component': 'The test cases and makefiles', 'program_types_related': ["It's not related to any of the above."]}
--------------------
--------------------
Processing Commit ID: 41df0733ea414a49094258adab4d600db0420731
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: 41df0733ea414a49094258adab4d600db0420731
  Author Name: Andrii Nakryiko
  Author Email: andrii@kernel.org
  Commit Date: 1715124119
  Commit Message:
    selftests/bpf: validate struct_ops early failure detection logic

Add a simple test that validates that libbpf will reject isolated
struct_ops program early with helpful warning message.

Also validate that explicit use of such BPF program through BPF skeleton
after BPF object is open won't trigger any warnings.

Signed-off-by: Andrii Nakryiko <andrii@kernel.org>
Link: https://lore.kernel.org/r/20240507001335.1445325-7-andrii@kernel.org
Signed-off-by: Martin KaFai Lau <martin.lau@kernel.org>

  Parent Hashes: c78420bafe7cf9ce14fa7ceb40ce62e1372e661d
  Refs: 

- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'Add a test for early failure detection in struct_ops programs using BPF skeleton.', 'keywords': 'selftests,bpf,struct_ops', 'commit_classification': "It's a test case or test infrastructure change.", 'commit_complexity': 'Simple, can be used without much configuration. For example, a simple helper function.', 'Major related component': 'The test cases and makefiles', 'program_types_related': ['It improves the overall eBPF infrastructure (e.g., verifier, runtime, etc.).']}
--------------------
--------------------
Processing Commit ID: c78420bafe7cf9ce14fa7ceb40ce62e1372e661d
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: c78420bafe7cf9ce14fa7ceb40ce62e1372e661d
  Author Name: Andrii Nakryiko
  Author Email: andrii@kernel.org
  Commit Date: 1715124119
  Commit Message:
    libbpf: improve early detection of doomed-to-fail BPF program loading

Extend libbpf's pre-load checks for BPF programs
  Parent Hashes: 548c2ede0dc81cb8c86f3a72c1c63fe1c179cbfe
  Refs:  detecting more typical
conditions that are destinated to cause BPF program failure. This is an
opportunity to provide more helpful and actionable error message to
users

- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'This commit enhances libbpf to provide better early detection and error messages for programs that are likely to fail during loading.', 'keywords': 'libbpf, detection, error', 'commit_classification': "It's a new feature.", 'commit_complexity': 'Moderate, requires some setup or understanding of the system. For example, a new map type or a new link type.', 'Major related component': 'The libbpf library', 'program_types_related': ['It improves the overall eBPF infrastructure (e.g., verifier, runtime, etc.).']}
--------------------
--------------------
Processing Commit ID: 548c2ede0dc81cb8c86f3a72c1c63fe1c179cbfe
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: 548c2ede0dc81cb8c86f3a72c1c63fe1c179cbfe
  Author Name: Andrii Nakryiko
  Author Email: andrii@kernel.org
  Commit Date: 1715124119
  Commit Message:
    libbpf: fix libbpf_strerror_r() handling unknown errors

strerror_r()
  Parent Hashes: 9d66d60e968d85742569d025a2fb509cb57333bb
  Refs:  used from libbpf-specific libbpf_strerror_r() wrapper is
documented to return error in two different ways

- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': "Fix incorrect handling of unknown errors in libbpf's strerror_r wrapper function.", 'keywords': 'libbpf, strerror_r, errors', 'commit_classification': "It's a bug fix.", 'commit_complexity': 'Simple, can be used without much configuration. For example, a simple helper function.', 'Major related component': 'The libbpf library', 'program_types_related': ['It improves the overall eBPF infrastructure (e.g., verifier, runtime, etc.).']}
--------------------
--------------------
Processing Commit ID: 9d66d60e968d85742569d025a2fb509cb57333bb
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: 9d66d60e968d85742569d025a2fb509cb57333bb
  Author Name: Andrii Nakryiko
  Author Email: andrii@kernel.org
  Commit Date: 1715124119
  Commit Message:
    selftests/bpf: add another struct_ops callback use case test

Add a test which tests the case that was just fixed. Kernel has full
type information about callback
  Parent Hashes: e18e2e70dbd1ee3099049557060067b6ec703efa
  Refs:  but user explicitly nulls out the
reference to declaratively set BPF program reference.

Signed-off-by: Andrii Nakryiko <andrii@kernel.org>
Link: https://lore.kernel.org/r/20240507001335.1445325-4-andrii@kernel.org
Signed-off-by: Martin KaFai Lau <martin.lau@kernel.org>


- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'Add a selftest for struct_ops callback handling in eBPF.', 'keywords': 'selftests, struct_ops, callback', 'commit_classification': "It's a test case or test infrastructure change.", 'commit_complexity': 'Moderate, requires some setup or understanding of the system. For example, a new map type or a new link type.', 'Major related component': 'The test cases and makefiles', 'program_types_related': ['It improves the overall eBPF infrastructure (e.g., verifier, runtime, etc.).']}
--------------------
--------------------
Processing Commit ID: e18e2e70dbd1ee3099049557060067b6ec703efa
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: e18e2e70dbd1ee3099049557060067b6ec703efa
  Author Name: Andrii Nakryiko
  Author Email: andrii@kernel.org
  Commit Date: 1715124119
  Commit Message:
    libbpf: handle yet another corner case of nulling out struct_ops program

There is yet another corner case where user can set STRUCT_OPS program
reference in STRUCT_OPS map to NULL
  Parent Hashes: 8374b56b1df5566d19d645e49da2bf31b660bcfd
  Refs:  but libbpf will fail to disable
autoload for such BPF program. This time it's the case of "new" kernel
which has type information about callback field

- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'The commit addresses a corner case in libbpf for handling null STRUCT_OPS program references in STRUCT_OPS maps on newer kernels.', 'keywords': 'libbpf, STRUCT_OPS, null', 'commit_classification': "It's a bug fix.", 'commit_complexity': 'Simple, can be used without much configuration. For example, a simple helper function.', 'Major related component': 'The libbpf library', 'program_types_related': ['It improves the overall eBPF infrastructure (e.g., verifier, runtime, etc.).']}
--------------------
--------------------
Processing Commit ID: 8374b56b1df5566d19d645e49da2bf31b660bcfd
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: 8374b56b1df5566d19d645e49da2bf31b660bcfd
  Author Name: Andrii Nakryiko
  Author Email: andrii@kernel.org
  Commit Date: 1715124119
  Commit Message:
    libbpf: remove unnecessary struct_ops prog validity check

libbpf ensures that BPF program references set in map->st_ops->progs[i]
during open phase are always valid STRUCT_OPS programs. This is done in
bpf_object__collect_st_ops_relos(). So there is no need to double-check
that in bpf_map__init_kern_struct_ops().

Simplify the code by removing unnecessary check. Also
  Parent Hashes: 93d1c2da15017a443cad812468450b72f43e3bd8
  Refs:  we avoid using
local prog variable to keep code similar to the upcoming fix

- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'The commit removes an unnecessary struct_ops prog validity check in libbpf, simplifying the code.', 'keywords': 'libbpf, struct_ops, simplify', 'commit_classification': "It's a cleanup or refactoring in the code.", 'commit_complexity': 'Simple, can be used without much configuration. For example, a simple helper function.', 'Major related component': 'The libbpf library', 'program_types_related': ['It improves the overall eBPF infrastructure (e.g., verifier, runtime, etc.).']}
--------------------
--------------------
Processing Commit ID: 93d1c2da15017a443cad812468450b72f43e3bd8
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: 93d1c2da15017a443cad812468450b72f43e3bd8
  Author Name: Andrii Nakryiko
  Author Email: andrii@kernel.org
  Commit Date: 1715118061
  Commit Message:
    Merge branch 'fix-number-of-arguments-in-test'

Cupertino Miranda says:

====================
Fix number of arguments in test

Hi everyone
  Parent Hashes: 675b4e24bc50f4600b6bf3527fdbaa1f73498334 b2e086cb28aa358f7b5564888304908aff735827
  Refs: 

This is a new version based on comments.

Regards

- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'The commit fixes the number of arguments in a test case.', 'keywords': 'fix, test, arguments', 'commit_classification': "It's a test case or test infrastructure change.", 'commit_complexity': 'Simple, can be used without much configuration. For example, a simple helper function.', 'Major related component': 'The test cases and makefiles', 'program_types_related': ["It's not related to any of the above."]}
--------------------
--------------------
Processing Commit ID: b2e086cb28aa358f7b5564888304908aff735827
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: b2e086cb28aa358f7b5564888304908aff735827
  Author Name: Cupertino Miranda
  Author Email: cupertino.miranda@oracle.com
  Commit Date: 1715118060
  Commit Message:
    selftests/bpf: Change functions definitions to support GCC

The test_xdp_noinline.c contains 2 functions that use more then 5
arguments. This patch collapses the 2 last arguments in an array.
Also in GCC and ipa_sra optimization increases the number of arguments
used in function encap_v4. This pass disables the optimization for that
particular file.

Signed-off-by: Cupertino Miranda <cupertino.miranda@oracle.com>
Signed-off-by: Andrii Nakryiko <andrii@kernel.org>
Acked-by: Yonghong Song <yonghong.song@linux.dev>
Link: https://lore.kernel.org/bpf/20240507122220.207820-3-cupertino.miranda@oracle.com

  Parent Hashes: 207cf6e649ee551ab3bdb1cfe1b2848e6a4337a5
  Refs: 

- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'Modify self-tests to ensure compatibility with GCC by adjusting function arguments.', 'keywords': 'self-tests,GCC,arguments', 'commit_classification': "It's a test case or test infrastructure change.", 'commit_complexity': 'Simple, can be used without much configuration. For example, a simple helper function.', 'Major related component': 'The test cases and makefiles', 'program_types_related': ['xdp like programs']}
--------------------
--------------------
Processing Commit ID: 207cf6e649ee551ab3bdb1cfe1b2848e6a4337a5
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: 207cf6e649ee551ab3bdb1cfe1b2848e6a4337a5
  Author Name: Cupertino Miranda
  Author Email: cupertino.miranda@oracle.com
  Commit Date: 1715118060
  Commit Message:
    selftests/bpf: Add CFLAGS per source file and runner

This patch adds support to specify CFLAGS per source file and per test
runner.

Signed-off-by: Cupertino Miranda <cupertino.miranda@oracle.com>
Signed-off-by: Andrii Nakryiko <andrii@kernel.org>
Acked-by: Yonghong Song <yonghong.song@linux.dev>
Link: https://lore.kernel.org/bpf/20240507122220.207820-2-cupertino.miranda@oracle.com

  Parent Hashes: 675b4e24bc50f4600b6bf3527fdbaa1f73498334
  Refs: 

- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'This commit adds support for specifying CFLAGS per source file and test runner in selftests for BPF.', 'keywords': 'CFLAGS,selftests,BPF', 'commit_classification': "It's a test case or test infrastructure change.", 'commit_complexity': 'Simple, can be used without much configuration. For example, a simple helper function.', 'Major related component': 'The test cases and makefiles', 'program_types_related': ["It's not related to any of the above."]}
--------------------
--------------------
Processing Commit ID: 675b4e24bc50f4600b6bf3527fdbaa1f73498334
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: 675b4e24bc50f4600b6bf3527fdbaa1f73498334
  Author Name: Jose E. Marchesi
  Author Email: jose.marchesi@oracle.com
  Commit Date: 1715118000
  Commit Message:
    bpf: Temporarily define BPF_NO_PRESEVE_ACCESS_INDEX for GCC

The vmlinux.h file generated by bpftool makes use of compiler pragmas
in order to install the CO-RE preserve_access_index in all the struct
types derived from the BTF info:

  #ifndef __VMLINUX_H__
  #define __VMLINUX_H__

  #ifndef BPF_NO_PRESERVE_ACCESS_INDEX
  #pragma clang attribute push (__attribute__((preserve_access_index))
  Parent Hashes: eda80aacd00c016d7c03a2bfe231fafdce0e16b0
  Refs:  apply_t = record
  #endif

  [... type definitions generated from kernel BTF ... ]

  #ifndef BPF_NO_PRESERVE_ACCESS_INDEX
  #pragma clang attribute pop
  #endif

The `clang attribute push/pop' pragmas are specific to clang/llvm and
are not supported by GCC.

At the moment the BTF dumping services in libbpf do not support
dicriminating between types dumped because they are directly referred
and types dumped because they are dependencies.  A suitable API is
being worked now. See [1] and [2].

In the interim

- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'Temporarily define BPF_NO_PRESEVE_ACCESS_INDEX to ensure compatibility with GCC in vmlinux.h file generated by bpftool.', 'keywords': 'BPF,GCC,libbpf', 'commit_classification': "It's a build system or CI/CD change.", 'commit_complexity': 'Moderate, requires some setup or understanding of the system. For example, a new map type or a new link type.', 'Major related component': 'The libbpf library', 'program_types_related': ['It improves the overall eBPF infrastructure (e.g., verifier, runtime, etc.).']}
--------------------
--------------------
Processing Commit ID: eda80aacd00c016d7c03a2bfe231fafdce0e16b0
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: eda80aacd00c016d7c03a2bfe231fafdce0e16b0
  Author Name: Andrii Nakryiko
  Author Email: andrii@kernel.org
  Commit Date: 1715117481
  Commit Message:
    Merge branch 'bpf-avoid-attribute-ignored-warnings-in-gcc'

Jose E. Marchesi says:

====================
bpf: avoid `attribute ignored' warnings in GCC

These two patches avoid warnings (turned into errors) when building
the BPF selftests with GCC.

[Changes from V1:
- As requested by reviewer
  Parent Hashes: 75b0fbf15d8466be618a997cae774eef445c0c7d b0fbdf759da05a35b67fd27b8859738b79af25d6
  Refs:  an additional patch has been added in
  order to remove __hidden from the `private' macro in
  cpumask_common.h.
- Typo bening -> benign fixed in the commit message of the second
  patch.]
====================

Link: https://lore.kernel.org/r/20240507074227.4523-1-jose.marchesi@oracle.com
Signed-off-by: Andrii Nakryiko <andrii@kernel.org>


- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'Avoid warnings in BPF selftests due to ignored attribute errors in GCC.', 'keywords': 'warnings,BPF,GCC', 'commit_classification': "It's a build system or CI/CD change.", 'commit_complexity': 'Simple, can be used without much configuration. For example, a simple helper function.', 'Major related component': 'The test cases and makefiles', 'program_types_related': ['It improves the overall eBPF infrastructure (e.g., verifier, runtime, etc.).']}
--------------------
--------------------
Processing Commit ID: b0fbdf759da05a35b67fd27b8859738b79af25d6
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: b0fbdf759da05a35b67fd27b8859738b79af25d6
  Author Name: Jose E. Marchesi
  Author Email: jose.marchesi@oracle.com
  Commit Date: 1715117480
  Commit Message:
    bpf: Disable some `attribute ignored' warnings in GCC

This patch modifies selftests/bpf/Makefile to pass -Wno-attributes to
GCC.  This is because of the following attributes which are ignored:

- btf_decl_tag
- btf_type_tag

  There are many of these.  At the moment none of these are
  recognized/handled by gcc-bpf.

  We are aware that btf_decl_tag is necessary for some of the
  selftest harness to communicate test failure/success.  Support for
  it is in progress in GCC upstream:

  https://gcc.gnu.org/pipermail/gcc-patches/2024-May/650482.html

  However
  Parent Hashes: 2ce987e1650216638b2b5f44948c6efea67038ae
  Refs:  the GCC master branch is not yet open

- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'The commit updates the Makefile to disable certain GCC attribute warnings for btf_decl_tag and btf_type_tag.', 'keywords': 'GCC, warnings, Makefile', 'commit_classification': "It's a build system or CI/CD change.", 'commit_complexity': 'Simple, can be used without much configuration. For example, a simple helper function.', 'Major related component': 'The test cases and makefiles', 'program_types_related': ['It improves the overall eBPF infrastructure (e.g., verifier, runtime, etc.).']}
--------------------
--------------------
Processing Commit ID: 2ce987e1650216638b2b5f44948c6efea67038ae
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: 2ce987e1650216638b2b5f44948c6efea67038ae
  Author Name: Jose E. Marchesi
  Author Email: jose.marchesi@oracle.com
  Commit Date: 1715117480
  Commit Message:
    bpf: Avoid __hidden__ attribute in static object

An object defined as `static' defaults to hidden visibility.  If
additionally the visibility(__weak__) compiler attribute is applied to
the declaration of the object
  Parent Hashes: 75b0fbf15d8466be618a997cae774eef445c0c7d
  Refs:  GCC warns that the attribute gets
ignored.

This patch removes the only instance of this problem among the BPF
selftests.

Tested in bpf-next master.

Signed-off-by: Jose E. Marchesi <jose.marchesi@oracle.com>
Signed-off-by: Andrii Nakryiko <andrii@kernel.org>
Acked-by: Yonghong Song <yonghong.song@linux.dev>
Link: https://lore.kernel.org/bpf/20240507074227.4523-2-jose.marchesi@oracle.com


- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'The commit removes the __hidden__ attribute for static objects in BPF selftests to resolve a compiler warning.', 'keywords': '__hidden__ attribute, static objects, BPF selftests', 'commit_classification': "It's a cleanup or refactoring in the code.", 'commit_complexity': 'Simple, can be used without much configuration. For example, a simple helper function.', 'Major related component': 'The test cases and makefiles', 'program_types_related': ['It improves the overall eBPF infrastructure (e.g., verifier, runtime, etc.).']}
--------------------
--------------------
Processing Commit ID: 75b0fbf15d8466be618a997cae774eef445c0c7d
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: 75b0fbf15d8466be618a997cae774eef445c0c7d
  Author Name: Haiyue Wang
  Author Email: haiyue.wang@intel.com
  Commit Date: 1715116397
  Commit Message:
    bpf: Remove redundant page mask of vmf->address

As the comment described in "struct vm_fault":
	".address"      : 'Faulting virtual address - masked'
	".real_address" : 'Faulting virtual address - unmasked'

The link [1] said: "Whatever the routes
  Parent Hashes: 329a6720a3ebbc041983b267981ab2cac102de93
  Refs:  all architectures end up to the
invocation of handle_mm_fault() which

- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'The commit removes a redundant page mask of vmf->address in the bpf code.', 'keywords': 'redundant,page,mask', 'commit_classification': "It's a cleanup or refactoring in the code.", 'commit_complexity': 'Simple, can be used without much configuration. For example, a simple helper function.', 'Major related component': 'The syscall interface', 'program_types_related': ['It improves the overall eBPF infrastructure (e.g., verifier, runtime, etc.).']}
--------------------
--------------------
Processing Commit ID: 89ea968a9d759f71ac7b8d50949a8e5e5bcb1111
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: 89ea968a9d759f71ac7b8d50949a8e5e5bcb1111
  Author Name: Benjamin Tissoires
  Author Email: bentiss@kernel.org
  Commit Date: 1715089198
  Commit Message:
    selftests/hid: skip tests with HID-BPF if udev-hid-bpf is not installed

udev-hid-bpf is still not installed everywhere
  Parent Hashes: b22cbfb42c19a378cca5fae3a98395225af05384
  Refs:  and we should probably
not assume it is installed automatically.

Link: https://lore.kernel.org/r/20240506143612.148031-1-bentiss@kernel.org
Reviewed-by: Peter Hutterer <peter.hutterer@who-t.net>
Signed-off-by: Benjamin Tissoires <bentiss@kernel.org>


- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'Skip HID-BPF self-tests if udev-hid-bpf is not installed.', 'keywords': 'self-tests,HID-BPF,udev', 'commit_classification': "It's a test case or test infrastructure change.", 'commit_complexity': 'Simple, can be used without much configuration. For example, a simple helper function.', 'Major related component': 'The test cases and makefiles', 'program_types_related': ['HID driver like programs']}
--------------------
--------------------
Processing Commit ID: b22cbfb42c19a378cca5fae3a98395225af05384
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: b22cbfb42c19a378cca5fae3a98395225af05384
  Author Name: Benjamin Tissoires
  Author Email: bentiss@kernel.org
  Commit Date: 1715089195
  Commit Message:
    selftests/hid: add tests for the Raptor Mach 2 joystick

The only interesting bit is the HAT switch
  Parent Hashes: aa7e560454a90d4fe9924500f1ae2a3779806b85
  Refs:  and we use a BPF program
to fix it. So ensure this works correctly.

Link: https://lore.kernel.org/r/20240410-bpf_sources-v1-18-a8bf16033ef8@kernel.org
Reviewed-by: Peter Hutterer <peter.hutterer@who-t.net>
Signed-off-by: Benjamin Tissoires <bentiss@kernel.org>


- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'Add selftests for Raptor Mach 2 joystick using BPF program to ensure correct functionality of the HAT switch.', 'keywords': 'selftests, joystick, BPF', 'commit_classification': "It's a test case or test infrastructure change.", 'commit_complexity': 'Moderate, requires some setup or understanding of the system. For example, a new map type or a new link type.', 'Major related component': 'The test cases and makefiles', 'program_types_related': ['HID driver like programs']}
--------------------
--------------------
Processing Commit ID: aa7e560454a90d4fe9924500f1ae2a3779806b85
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: aa7e560454a90d4fe9924500f1ae2a3779806b85
  Author Name: Benjamin Tissoires
  Author Email: bentiss@kernel.org
  Commit Date: 1715089191
  Commit Message:
    selftests/hid: move the gamepads definitions in the test file

More in line with the other test_* files.

No code change

Link: https://lore.kernel.org/r/20240410-bpf_sources-v1-17-a8bf16033ef8@kernel.org
Reviewed-by: Peter Hutterer <peter.hutterer@who-t.net>
Signed-off-by: Benjamin Tissoires <bentiss@kernel.org>

  Parent Hashes: c6b03c736a523902bb53bb9897f5c75292b3424b
  Refs: 

- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'Moved gamepad definitions within selftests/hid to the test file for consistency.', 'keywords': 'gamepads,hid,selftests', 'commit_classification': "It's a cleanup or refactoring in the code.", 'commit_complexity': 'Simple, can be used without much configuration. For example, a simple helper function.', 'Major related component': 'The test cases and makefiles', 'program_types_related': ['HID driver like programs']}
--------------------
--------------------
Processing Commit ID: c6b03c736a523902bb53bb9897f5c75292b3424b
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: c6b03c736a523902bb53bb9897f5c75292b3424b
  Author Name: Benjamin Tissoires
  Author Email: bentiss@kernel.org
  Commit Date: 1715089187
  Commit Message:
    selftests/hid: import base_gamepad.py from hid-tools

We need to slightly change base_device.py for supporting HID-BPF
  Parent Hashes: 51de9ee0a6c7f0d06fa7b80ff2ef9f3f661c3eb6
  Refs: 
so instead of monkey patching

- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'This commit imports base_gamepad.py from hid-tools and modifies base_device.py to support HID-BPF.', 'keywords': 'base_gamepad.py,hid-tools,HID-BPF', 'commit_classification': "It's a test case or test infrastructure change.", 'commit_complexity': 'Moderate, requires some setup or understanding of the system. For example, a new map type or a new link type.', 'Major related component': 'The test cases and makefiles', 'program_types_related': ['HID driver like programs']}
--------------------
--------------------
Processing Commit ID: 51de9ee0a6c7f0d06fa7b80ff2ef9f3f661c3eb6
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: 51de9ee0a6c7f0d06fa7b80ff2ef9f3f661c3eb6
  Author Name: Benjamin Tissoires
  Author Email: bentiss@kernel.org
  Commit Date: 1715089183
  Commit Message:
    selftests/hid: add Huion Kamvas Pro 19 tests

This tablets gets a lot of things wrong:
- the secondary button is reported through Secondary Tip Switch
- the third button is reported through Invert

We need to add some out of proximity intermediate state when moving
back and forth with the eraser mode as it can only be triggered by
physically returning the pen
  Parent Hashes: 1b2c3caf7839adff892d8397995803d93e347974
  Refs:  meaning that the tolerated transitions
can never happen.

Link: https://lore.kernel.org/r/20240410-bpf_sources-v1-15-a8bf16033ef8@kernel.org
Reviewed-by: Peter Hutterer <peter.hutterer@who-t.net>
Signed-off-by: Benjamin Tissoires <bentiss@kernel.org>


- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'Add tests for Huion Kamvas Pro 19 in HID selftests to address incorrect button reporting.', 'keywords': 'HID selftests, Huion Kamvas, button', 'commit_classification': "It's a test case or test infrastructure change.", 'commit_complexity': 'Moderate, requires some setup or understanding of the system. For example, a new map type or a new link type.', 'Major related component': 'The test cases and makefiles', 'program_types_related': ['HID driver like programs']}
--------------------
--------------------
Processing Commit ID: 1b2c3caf7839adff892d8397995803d93e347974
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: 1b2c3caf7839adff892d8397995803d93e347974
  Author Name: Benjamin Tissoires
  Author Email: bentiss@kernel.org
  Commit Date: 1715089179
  Commit Message:
    selftests/hid: tablets: also check for XP-Pen offset correction

The values are taken from the HID-BPF file.
Basically we are recomputing the array provided there.

Link: https://lore.kernel.org/r/20240410-bpf_sources-v1-14-a8bf16033ef8@kernel.org
Reviewed-by: Peter Hutterer <peter.hutterer@who-t.net>
Signed-off-by: Benjamin Tissoires <bentiss@kernel.org>

  Parent Hashes: 03899011df4b2bb0f9b3ac57b1044b161a336f31
  Refs: 

- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'Added offset correction for XP-Pen in HID selftests for tablets.', 'keywords': 'offset correction, XP-Pen, selftests', 'commit_classification': "It's a test case or test infrastructure change.", 'commit_complexity': 'Simple, can be used without much configuration. For example, a simple helper function.', 'Major related component': 'The test cases and makefiles', 'program_types_related': ['HID driver like programs']}
--------------------
--------------------
Processing Commit ID: 03899011df4b2bb0f9b3ac57b1044b161a336f31
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: 03899011df4b2bb0f9b3ac57b1044b161a336f31
  Author Name: Benjamin Tissoires
  Author Email: bentiss@kernel.org
  Commit Date: 1715089174
  Commit Message:
    selftests/hid: tablets: add a couple of XP-PEN tablets

Those tablets don't need special initialization
  Parent Hashes: e14d88d9b8dae40c6f612c6fc74b7d03d12f3c94
  Refs:  but are reporting
the events with the wrong usages:
- tip switch is used when the eraser should be used
- eraser is used instead of the secondary barrel switch

Add tests for those so we don't regress in the future.

Currently we set x/y tilt to 0 to not trigger the bpf program
compensate_coordinates_by_tilt()

Link: https://lore.kernel.org/r/20240410-bpf_sources-v1-13-a8bf16033ef8@kernel.org
Reviewed-by: Peter Hutterer <peter.hutterer@who-t.net>
Signed-off-by: Benjamin Tissoires <bentiss@kernel.org>


- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'Add test cases for XP-PEN tablets in selftests/hid to address event reporting issues.', 'keywords': 'XP-PEN, selftests, tablets', 'commit_classification': "It's a test case or test infrastructure change.", 'commit_complexity': 'Simple, can be used without much configuration. For example, a simple helper function.', 'Major related component': 'The test cases and makefiles', 'program_types_related': ['HID driver like programs']}
--------------------
--------------------
Processing Commit ID: e14d88d9b8dae40c6f612c6fc74b7d03d12f3c94
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: e14d88d9b8dae40c6f612c6fc74b7d03d12f3c94
  Author Name: Benjamin Tissoires
  Author Email: bentiss@kernel.org
  Commit Date: 1715089170
  Commit Message:
    selftests/hid: tablets: reduce the number of pen state

All the *_WITH*BUTTON states were almost identical except for the
button itself.

I need to add a new device with a third button
  Parent Hashes: e906463087cec0a179ddcafe08aeef5899af6b00
  Refs:  and adding a bunch of
states is going to be quite cumbersome.

So convert the `button` parameter of PenState as a boolean

- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'Refactor the pen button state handling in HID selftests by converting button parameter to a boolean for simplicity.', 'keywords': 'HID,selftests,refactor', 'commit_classification': "It's a cleanup or refactoring in the code.", 'commit_complexity': 'Simple, can be used without much configuration. For example, a simple helper function.', 'Major related component': 'Other component related to eBPF but not listed above.', 'program_types_related': ['HID driver like programs']}
--------------------
--------------------
Processing Commit ID: e906463087cec0a179ddcafe08aeef5899af6b00
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: e906463087cec0a179ddcafe08aeef5899af6b00
  Author Name: Benjamin Tissoires
  Author Email: bentiss@kernel.org
  Commit Date: 1715089166
  Commit Message:
    selftests/hid: add support for HID-BPF pre-loading before starting a test

few required changes:
- we need to count how many times a udev 'bind' event happens
- we need to tell `udev-hid-bpf` to not automatically attach the
  provided HID-BPF objects
- we need to manually attach the ones from the kernel tree
  Parent Hashes: a7def2e51c667578140d9aa3282533463ed3df91
  Refs:  and wait
  for the second udev 'bind' event to happen

Link: https://lore.kernel.org/r/20240410-bpf_sources-v1-11-a8bf16033ef8@kernel.org
Reviewed-by: Peter Hutterer <peter.hutterer@who-t.net>
Signed-off-by: Benjamin Tissoires <bentiss@kernel.org>


- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'Add support for pre-loading HID-BPF in selftests before tests start.', 'keywords': 'HID-BPF, selftests, udev', 'commit_classification': "It's a test case or test infrastructure change.", 'commit_complexity': 'Moderate, requires some setup or understanding of the system. For example, a new map type or a new link type.', 'Major related component': 'The test cases and makefiles', 'program_types_related': ['HID driver like programs']}
--------------------
--------------------
Processing Commit ID: a7def2e51c667578140d9aa3282533463ed3df91
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: a7def2e51c667578140d9aa3282533463ed3df91
  Author Name: Benjamin Tissoires
  Author Email: bentiss@kernel.org
  Commit Date: 1715089163
  Commit Message:
    selftests/hid: import base_device.py from hid-tools

We need to slightly change base_device.py for supporting HID-BPF
  Parent Hashes: 0cd1465cac52d7d5b4584a29f97bddc5e8bb421f
  Refs: 
so instead of monkey patching

- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'Import base_device.py from hid-tools and modify it to support HID-BPF.', 'keywords': 'base_device.py,HID-BPF,selftests', 'commit_classification': "It's a test case or test infrastructure change.", 'commit_complexity': 'Moderate, requires some setup or understanding of the system. For example, a new map type or a new link type.', 'Major related component': 'Other component related to eBPF but not listed above.', 'program_types_related': ['HID driver like programs']}
--------------------
--------------------
Processing Commit ID: 0cd1465cac52d7d5b4584a29f97bddc5e8bb421f
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: 0cd1465cac52d7d5b4584a29f97bddc5e8bb421f
  Author Name: Benjamin Tissoires
  Author Email: bentiss@kernel.org
  Commit Date: 1715089159
  Commit Message:
    HID: bpf: add in-tree HID-BPF fix for the Raptor Mach 2

This device is already fixed by "HID: do not assume HAT Switch
logical max < 8"
  Parent Hashes: 9f1bf4c225329d27e85fc1c5b5af9e6ebf4a8ff3
  Refs:  but for people without the fix already

- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'Add HID-BPF fix for Raptor Mach 2 to address compatibility with previous HID fix.', 'keywords': 'HID,BPF,Raptor', 'commit_classification': "It's a bug fix.", 'commit_complexity': 'Simple, can be used without much configuration. For example, a simple helper function.', 'Major related component': 'Other component related to eBPF but not listed above.', 'program_types_related': ['HID driver like programs']}
--------------------
--------------------
Processing Commit ID: 9f1bf4c225329d27e85fc1c5b5af9e6ebf4a8ff3
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: 9f1bf4c225329d27e85fc1c5b5af9e6ebf4a8ff3
  Author Name: Benjamin Tissoires
  Author Email: bentiss@kernel.org
  Commit Date: 1715089156
  Commit Message:
    HID: bpf: add in-tree HID-BPF fix for the Huion Kamvas Pro 19

This tablets gets a lot of things wrong:
- the secondary button is reported through Secondary Tip Switch
- the third button is reported through Invert

Fortunately
  Parent Hashes: 1c046d09c6ba4ff5fb959b2d195cacadb2ae6977
  Refs:  before entering eraser mode

- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'Fixes HID-BPF issues with incorrect button mapping for Huion Kamvas Pro 19 tablet.', 'keywords': 'HID-BPF, Huion Kamvas, fix', 'commit_classification': "It's a bug fix.", 'commit_complexity': 'Moderate, requires some setup or understanding of the system. For example, a new map type or a new link type.', 'Major related component': 'Other component related to eBPF but not listed above.', 'program_types_related': ['HID driver like programs']}
--------------------
--------------------
Processing Commit ID: 1c046d09c6ba4ff5fb959b2d195cacadb2ae6977
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: 1c046d09c6ba4ff5fb959b2d195cacadb2ae6977
  Author Name: Benjamin Tissoires
  Author Email: bentiss@kernel.org
  Commit Date: 1715089152
  Commit Message:
    HID: bpf: add in-tree HID-BPF fix for the XBox Elite 2 over Bluetooth

When using the XBox Wireless Controller Elite 2 over Bluetooth
  Parent Hashes: d9e78973921d215a6453b609a6326dab9dbc5a60
  Refs: 
the device exports the paddle on the back of the device as a single
bitfield value of usage "Assign Selection".

The kernel doesn't process those usages properly and report KEY_UNKNOWN
for it.

SDL doesn't know how to interprete that KEY_UNKNOWN and thus ignores the
paddles.

Given that over USB the kernel uses BTN_TRIGGER_HAPPY[5-8]

- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'Fixes HID-BPF handling of Xbox Elite 2 paddle usage over Bluetooth in Linux.', 'keywords': 'HID,Bluetooth,Xbox', 'commit_classification': "It's a bug fix.", 'commit_complexity': 'Moderate, requires some setup or understanding of the system. For example, a new map type or a new link type.', 'Major related component': 'Other component related to eBPF but not listed above.', 'program_types_related': ['HID driver like programs']}
--------------------
--------------------
Processing Commit ID: d9e78973921d215a6453b609a6326dab9dbc5a60
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: d9e78973921d215a6453b609a6326dab9dbc5a60
  Author Name: Benjamin Tissoires
  Author Email: bentiss@kernel.org
  Commit Date: 1715089147
  Commit Message:
    HID: bpf: add in-tree HID-BPF fix for the Wacom ArtPen

This pen is compatible with multiple Wacom tablets
  Parent Hashes: 0bc8f89f40403cfbc3c6e676b0bee240a9349d3f
  Refs:  but we only add support
for the Intuos Pro 2 M

- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'Add HID-BPF support for the Wacom ArtPen compatible with Intuos Pro 2 M tablets.', 'keywords': 'HID, BPF, Wacom', 'commit_classification': "It's a new feature.", 'commit_complexity': 'Moderate, requires some setup or understanding of the system. For example, a new map type or a new link type.', 'Major related component': 'Other component related to eBPF but not listed above.', 'program_types_related': ['HID driver like programs']}
--------------------
--------------------
Processing Commit ID: 0bc8f89f40403cfbc3c6e676b0bee240a9349d3f
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: 0bc8f89f40403cfbc3c6e676b0bee240a9349d3f
  Author Name: Benjamin Tissoires
  Author Email: bentiss@kernel.org
  Commit Date: 1715089144
  Commit Message:
    HID: bpf: add in-tree HID-BPF fix for the IOGear Kaliber Gaming MMOmentum mouse

Allows to export more than 5 buttons on this 12 buttons mouse.

Link: https://lore.kernel.org/r/20240410-bpf_sources-v1-5-a8bf16033ef8@kernel.org
Reviewed-by: Peter Hutterer <peter.hutterer@who-t.net>
Signed-off-by: Benjamin Tissoires <bentiss@kernel.org>

  Parent Hashes: 4e6d2a297dd5be26ad409b7a05b20bd033d1c95e
  Refs: 

- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'Add support in HID-BPF for more than 5 buttons on the IOGear Kaliber Gaming MMOmentum mouse.', 'keywords': 'HID-BPF, IOGear, buttons', 'commit_classification': "It's a new feature.", 'commit_complexity': 'Simple, can be used without much configuration. For example, a simple helper function.', 'Major related component': 'Other component related to eBPF but not listed above.', 'program_types_related': ['HID driver like programs']}
--------------------
--------------------
Processing Commit ID: 4e6d2a297dd5be26ad409b7a05b20bd033d1c95e
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: 4e6d2a297dd5be26ad409b7a05b20bd033d1c95e
  Author Name: Benjamin Tissoires
  Author Email: bentiss@kernel.org
  Commit Date: 1715089140
  Commit Message:
    HID: bpf: add in-tree HID-BPF fix for the HP Elite Presenter Mouse

Duplicate of commit 0db117359e47 ("HID: add quirk for 03f0:464a HP Elite
Presenter Mouse")
  Parent Hashes: e0599675a32cb994a076a4b40d3e42d8353a5bb7
  Refs:  but in a slightly better way.

This time we actually change the application collection

- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'Add in-tree HID-BPF fix for HP Elite Presenter Mouse with improved application collection changes.', 'keywords': 'HID-BPF, HP, fix', 'commit_classification': "It's a bug fix.", 'commit_complexity': 'Simple, can be used without much configuration. For example, a simple helper function.', 'Major related component': 'Other component related to eBPF but not listed above.', 'program_types_related': ['HID driver like programs']}
--------------------
--------------------
Processing Commit ID: e0599675a32cb994a076a4b40d3e42d8353a5bb7
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: e0599675a32cb994a076a4b40d3e42d8353a5bb7
  Author Name: Benjamin Tissoires
  Author Email: bentiss@kernel.org
  Commit Date: 1715089137
  Commit Message:
    HID: bpf: add in-tree HID-BPF fix for the XPPen Artist 16

Same problem than the Artist 24: the second button on the pen is treated
like an eraser.
But the problem is even worse this time. There is an actual eraser at
the tail of the pen.

The compensation of the coordinates was done by Martin

Signed-off-by: Martin Sivak <mars@montik.net>
Link: https://lore.kernel.org/r/20240410-bpf_sources-v1-3-a8bf16033ef8@kernel.org
Reviewed-by: Peter Hutterer <peter.hutterer@who-t.net>
Signed-off-by: Benjamin Tissoires <bentiss@kernel.org>

  Parent Hashes: 04b3e5ab055553e074ea54ef316982b55cdde96b
  Refs: 

- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'Fixes the HID-BPF handling for the XPPen Artist 16 to correctly recognize the pen eraser function.', 'keywords': 'HID-BPF,XPPen Artist,eraser', 'commit_classification': "It's a bug fix.", 'commit_complexity': 'Moderate, requires some setup or understanding of the system. For example, a new map type or a new link type.', 'Major related component': 'The attach events and bpf link. e.g. perf events, tracepoints, etc.', 'program_types_related': ['HID driver like programs']}
--------------------
--------------------
Processing Commit ID: 04b3e5ab055553e074ea54ef316982b55cdde96b
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: 04b3e5ab055553e074ea54ef316982b55cdde96b
  Author Name: Benjamin Tissoires
  Author Email: bentiss@kernel.org
  Commit Date: 1715089133
  Commit Message:
    HID: bpf: add first in-tree HID-BPF fix for the XPPen Artist 24

This commit adds a fix for XPPen Artist 24 where the second button on
the pen is used as an eraser.

It's a "feature" from Microsoft
  Parent Hashes: 65ad580a14e875c2d8c027cf1a2ca03b849ff843
  Refs:  but it turns out that it's actually
painful for artists. So we ship here a HID-BPF program that turns this
second button into an actual button.

Note that the HID-BPF program is not directly loaded by the kernel itself
but by udev-hid-bpf[0]. But having the sources here allows us to also
integrate tests into tools/testing/selftests/hid to ensure the HID-BPF
program are actually tested.

[0] https://gitlab.freedesktop.org/libevdev/udev-hid-bpf

Link: https://lore.kernel.org/r/20240410-bpf_sources-v1-2-a8bf16033ef8@kernel.org
Reviewed-by: Peter Hutterer <peter.hutterer@who-t.net>
Signed-off-by: Benjamin Tissoires <bentiss@kernel.org>


- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'Add HID-BPF fix for XPPen Artist 24 to turn second pen button into a functional button instead of an eraser.', 'keywords': 'HID,BPF,XPPen', 'commit_classification': "It's a bug fix.", 'commit_complexity': 'Moderate, requires some setup or understanding of the system. For example, a new map type or a new link type.', 'Major related component': 'Other component related to eBPF but not listed above.', 'program_types_related': ['HID driver like programs']}
--------------------
--------------------
Processing Commit ID: 65ad580a14e875c2d8c027cf1a2ca03b849ff843
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: 65ad580a14e875c2d8c027cf1a2ca03b849ff843
  Author Name: Benjamin Tissoires
  Author Email: bentiss@kernel.org
  Commit Date: 1715089116
  Commit Message:
    HID: do not assume HAT Switch logical max < 8

Turns out that the code can handle a greater range
  Parent Hashes: b912cf042072e12e93faa874265b30cc0aa521b9
  Refs:  but the data stored
can not. This is problematic on the Raptor Mach 2 joystick which
logical max is 239. The kernel interprets it as `-15` and thus ignores
the Hat Switch handling.

Link: https://gitlab.freedesktop.org/libevdev/udev-hid-bpf/-/issues/17
Link: https://lore.kernel.org/r/20240410-bpf_sources-v1-1-a8bf16033ef8@kernel.org
Reviewed-by: Peter Hutterer <peter.hutterer@who-t.net>
Signed-off-by: Benjamin Tissoires <bentiss@kernel.org>


- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'This commit fixes the handling of HAT Switch logical maximums greater than 8 in the Raptor Mach 2 joystick.', 'keywords': 'HID, HAT Switch, joystick', 'commit_classification': "It's a bug fix.", 'commit_complexity': 'Moderate, requires some setup or understanding of the system. For example, a new map type or a new link type.', 'Major related component': 'Other component related to eBPF but not listed above.', 'program_types_related': ['HID driver like programs']}
--------------------
--------------------
Processing Commit ID: 8ecf3c1dab1c675721d3d0255556abe2306fa340
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: 8ecf3c1dab1c675721d3d0255556abe2306fa340
  Author Name: Christophe Leroy
  Author Email: christophe.leroy@csgroup.eu
  Commit Date: 1715084222
  Commit Message:
    powerpc/bpf/32: Fix failing test_bpf tests

Recent additions in BPF like cpu v4 instructions
  Parent Hashes: be140f1732b523947425aaafbe2e37b41b622d96
  Refs:  test_bpf module
exhibits the following failures:

  test_bpf: #82 ALU_MOVSX | BPF_B jited:1 ret 2 != 1 (0x2 != 0x1)FAIL (1 times)
  test_bpf: #83 ALU_MOVSX | BPF_H jited:1 ret 2 != 1 (0x2 != 0x1)FAIL (1 times)
  test_bpf: #84 ALU64_MOVSX | BPF_B jited:1 ret 2 != 1 (0x2 != 0x1)FAIL (1 times)
  test_bpf: #85 ALU64_MOVSX | BPF_H jited:1 ret 2 != 1 (0x2 != 0x1)FAIL (1 times)
  test_bpf: #86 ALU64_MOVSX | BPF_W jited:1 ret 2 != 1 (0x2 != 0x1)FAIL (1 times)

  test_bpf: #165 ALU_SDIV_X: -6 / 2 = -3 jited:1 ret 2147483645 != -3 (0x7ffffffd != 0xfffffffd)FAIL (1 times)
  test_bpf: #166 ALU_SDIV_K: -6 / 2 = -3 jited:1 ret 2147483645 != -3 (0x7ffffffd != 0xfffffffd)FAIL (1 times)

  test_bpf: #169 ALU_SMOD_X: -7 % 2 = -1 jited:1 ret 1 != -1 (0x1 != 0xffffffff)FAIL (1 times)
  test_bpf: #170 ALU_SMOD_K: -7 % 2 = -1 jited:1 ret 1 != -1 (0x1 != 0xffffffff)FAIL (1 times)

  test_bpf: #172 ALU64_SMOD_K: -7 % 2 = -1 jited:1 ret 1 != -1 (0x1 != 0xffffffff)FAIL (1 times)

  test_bpf: #313 BSWAP 16: 0x0123456789abcdef -> 0xefcd
  eBPF filter opcode 00d7 (@2) unsupported
  jited:0 301 PASS
  test_bpf: #314 BSWAP 32: 0x0123456789abcdef -> 0xefcdab89
  eBPF filter opcode 00d7 (@2) unsupported
  jited:0 555 PASS
  test_bpf: #315 BSWAP 64: 0x0123456789abcdef -> 0x67452301
  eBPF filter opcode 00d7 (@2) unsupported
  jited:0 268 PASS
  test_bpf: #316 BSWAP 64: 0x0123456789abcdef >> 32 -> 0xefcdab89
  eBPF filter opcode 00d7 (@2) unsupported
  jited:0 269 PASS
  test_bpf: #317 BSWAP 16: 0xfedcba9876543210 -> 0x1032
  eBPF filter opcode 00d7 (@2) unsupported
  jited:0 460 PASS
  test_bpf: #318 BSWAP 32: 0xfedcba9876543210 -> 0x10325476
  eBPF filter opcode 00d7 (@2) unsupported
  jited:0 320 PASS
  test_bpf: #319 BSWAP 64: 0xfedcba9876543210 -> 0x98badcfe
  eBPF filter opcode 00d7 (@2) unsupported
  jited:0 222 PASS
  test_bpf: #320 BSWAP 64: 0xfedcba9876543210 >> 32 -> 0x10325476
  eBPF filter opcode 00d7 (@2) unsupported
  jited:0 273 PASS

  test_bpf: #344 BPF_LDX_MEMSX | BPF_B
  eBPF filter opcode 0091 (@5) unsupported
  jited:0 432 PASS
  test_bpf: #345 BPF_LDX_MEMSX | BPF_H
  eBPF filter opcode 0089 (@5) unsupported
  jited:0 381 PASS
  test_bpf: #346 BPF_LDX_MEMSX | BPF_W
  eBPF filter opcode 0081 (@5) unsupported
  jited:0 505 PASS

  test_bpf: #490 JMP32_JA: Unconditional jump: if (true) return 1
  eBPF filter opcode 0006 (@1) unsupported
  jited:0 261 PASS

  test_bpf: Summary: 1040 PASSED

- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'Fixes failing test_bpf cases on powerpc architecture related to BPF instructions and kernel tests.', 'keywords': 'test_bpf,bpf,instructions', 'commit_classification': "It's a bug fix.", 'commit_complexity': 'Moderate, requires some setup or understanding of the system. For example, a new map type or a new link type.', 'Major related component': 'The test cases and makefiles', 'program_types_related': ['It improves the overall eBPF infrastructure (e.g., verifier, runtime, etc.).']}
--------------------
--------------------
Processing Commit ID: 329a6720a3ebbc041983b267981ab2cac102de93
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: 329a6720a3ebbc041983b267981ab2cac102de93
  Author Name: Alexei Starovoitov
  Author Email: ast@kernel.org
  Commit Date: 1715040560
  Commit Message:
    Merge branch 'bpf-verifier-range-computation-improvements'

Cupertino Miranda says:

====================
bpf/verifier: range computation improvements

Hi everyone
  Parent Hashes: 41b307ad756e1b7b618bf9d9c1cce3595705ede4 92956786b4e26ea22e5b3c1c86cc71f5c9b3b9d8
  Refs: 

This is what I hope to be the last version. :)

Regards

- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'Improve bpf verifier with enhanced range computation methodology.', 'keywords': 'verifier, range, computation', 'commit_classification': "It's a cleanup or refactoring in the code.", 'commit_complexity': 'Moderate, requires some setup or understanding of the system. For example, a new map type or a new link type.', 'Major related component': 'The eBPF verifier', 'program_types_related': ['It improves the overall eBPF infrastructure (e.g., verifier, runtime, etc.).']}
--------------------
--------------------
Processing Commit ID: 92956786b4e26ea22e5b3c1c86cc71f5c9b3b9d8
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: 92956786b4e26ea22e5b3c1c86cc71f5c9b3b9d8
  Author Name: Cupertino Miranda
  Author Email: cupertino.miranda@oracle.com
  Commit Date: 1715040552
  Commit Message:
    selftests/bpf: MUL range computation tests.

Added a test for bound computation in MUL when non constant
values are used and both registers have bounded ranges.

Signed-off-by: Cupertino Miranda <cupertino.miranda@oracle.com>
Acked-by: Eduard Zingerman <eddyz87@gmail.com>
Acked-by: Andrii Nakryiko <andrii.nakryiko@gmail.com>
Cc: Yonghong Song <yonghong.song@linux.dev>
Cc: Alexei Starovoitov <alexei.starovoitov@gmail.com>
Cc: David Faust <david.faust@oracle.com>
Cc: Jose Marchesi <jose.marchesi@oracle.com>
Cc: Elena Zannoni <elena.zannoni@oracle.com>
Link: https://lore.kernel.org/r/20240506141849.185293-7-cupertino.miranda@oracle.com
Signed-off-by: Alexei Starovoitov <ast@kernel.org>

  Parent Hashes: 41d047a871062f1a4d1871a1908d380c14e75428
  Refs: 

- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'Add test case for MUL range computation with non-constant values and bounded registers.', 'keywords': 'test,MUL,range', 'commit_classification': "It's a test case or test infrastructure change.", 'commit_complexity': 'Simple, can be used without much configuration. For example, a simple helper function.', 'Major related component': 'The test cases and makefiles', 'program_types_related': ['tracepoints like programs', 'kprobe/uprobe/ftrace like programs', 'It improves the overall eBPF infrastructure (e.g., verifier, runtime, etc.).']}
--------------------
--------------------
Processing Commit ID: 41d047a871062f1a4d1871a1908d380c14e75428
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: 41d047a871062f1a4d1871a1908d380c14e75428
  Author Name: Cupertino Miranda
  Author Email: cupertino.miranda@oracle.com
  Commit Date: 1715040552
  Commit Message:
    bpf/verifier: relax MUL range computation check

MUL instruction required that src_reg would be a known value (i.e.
src_reg would be a const value). The condition in this case can be
relaxed
  Parent Hashes: 5ec9a7d13f49b9c1c5ba854244d1f2ba414cf139
  Refs:  since the range computation algorithm used in current code
already supports a proper range computation for any valid range value on
its operands.

Signed-off-by: Cupertino Miranda <cupertino.miranda@oracle.com>
Acked-by: Eduard Zingerman <eddyz87@gmail.com>
Acked-by: Andrii Nakryiko <andrii.nakryiko@gmail.com>
Cc: Yonghong Song <yonghong.song@linux.dev>
Cc: Alexei Starovoitov <alexei.starovoitov@gmail.com>
Cc: David Faust <david.faust@oracle.com>
Cc: Jose Marchesi <jose.marchesi@oracle.com>
Cc: Elena Zannoni <elena.zannoni@oracle.com>
Link: https://lore.kernel.org/r/20240506141849.185293-6-cupertino.miranda@oracle.com
Signed-off-by: Alexei Starovoitov <ast@kernel.org>


- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'The commit relaxes the MUL range computation check in the eBPF verifier.', 'keywords': 'MUL,relax,verifier', 'commit_classification': "It's a bug fix.", 'commit_complexity': 'Moderate, requires some setup or understanding of the system. For example, a new map type or a new link type.', 'Major related component': 'The eBPF verifier', 'program_types_related': ['It improves the overall eBPF infrastructure (e.g., verifier, runtime, etc.).']}
--------------------
--------------------
Processing Commit ID: 5ec9a7d13f49b9c1c5ba854244d1f2ba414cf139
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: 5ec9a7d13f49b9c1c5ba854244d1f2ba414cf139
  Author Name: Cupertino Miranda
  Author Email: cupertino.miranda@oracle.com
  Commit Date: 1715040551
  Commit Message:
    selftests/bpf: XOR and OR range computation tests.

Added a test for bound computation in XOR and OR when non constant
values are used and both registers have bounded ranges.

Signed-off-by: Cupertino Miranda <cupertino.miranda@oracle.com>
Acked-by: Eduard Zingerman <eddyz87@gmail.com>
Cc: Yonghong Song <yonghong.song@linux.dev>
Cc: Alexei Starovoitov <alexei.starovoitov@gmail.com>
Cc: David Faust <david.faust@oracle.com>
Cc: Jose Marchesi <jose.marchesi@oracle.com>
Cc: Elena Zannoni <elena.zannoni@oracle.com>
Cc: Andrii Nakryiko <andrii.nakryiko@gmail.com>
Link: https://lore.kernel.org/r/20240506141849.185293-5-cupertino.miranda@oracle.com
Signed-off-by: Alexei Starovoitov <ast@kernel.org>

  Parent Hashes: 138cc42c05d11fd5ee82ee1606d2c9823373a926
  Refs: 

- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'Added XOR and OR range computation tests for non-constant values in eBPF selftests.', 'keywords': 'XOR, OR, selftests', 'commit_classification': "It's a test case or test infrastructure change.", 'commit_complexity': 'Moderate, requires some setup or understanding of the system. For example, a new map type or a new link type.', 'Major related component': 'The test cases and makefiles', 'program_types_related': ['It improves the overall eBPF infrastructure (e.g., verifier, runtime, etc.).']}
--------------------
--------------------
Processing Commit ID: 138cc42c05d11fd5ee82ee1606d2c9823373a926
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: 138cc42c05d11fd5ee82ee1606d2c9823373a926
  Author Name: Cupertino Miranda
  Author Email: cupertino.miranda@oracle.com
  Commit Date: 1715040551
  Commit Message:
    bpf/verifier: improve XOR and OR range computation

Range for XOR and OR operators would not be attempted unless src_reg
would resolve to a single value
  Parent Hashes: 0922c78f592c60e5a8fe6ab968479def124d4ff3
  Refs:  i.e. a known constant value.
This condition is unnecessary

- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'Improves range computation logic for XOR and OR operations in BPF verifier.', 'keywords': 'verifier,XOR,OR', 'commit_classification': "It's a bug fix.", 'commit_complexity': 'Moderate, requires some setup or understanding of the system. For example, a new map type or a new link type.', 'Major related component': 'The eBPF verifier', 'program_types_related': ['It improves the overall eBPF infrastructure (e.g., verifier, runtime, etc.).']}
--------------------
--------------------
Processing Commit ID: 0922c78f592c60e5a8fe6ab968479def124d4ff3
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: 0922c78f592c60e5a8fe6ab968479def124d4ff3
  Author Name: Cupertino Miranda
  Author Email: cupertino.miranda@oracle.com
  Commit Date: 1715040551
  Commit Message:
    bpf/verifier: refactor checks for range computation

Split range computation checks in its own function
  Parent Hashes: d786957ebd3fb4cfd9147dbcccd1e8f3871b45ce
  Refs:  isolating pessimitic
range set for dst_reg and failing return to a single point.

Signed-off-by: Cupertino Miranda <cupertino.miranda@oracle.com>
Acked-by: Eduard Zingerman <eddyz87@gmail.com>
Cc: Yonghong Song <yonghong.song@linux.dev>
Cc: Alexei Starovoitov <alexei.starovoitov@gmail.com>
Cc: David Faust <david.faust@oracle.com>
Cc: Jose Marchesi <jose.marchesi@oracle.com>
Cc: Elena Zannoni <elena.zannoni@oracle.com>
Cc: Andrii Nakryiko <andrii.nakryiko@gmail.com>

bpf/verifier: improve code after range computation recent changes.
Link: https://lore.kernel.org/r/20240506141849.185293-3-cupertino.miranda@oracle.com

Signed-off-by: Alexei Starovoitov <ast@kernel.org>


- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'Refactor range computation checks into a separate function in the eBPF verifier.', 'keywords': 'refactor, range computation, verifier', 'commit_classification': "It's a cleanup or refactoring in the code.", 'commit_complexity': 'Moderate, requires some setup or understanding of the system. For example, a new map type or a new link type.', 'Major related component': 'The eBPF verifier', 'program_types_related': ['It improves the overall eBPF infrastructure (e.g., verifier, runtime, etc.).']}
--------------------
--------------------
Processing Commit ID: d786957ebd3fb4cfd9147dbcccd1e8f3871b45ce
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: d786957ebd3fb4cfd9147dbcccd1e8f3871b45ce
  Author Name: Cupertino Miranda
  Author Email: cupertino.miranda@oracle.com
  Commit Date: 1715040551
  Commit Message:
    bpf/verifier: replace calls to mark_reg_unknown.

In order to further simplify the code in adjust_scalar_min_max_vals all
the calls to mark_reg_unknown are replaced by __mark_reg_unknown.

static void mark_reg_unknown(struct bpf_verifier_env *env
  Parent Hashes: 41b307ad756e1b7b618bf9d9c1cce3595705ede4
  Refs: 
  			     struct bpf_reg_state *regs

- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'The commit replaces calls to mark_reg_unknown with __mark_reg_unknown in the eBPF verifier for code simplification.', 'keywords': 'mark_reg_unknown, bpf, verifier', 'commit_classification': "It's a cleanup or refactoring in the code.", 'commit_complexity': 'Simple, can be used without much configuration. For example, a simple helper function.', 'Major related component': 'The eBPF verifier', 'program_types_related': ['It improves the overall eBPF infrastructure (e.g., verifier, runtime, etc.).']}
--------------------
--------------------
Processing Commit ID: 41b307ad756e1b7b618bf9d9c1cce3595705ede4
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: 41b307ad756e1b7b618bf9d9c1cce3595705ede4
  Author Name: John Hubbard
  Author Email: jhubbard@nvidia.com
  Commit Date: 1715031576
  Commit Message:
    bpftool
  Parent Hashes: e549b39a0ab8880d7ae6c6495b00fc1cb8f36174
  Refs:  selftests/hid/bpf: Fix 29 clang warnings

When building either tools/bpf/bpftool

- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'Fixes 29 clang warnings in selftests/hid/bpf for bpftool.', 'keywords': 'clang,warnings,bpftool', 'commit_classification': "It's a bug fix.", 'commit_complexity': 'Simple, can be used without much configuration. For example, a simple helper function.', 'Major related component': 'The bpftool utility', 'program_types_related': ['HID driver like programs']}
--------------------
--------------------
Processing Commit ID: e549b39a0ab8880d7ae6c6495b00fc1cb8f36174
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: e549b39a0ab8880d7ae6c6495b00fc1cb8f36174
  Author Name: Michal Schmidt
  Author Email: mschmidt@redhat.com
  Commit Date: 1715028142
  Commit Message:
    selftests/bpf: Fix pointer arithmetic in test_xdp_do_redirect

Cast operation has a higher precedence than addition. The code here
wants to zero the 2nd half of the 64-bit metadata
  Parent Hashes: 8e6d9ae2e09f1f6ba65614a5e5c5a2a2e335dcba
  Refs:  but due to a pointer
arithmetic mistake

- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'Fixes pointer arithmetic mistake in test_xdp_do_redirect for selftests in BPF.', 'keywords': 'pointer, arithmetic, selftests', 'commit_classification': "It's a bug fix.", 'commit_complexity': 'Simple, can be used without much configuration. For example, a simple helper function.', 'Major related component': 'The test cases and makefiles', 'program_types_related': ['xdp like programs']}
--------------------
--------------------
Processing Commit ID: 8e6d9ae2e09f1f6ba65614a5e5c5a2a2e335dcba
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: 8e6d9ae2e09f1f6ba65614a5e5c5a2a2e335dcba
  Author Name: Martin KaFai Lau
  Author Email: martin.lau@kernel.org
  Commit Date: 1715028024
  Commit Message:
    selftests/bpf: Use bpf_tracing.h instead of bpf_tcp_helpers.h

The bpf programs that this patch changes require the BPF_PROG macro.
The BPF_PROG macro is defined in the libbpf's bpf_tracing.h.
Some tests include bpf_tcp_helpers.h which includes bpf_tracing.h.
They don't need other things from bpf_tcp_helpers.h other than
bpf_tracing.h. This patch simplifies it by directly including
the bpf_tracing.h.

The motivation of this unnecessary code churn is to retire
the bpf_tcp_helpers.h by directly using vmlinux.h. Right now
  Parent Hashes: a9e7715ce8b3a62a2133e47e87107632a26ad1e2
  Refs: 
the main usage of the bpf_tcp_helpers.h is the partial kernel
socket definitions (e.g. socket

- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'The commit simplifies code by directly including bpf_tracing.h instead of bpf_tcp_helpers.h in selftests/bpf.', 'keywords': 'bpf_tracing.h,selftests,bpf_tcp_helpers.h', 'commit_classification': "It's a cleanup or refactoring in the code.", 'commit_complexity': 'Simple, can be used without much configuration. For example, a simple helper function.', 'Major related component': 'The test cases and makefiles', 'program_types_related': ['tracepoints like programs']}
--------------------
--------------------
Processing Commit ID: 61688a82e047a4166436bf2665716cc070572ffa
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: 61688a82e047a4166436bf2665716cc070572ffa
  Author Name: Hari Bathini
  Author Email: hbathini@linux.ibm.com
  Commit Date: 1714997118
  Commit Message:
    powerpc/bpf: enable kfunc call

Currently
  Parent Hashes: 2ecfe59cd7de1f202e9af2516a61fbbf93d0bd4d
  Refs:  bpf jit code on powerpc assumes all the bpf functions and
helpers to be part of core kernel text. This is false for kfunc case

- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'Enable kfunc calls in powerpc BPF JIT by addressing assumptions about BPF function locations.', 'keywords': 'powerpc, kfunc, JIT', 'commit_classification': "It's a new feature.", 'commit_complexity': 'Moderate, requires some setup or understanding of the system. For example, a new map type or a new link type.', 'Major related component': 'The JIT compiler', 'program_types_related': ['It improves the overall eBPF infrastructure (e.g., verifier, runtime, etc.).']}
--------------------
--------------------
Processing Commit ID: 2ecfe59cd7de1f202e9af2516a61fbbf93d0bd4d
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: 2ecfe59cd7de1f202e9af2516a61fbbf93d0bd4d
  Author Name: Hari Bathini
  Author Email: hbathini@linux.ibm.com
  Commit Date: 1714997118
  Commit Message:
    powerpc/64/bpf: fix tail calls for PCREL addressing

With PCREL addressing
  Parent Hashes: fae573060c8da4d84a2551c6753d272abfda8ddc
  Refs:  there is no kernel TOC. So

- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'Fixes tail call handling for PCREL addressing mode on powerpc/64 architecture.', 'keywords': 'tail calls, PCREL, powerpc', 'commit_classification': "It's a bug fix.", 'commit_complexity': 'Moderate, requires some setup or understanding of the system. For example, a new map type or a new link type.', 'Major related component': 'The JIT compiler', 'program_types_related': ['It improves the overall eBPF infrastructure (e.g., verifier, runtime, etc.).']}
--------------------
--------------------
Processing Commit ID: a9e7715ce8b3a62a2133e47e87107632a26ad1e2
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: a9e7715ce8b3a62a2133e47e87107632a26ad1e2
  Author Name: Jose E. Marchesi
  Author Email: jose.marchesi@oracle.com
  Commit Date: 1714715938
  Commit Message:
    libbpf: Avoid casts from pointers to enums in bpf_tracing.h

[Differences from V1:
  - Do not introduce a global typedef
  Parent Hashes: cf9bea94f6b2934d409511c05337010b137316a3
  Refs:  as this is a public header.
  - Keep the void* casts in BPF_KPROBE_READ_RET_IP and
    BPF_KRETPROBE_READ_RET_IP

- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'This commit avoids pointer-to-enum casts in the libbpf bpf_tracing.h code.', 'keywords': 'libbpf, enums, casts', 'commit_classification': "It's a cleanup or refactoring in the code.", 'commit_complexity': 'Simple, can be used without much configuration. For example, a simple helper function.', 'Major related component': 'The libbpf library', 'program_types_related': ['kprobe/uprobe/ftrace like programs']}
--------------------
--------------------
Processing Commit ID: cf9bea94f6b2934d409511c05337010b137316a3
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: cf9bea94f6b2934d409511c05337010b137316a3
  Author Name: Jose E. Marchesi
  Author Email: jose.marchesi@oracle.com
  Commit Date: 1714715242
  Commit Message:
    libbpf: Fix bpf_ksym_exists() in GCC

The macro bpf_ksym_exists is defined in bpf_helpers.h as:

  #define bpf_ksym_exists(sym) ({								\
  	_Static_assert(!__builtin_constant_p(!!sym)
  Parent Hashes: 087d757fb4736ecbd3e42eebf9b39d5225d4a2ee
  Refs:  #sym " should be marked as __weak");	\
  	!!sym;											\
  })

The purpose of the macro is to determine whether a given symbol has
been defined

- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'Fix issue with bpf_ksym_exists macro in GCC within the libbpf library.', 'keywords': 'libbpf,GCC,macro', 'commit_classification': "It's a bug fix.", 'commit_complexity': 'Simple, can be used without much configuration. For example, a simple helper function.', 'Major related component': 'The libbpf library', 'program_types_related': ['It improves the overall eBPF infrastructure (e.g., verifier, runtime, etc.).']}
--------------------
--------------------
Processing Commit ID: 087d757fb4736ecbd3e42eebf9b39d5225d4a2ee
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: 087d757fb4736ecbd3e42eebf9b39d5225d4a2ee
  Author Name: Andrii Nakryiko
  Author Email: andrii@kernel.org
  Commit Date: 1714693263
  Commit Message:
    libbpf: fix ring_buffer__consume_n() return result logic

Add INT_MAX check to ring_buffer__consume_n(). We do the similar check
to handle int return result of all these ring buffer APIs in other APIs
and ring_buffer__consume_n() is missing one. This patch fixes this
omission.

Signed-off-by: Andrii Nakryiko <andrii@kernel.org>
Acked-by: Kumar Kartikeya Dwivedi <memxor@gmail.com>
Link: https://lore.kernel.org/r/20240430201952.888293-2-andrii@kernel.org
Signed-off-by: Martin KaFai Lau <martin.lau@kernel.org>

  Parent Hashes: 00f0e08f23fc007f4a5a71cd7e37fcdb15af0c1b
  Refs: 

- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': "Fix logic in libbpf's ring_buffer__consume_n() to properly handle INT_MAX case.", 'keywords': 'libbpf,int,ring_buffer', 'commit_classification': "It's a bug fix.", 'commit_complexity': 'Simple, can be used without much configuration. For example, a simple helper function.', 'Major related component': 'The libbpf library', 'program_types_related': ['It improves the overall eBPF infrastructure (e.g., verifier, runtime, etc.).']}
--------------------
--------------------
Processing Commit ID: 00f0e08f23fc007f4a5a71cd7e37fcdb15af0c1b
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: 00f0e08f23fc007f4a5a71cd7e37fcdb15af0c1b
  Author Name: Andrii Nakryiko
  Author Email: andrii@kernel.org
  Commit Date: 1714693262
  Commit Message:
    libbpf: fix potential overflow in ring__consume_n()

ringbuf_process_ring() return int64_t
  Parent Hashes: 29f38ca3e5ca5cacc33291f22c4848c6907b9d2b
  Refs:  while ring__consume_n() assigns
it to int. It's highly unlikely

- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'Fix potential overflow in ring__consume_n function in libbpf by adjusting data type assignment.', 'keywords': 'potential overflow, ring__consume_n, libbpf', 'commit_classification': "It's a bug fix.", 'commit_complexity': 'Simple, can be used without much configuration. For example, a simple helper function.', 'Major related component': 'The libbpf library', 'program_types_related': ['It improves the overall eBPF infrastructure (e.g., verifier, runtime, etc.).']}
--------------------
--------------------
Processing Commit ID: 29f38ca3e5ca5cacc33291f22c4848c6907b9d2b
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: 29f38ca3e5ca5cacc33291f22c4848c6907b9d2b
  Author Name: Martin KaFai Lau
  Author Email: martin.lau@kernel.org
  Commit Date: 1714692730
  Commit Message:
    Merge branch 'Add new args into tcp_congestion_ops' cong_control'

Miao Xu says:

====================
This patchset attempts to add two new arguments into the hookpoint
cong_control in tcp_congestion_ops. The new arguments are inherited
from the caller tcp_cong_control and can be used by any bpf cc prog
that implements its own logic inside this hookpoint.

Please review. Thanks a lot!

Changelog
=====
v2->v3:
  - Fixed the broken selftest caused by the new arguments.
  - Renamed the selftest file name and bpf prog name.

v1->v2:
  - Split the patchset into 3 separate patches.
  - Added highlights in the selftest prog.
  - Removed the dependency on bpf_tcp_helpers.h.
====================

Signed-off-by: Martin KaFai Lau <martin.lau@kernel.org>

  Parent Hashes: f8c423d1ca4f4f4224bb6ca486478b7f51a91701 96c3490d6423b7f24d356e24a61c24de69f3de77
  Refs: 

- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'Merge to add new arguments to tcp_congestion_ops hook and fix related selftests.', 'keywords': 'tcp, congestion-control, hookpoint', 'commit_classification': "It's a new feature.", 'commit_complexity': 'Moderate, requires some setup or understanding of the system. For example, a new map type or a new link type.', 'Major related component': 'The attach events and bpf link. e.g. perf events, tracepoints, etc.', 'program_types_related': ['tc/netfilter like programs']}
--------------------
--------------------
Processing Commit ID: 96c3490d6423b7f24d356e24a61c24de69f3de77
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: 96c3490d6423b7f24d356e24a61c24de69f3de77
  Author Name: Miao Xu
  Author Email: miaxu@meta.com
  Commit Date: 1714692724
  Commit Message:
    selftests/bpf: Add test for the use of new args in cong_control

This patch adds a selftest to show the usage of the new arguments in
cong_control. For simplicity's sake
  Parent Hashes: 0325cbd21e3c26eff88bc7da303ffb46b4f5d294
  Refs:  the testing example reuses cubic's
kernel functions.

Signed-off-by: Miao Xu <miaxu@meta.com>
Link: https://lore.kernel.org/r/20240502042318.801932-4-miaxu@meta.com
Signed-off-by: Martin KaFai Lau <martin.lau@kernel.org>


- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'Add a selftest for demonstrating new arguments usage in cong_control.', 'keywords': 'selftest,new arguments,cong control', 'commit_classification': "It's a test case or test infrastructure change.", 'commit_complexity': 'Simple, can be used without much configuration. For example, a simple helper function.', 'Major related component': 'The test cases and makefiles', 'program_types_related': ['other']}
--------------------
--------------------
Processing Commit ID: 0325cbd21e3c26eff88bc7da303ffb46b4f5d294
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: 0325cbd21e3c26eff88bc7da303ffb46b4f5d294
  Author Name: Miao Xu
  Author Email: miaxu@meta.com
  Commit Date: 1714692416
  Commit Message:
    bpf: tcp: Allow to write tp->snd_cwnd_stamp in bpf_tcp_ca

This patch allows the write of tp->snd_cwnd_stamp in a bpf tcp
ca program. An use case of writing this field is to keep track
of the time whenever tp->snd_cwnd is raised or reduced inside
the `cong_control` callback.

Reviewed-by: Eric Dumazet <edumazet@google.com>
Signed-off-by: Miao Xu <miaxu@meta.com>
Link: https://lore.kernel.org/r/20240502042318.801932-3-miaxu@meta.com
Signed-off-by: Martin KaFai Lau <martin.lau@kernel.org>

  Parent Hashes: 57bfc7605ca5b102ba336779ae9adbc5bbba1d96
  Refs: 

- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'Allows writing tp->snd_cwnd_stamp in BPF TCP congestion control programs.', 'keywords': 'bpf,tcp,snd_cwnd_stamp', 'commit_classification': "It's a new feature.", 'commit_complexity': 'Moderate, requires some setup or understanding of the system. For example, a new map type or a new link type.', 'Major related component': 'The attach events and bpf link. e.g. perf events, tracepoints, etc.', 'program_types_related': ['cgroup like programs']}
--------------------
--------------------
Processing Commit ID: f8c423d1ca4f4f4224bb6ca486478b7f51a91701
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: f8c423d1ca4f4f4224bb6ca486478b7f51a91701
  Author Name: Martin KaFai Lau
  Author Email: martin.lau@kernel.org
  Commit Date: 1714688817
  Commit Message:
    Merge branch 'selftests/bpf: Add sockaddr tests for kernel networking'

Jordan Rife says:

====================
This patch series adds test coverage for BPF sockaddr hooks and their
interactions with kernel socket functions (i.e. kernel_bind()
  Parent Hashes: 08e90da6872a9f9f63ca2911bbce6883b6fc1a19 e0c8a7e7526ff1526d4dcc7d71aad4e7fe2ec767
  Refs: 
kernel_connect()

- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'This commit adds test coverage for BPF sockaddr hooks testing kernel socket functions like kernel_bind and kernel_connect.', 'keywords': 'test coverage,sockaddr hooks,kernel functions', 'commit_classification': "It's a test case or test infrastructure change.", 'commit_complexity': 'Moderate, requires some setup or understanding of the system. For example, a new map type or a new link type.', 'Major related component': 'The test cases and makefiles', 'program_types_related': ['socket like programs']}
--------------------
--------------------
Processing Commit ID: e0c8a7e7526ff1526d4dcc7d71aad4e7fe2ec767
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: e0c8a7e7526ff1526d4dcc7d71aad4e7fe2ec767
  Author Name: Jordan Rife
  Author Email: jrife@google.com
  Commit Date: 1714688611
  Commit Message:
    selftests/bpf: Add kernel socket operation tests

This patch creates two sets of sock_ops that call out to the SYSCALL
hooks in the sock_addr_kern BPF program and uses them to construct
test cases for the range of supported operations (kernel_connect()
  Parent Hashes: 524e05ac4e14bb50b4f442e1fe88540abc9b72fd
  Refs: 
kernel_bind()

- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'Added kernel socket operation tests in selftests for BPF programs involving syscall hooks.', 'keywords': 'socket tests syscall', 'commit_classification': "It's a test case or test infrastructure change.", 'commit_complexity': 'Moderate, requires some setup or understanding of the system. For example, a new map type or a new link type.', 'Major related component': 'The test cases and makefiles', 'program_types_related': ['socket like programs']}
--------------------
--------------------
Processing Commit ID: 524e05ac4e14bb50b4f442e1fe88540abc9b72fd
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: 524e05ac4e14bb50b4f442e1fe88540abc9b72fd
  Author Name: Jordan Rife
  Author Email: jrife@google.com
  Commit Date: 1714688611
  Commit Message:
    selftests/bpf: Make sock configurable for each test case

In order to reuse the same test code for both socket system calls (e.g.
connect()
  Parent Hashes: 8a9d22b8aeb2182cfe83991f11a88b3351084d3e
  Refs:  bind()

- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'The commit makes socket configurations customizable in each eBPF selftest case.', 'keywords': 'selftests,bpf,socket', 'commit_classification': "It's a test case or test infrastructure change.", 'commit_complexity': 'Simple, can be used without much configuration. For example, a simple helper function.', 'Major related component': 'The test cases and makefiles', 'program_types_related': ['socket like programs']}
--------------------
--------------------
Processing Commit ID: 8a9d22b8aeb2182cfe83991f11a88b3351084d3e
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: 8a9d22b8aeb2182cfe83991f11a88b3351084d3e
  Author Name: Jordan Rife
  Author Email: jrife@google.com
  Commit Date: 1714688605
  Commit Message:
    selftests/bpf: Move IPv4 and IPv6 sockaddr test cases

This patch lays the groundwork for testing IPv4 and IPv6 sockaddr hooks
and their interaction with both socket syscalls and kernel functions
(e.g. kernel_connect
  Parent Hashes: 15b6671efa508ff9c1fb995452913f8de85db73b
  Refs:  kernel_bind

- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'The commit reorganizes IPv4 and IPv6 sockaddr test cases to facilitate testing hooks with socket syscalls and kernel functions.', 'keywords': 'IPv4, IPv6, sockaddr', 'commit_classification': "It's a test case or test infrastructure change.", 'commit_complexity': 'Moderate, requires some setup or understanding of the system. For example, a new map type or a new link type.', 'Major related component': 'The test cases and makefiles', 'program_types_related': ['socket like programs']}
--------------------
--------------------
Processing Commit ID: 15b6671efa508ff9c1fb995452913f8de85db73b
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: 15b6671efa508ff9c1fb995452913f8de85db73b
  Author Name: Jordan Rife
  Author Email: jrife@google.com
  Commit Date: 1714676962
  Commit Message:
    selftests/bpf: Implement BPF programs for kernel socket operations

This patch lays out a set of SYSCALL programs that can be used to invoke
the socket operation kfuncs in bpf_testmod
  Parent Hashes: bbb1cfdd02249dc8cf878e86a523b28814ed36c0
  Refs:  allowing a test program to
manipulate kernel socket operations from userspace.

Signed-off-by: Jordan Rife <jrife@google.com>
Link: https://lore.kernel.org/r/20240429214529.2644801-4-jrife@google.com
Signed-off-by: Martin KaFai Lau <martin.lau@kernel.org>


- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'This commit implements BPF programs for testing kernel socket operations in selftests.', 'keywords': 'BPF, socket, selftests', 'commit_classification': "It's a test case or test infrastructure change.", 'commit_complexity': 'Moderate, requires some setup or understanding of the system. For example, a new map type or a new link type.', 'Major related component': 'The test cases and makefiles', 'program_types_related': ['socket like programs']}
--------------------
--------------------
Processing Commit ID: bbb1cfdd02249dc8cf878e86a523b28814ed36c0
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: bbb1cfdd02249dc8cf878e86a523b28814ed36c0
  Author Name: Jordan Rife
  Author Email: jrife@google.com
  Commit Date: 1714676962
  Commit Message:
    selftests/bpf: Implement socket kfuncs for bpf_testmod

This patch adds a set of kfuncs to bpf_testmod that can be used to
manipulate a socket from kernel space.

Signed-off-by: Jordan Rife <jrife@google.com>
Link: https://lore.kernel.org/r/20240429214529.2644801-3-jrife@google.com
Signed-off-by: Martin KaFai Lau <martin.lau@kernel.org>

  Parent Hashes: 8e667a065daa6f4c01eadc20f3815f7bf13255bc
  Refs: 

- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'Add kfuncs to bpf_testmod for manipulating sockets from kernel space.', 'keywords': 'kfuncs,socket,bpf_testmod', 'commit_classification': "It's a new feature.", 'commit_complexity': 'Moderate, requires some setup or understanding of the system. For example, a new map type or a new link type.', 'Major related component': 'The helper and kfuncs', 'program_types_related': ['socket like programs']}
--------------------
--------------------
Processing Commit ID: 8e667a065daa6f4c01eadc20f3815f7bf13255bc
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: 8e667a065daa6f4c01eadc20f3815f7bf13255bc
  Author Name: Jordan Rife
  Author Email: jrife@google.com
  Commit Date: 1714676962
  Commit Message:
    selftests/bpf: Fix bind program for big endian systems

Without this fix
  Parent Hashes: 08e90da6872a9f9f63ca2911bbce6883b6fc1a19
  Refs:  the bind4 and bind6 programs will reject bind attempts
on big endian systems. This patch ensures that CI tests pass for the
s390x architecture.

Signed-off-by: Jordan Rife <jrife@google.com>
Link: https://lore.kernel.org/r/20240429214529.2644801-2-jrife@google.com
Signed-off-by: Martin KaFai Lau <martin.lau@kernel.org>


- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'This commit fixes the bind program to work on big endian systems for selftests in s390x architecture.', 'keywords': 'bind program, big endian, selftests', 'commit_classification': "It's a bug fix.", 'commit_complexity': 'Moderate, requires some setup or understanding of the system. For example, a new map type or a new link type.', 'Major related component': 'The test cases and makefiles', 'program_types_related': ['It improves the overall eBPF infrastructure (e.g., verifier, runtime, etc.).']}
--------------------
--------------------
Processing Commit ID: e958da0ddbe831197a0023251880a4a09d5ba268
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: e958da0ddbe831197a0023251880a4a09d5ba268
  Author Name: Jakub Kicinski
  Author Email: kuba@kernel.org
  Commit Date: 1714676785
  Commit Message:
    Merge git://git.kernel.org/pub/scm/linux/kernel/git/netdev/net

Cross-merge networking fixes after downstream PR.

Conflicts:

include/linux/filter.h
kernel/bpf/core.c
  66e13b615a0c ("bpf: verifier: prevent userspace memory access")
  d503a04f8bc0 ("bpf: Add support for certain atomics in bpf_arena to x86 JIT")
https://lore.kernel.org/all/20240429114939.210328b0@canb.auug.org.au/

No adjacent changes.

Signed-off-by: Jakub Kicinski <kuba@kernel.org>

  Parent Hashes: dcc61472534e48a200262fd297ab21f8dd94d6cc 545c494465d24b10a4370545ba213c0916f70b95
  Refs: 

- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'Cross-merge of network-related fixes into main branch with handling of conflicts.', 'keywords': 'cross-merge, networking, conflicts', 'commit_classification': "It's other type of commit.", 'commit_complexity': 'Moderate, requires some setup or understanding of the system. For example, a new map type or a new link type.', 'Major related component': 'Other component related to eBPF but not listed above.', 'program_types_related': ['It improves the overall eBPF infrastructure (e.g., verifier, runtime, etc.).']}
--------------------
--------------------
Processing Commit ID: 08e90da6872a9f9f63ca2911bbce6883b6fc1a19
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: 08e90da6872a9f9f63ca2911bbce6883b6fc1a19
  Author Name: Jose E. Marchesi
  Author Email: jose.marchesi@oracle.com
  Commit Date: 1714666921
  Commit Message:
    bpf: Missing trailing slash in tools/testing/selftests/bpf/Makefile

tools/lib/bpf/Makefile assumes that the patch in OUTPUT is a directory
and that it includes a trailing slash.  This seems to be a common
expectation for OUTPUT among all the Makefiles.

In the rule for runqslower in tools/testing/selftests/bpf/Makefile the
variable BPFTOOL_OUTPUT is set to a directory name that lacks a
trailing slash.  This results in a malformed BPF_HELPER_DEFS being
defined in lib/bpf/Makefile.

This problem becomes evident when a file like
tools/lib/bpf/bpf_tracing.h gets updated.

This patch fixes the problem by adding the missing slash in the value
for BPFTOOL_OUTPUT in the $(OUTPUT)/runqslower rule.

Regtested by running selftests in bpf-next master and building
samples/bpf programs.

Signed-off-by: Jose E. Marchesi <jose.marchesi@oracle.com>
Signed-off-by: Andrii Nakryiko <andrii@kernel.org>
Link: https://lore.kernel.org/bpf/20240502140831.23915-1-jose.marchesi@oracle.com

  Parent Hashes: 7c13ef16e87ac2e44d16c0468b1191bceb06f95c
  Refs: 

- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'Added missing trailing slash in BPFTOOL_OUTPUT to fix malformed BPF_HELPER_DEFS in Makefile.', 'keywords': 'Makefile, trailing slash, BPFTOOL_OUTPUT', 'commit_classification': "It's a bug fix.", 'commit_complexity': 'Simple, can be used without much configuration. For example, a simple helper function.', 'Major related component': 'The test cases and makefiles', 'program_types_related': ["It's not related to any of the above."]}
--------------------
--------------------
Processing Commit ID: 7c13ef16e87ac2e44d16c0468b1191bceb06f95c
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: 7c13ef16e87ac2e44d16c0468b1191bceb06f95c
  Author Name: Jiri Olsa
  Author Email: jolsa@kernel.org
  Commit Date: 1714665384
  Commit Message:
    libbpf: Fix error message in attach_kprobe_multi

We just failed to retrieve pattern
  Parent Hashes: 5a3941f84b8f91bb1e111499d803b32188d33e5d
  Refs:  so we need to print spec instead.

Fixes: ddc6b04989eb ("libbpf: Add bpf_program__attach_kprobe_multi_opts function")
Reported-by: Andrii Nakryiko <andrii@kernel.org>
Signed-off-by: Jiri Olsa <jolsa@kernel.org>
Signed-off-by: Andrii Nakryiko <andrii@kernel.org>
Link: https://lore.kernel.org/bpf/20240502075541.1425761-2-jolsa@kernel.org


- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'This commit fixes an error message in the libbpf function for attaching kprobe multiple options.', 'keywords': 'libbpf,error message,kprobe', 'commit_classification': "It's a bug fix.", 'commit_complexity': 'Simple, can be used without much configuration. For example, a simple helper function.', 'Major related component': 'The libbpf library', 'program_types_related': ['kprobe/uprobe/ftrace like programs']}
--------------------
--------------------
Processing Commit ID: 5a3941f84b8f91bb1e111499d803b32188d33e5d
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: 5a3941f84b8f91bb1e111499d803b32188d33e5d
  Author Name: Jiri Olsa
  Author Email: jolsa@kernel.org
  Commit Date: 1714665383
  Commit Message:
    libbpf: Fix error message in attach_kprobe_session

We just failed to retrieve pattern
  Parent Hashes: ac2f438c2a85acd07e0ac7dc2f69d45bda1bb498
  Refs:  so we need to print spec instead.

Fixes: 2ca178f02b2f ("libbpf: Add support for kprobe session attach")
Reported-by: Andrii Nakryiko <andrii@kernel.org>
Signed-off-by: Jiri Olsa <jolsa@kernel.org>
Signed-off-by: Andrii Nakryiko <andrii@kernel.org>
Link: https://lore.kernel.org/bpf/20240502075541.1425761-1-jolsa@kernel.org


- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'The commit fixes the error message in libbpf during kprobe session attachment.', 'keywords': 'libbpf,error message,kprobe', 'commit_classification': "It's a bug fix.", 'commit_complexity': 'Simple, can be used without much configuration. For example, a simple helper function.', 'Major related component': 'The libbpf library', 'program_types_related': ['It improves the overall eBPF infrastructure (e.g., verifier, runtime, etc.).']}
--------------------
--------------------
Processing Commit ID: 545c494465d24b10a4370545ba213c0916f70b95
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: 545c494465d24b10a4370545ba213c0916f70b95
  Author Name: Linus Torvalds
  Author Email: torvalds@linux-foundation.org
  Commit Date: 1714665107
  Commit Message:
    Merge tag 'net-6.9-rc7' of git://git.kernel.org/pub/scm/linux/kernel/git/netdev/net

Pull networking fixes from Paolo Abeni:
 "Including fixes from bpf.

  Relatively calm week
  Parent Hashes: 0106679839f7c69632b3b9833c3268c316c0a9fc 78cfe547607a83de60cd25304fa2422777634712
  Refs:  likely due to public holiday in most places. No
  known outstanding regressions.

  Current release - regressions:

   - rxrpc: fix wrong alignmask in __page_frag_alloc_align()

   - eth: e1000e: change usleep_range to udelay in PHY mdic access

  Previous releases - regressions:

   - gro: fix udp bad offset in socket lookup

   - bpf: fix incorrect runtime stat for arm64

   - tipc: fix UAF in error path

   - netfs: fix a potential infinite loop in extract_user_to_sg()

   - eth: ice: ensure the copied buf is NUL terminated

   - eth: qeth: fix kernel panic after setting hsuid

  Previous releases - always broken:

   - bpf:
       - verifier: prevent userspace memory access
       - xdp: use flags field to disambiguate broadcast redirect

   - bridge: fix multicast-to-unicast with fraglist GSO

   - mptcp: ensure snd_nxt is properly initialized on connect

   - nsh: fix outer header access in nsh_gso_segment().

   - eth: bcmgenet: fix racing registers access

   - eth: vxlan: fix stats counters.

  Misc:

   - a bunch of MAINTAINERS file updates"

* tag 'net-6.9-rc7' of git://git.kernel.org/pub/scm/linux/kernel/git/netdev/net: (45 commits)
  MAINTAINERS: mark MYRICOM MYRI-10G as Orphan
  MAINTAINERS: remove Ariel Elior
  net: gro: add flush check in udp_gro_receive_segment
  net: gro: fix udp bad offset in socket lookup by adding {inner_}network_offset to napi_gro_cb
  ipv4: Fix uninit-value access in __ip_make_skb()
  s390/qeth: Fix kernel panic after setting hsuid
  vxlan: Pull inner IP header in vxlan_rcv().
  tipc: fix a possible memleak in tipc_buf_append
  tipc: fix UAF in error path
  rxrpc: Clients must accept conn from any address
  net: core: reject skb_copy(_expand) for fraglist GSO skbs
  net: bridge: fix multicast-to-unicast with fraglist GSO
  mptcp: ensure snd_nxt is properly initialized on connect
  e1000e: change usleep_range to udelay in PHY mdic access
  net: dsa: mv88e6xxx: Fix number of databases for 88E6141 / 88E6341
  cxgb4: Properly lock TX queue for the selftest.
  rxrpc: Fix using alignmask being zero for __page_frag_alloc_align()
  vxlan: Add missing VNI filter counter update in arp_reduce().
  vxlan: Fix racy device stats updates.
  net: qede: use return from qede_parse_actions()
  ...


- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'This commit merges networking fixes, including BPF-related issues and various other network component corrections.', 'keywords': 'networking,fixed,BPF', 'commit_classification': "It's other type of commit.", 'commit_complexity': "Complex, needs expert knowledge or significant changes to existing systems. Like adding a completely new subsystem support or a completely new program type don't exist before.", 'Major related component': 'Other component related to eBPF but not listed above.', 'program_types_related': ['It improves the overall eBPF infrastructure (e.g., verifier, runtime, etc.).']}
--------------------
--------------------
Processing Commit ID: ac2f438c2a85acd07e0ac7dc2f69d45bda1bb498
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: ac2f438c2a85acd07e0ac7dc2f69d45bda1bb498
  Author Name: Vadim Fedorenko
  Author Email: vadfed@meta.com
  Commit Date: 1714595546
  Commit Message:
    bpf: crypto: fix build when CONFIG_CRYPTO=m

Crypto subsytem can be build as a module. In this case we still have to
build BPF crypto framework otherwise the build will fail.

Fixes: 3e1c6f35409f ("bpf: make common crypto API for TC/XDP programs")
Reported-by: kernel test robot <lkp@intel.com>
Closes: https://lore.kernel.org/oe-kbuild-all/202405011634.4JK40epY-lkp@intel.com/
Signed-off-by: Vadim Fedorenko <vadfed@meta.com>
Link: https://lore.kernel.org/r/20240501170130.1682309-1-vadfed@meta.com
Signed-off-by: Martin KaFai Lau <martin.lau@kernel.org>

  Parent Hashes: 0737df6de94661ae55fd3343ce9abec32c687e62
  Refs: 

- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'Fix build issue in BPF crypto framework when crypto subsystem is built as a module.', 'keywords': 'build, crypto, fix', 'commit_classification': "It's a bug fix.", 'commit_complexity': 'Moderate, requires some setup or understanding of the system. For example, a new map type or a new link type.', 'Major related component': 'Other component related to eBPF but not listed above.', 'program_types_related': ['tc/netfilter like programs', 'xdp like programs']}
--------------------
--------------------
Processing Commit ID: 0737df6de94661ae55fd3343ce9abec32c687e62
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: 0737df6de94661ae55fd3343ce9abec32c687e62
  Author Name: Andrii Nakryiko
  Author Email: andrii@kernel.org
  Commit Date: 1714583844
  Commit Message:
    libbpf: better fix for handling nulled-out struct_ops program

Previous attempt to fix the handling of nulled-out (from skeleton)
struct_ops program is working well only if struct_ops program is defined
as non-autoloaded by default (i.e.
  Parent Hashes: d913aaa990b6024ce815b66e6ce64d88ba2cd0eb
  Refs:  has SEC("?struct_ops") annotation

- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'Fixes handling of nulled-out struct_ops programs in libbpf for non-autoloaded by default cases.', 'keywords': 'libbpf, struct_ops, autoloaded', 'commit_classification': "It's a bug fix.", 'commit_complexity': 'Moderate, requires some setup or understanding of the system. For example, a new map type or a new link type.', 'Major related component': 'The libbpf library', 'program_types_related': ['It improves the overall eBPF infrastructure (e.g., verifier, runtime, etc.).']}
--------------------
--------------------
Processing Commit ID: d913aaa990b6024ce815b66e6ce64d88ba2cd0eb
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: d913aaa990b6024ce815b66e6ce64d88ba2cd0eb
  Author Name: Andrii Nakryiko
  Author Email: andrii@kernel.org
  Commit Date: 1714582428
  Commit Message:
    Merge branch 'libbpf-support-module-function-syntax-for-tracing-programs'

Viktor Malik says:

====================
libbpf: support "module:function" syntax for tracing programs

In some situations
  Parent Hashes: 9a1a2cb5a0e3531d68a2616663ddce49df85dfff 960635887c967338fd567def3e7905a294f5002b
  Refs:  it is useful to explicitly specify a kernel module
to search for a tracing program target (e.g. when a function of the same
name exists in multiple modules or in vmlinux).

This change enables that by allowing the "module:function" syntax for
the find_kernel_btf_id function. Thanks to this

- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'This commit adds support for "module:function" syntax in libbpf for tracing programs.', 'keywords': 'libbpf, module:function, tracing', 'commit_classification': "It's a new feature.", 'commit_complexity': 'Moderate, requires some setup or understanding of the system. For example, a new map type or a new link type.', 'Major related component': 'The libbpf library', 'program_types_related': ['tracepoints like programs']}
--------------------
--------------------
Processing Commit ID: 960635887c967338fd567def3e7905a294f5002b
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: 960635887c967338fd567def3e7905a294f5002b
  Author Name: Viktor Malik
  Author Email: vmalik@redhat.com
  Commit Date: 1714582428
  Commit Message:
    selftests/bpf: add tests for the "module: Function" syntax

The previous patch added support for the "module:function" syntax for
tracing programs. This adds tests for explicitly specifying the module
name via the SEC macro and via the bpf_program__set_attach_target call.

Signed-off-by: Viktor Malik <vmalik@redhat.com>
Signed-off-by: Andrii Nakryiko <andrii@kernel.org>
Acked-by: Andrii Nakryiko <andrii@kernel.org>
Link: https://lore.kernel.org/bpf/8a076168ed847f7c8a6c25715737b1fea84e38be.1714469650.git.vmalik@redhat.com

  Parent Hashes: 8f8a024272f3e335854515b41638bdf89c6d3146
  Refs: 

- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'Add selftests for module:function syntax in tracing programs using SEC macro and bpf_program__set_attach_target.', 'keywords': 'selftests,module,function', 'commit_classification': "It's a test case or test infrastructure change.", 'commit_complexity': 'Moderate, requires some setup or understanding of the system. For example, a new map type or a new link type.', 'Major related component': 'The test cases and makefiles', 'program_types_related': ['tracepoints like programs']}
--------------------
--------------------
Processing Commit ID: 8f8a024272f3e335854515b41638bdf89c6d3146
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: 8f8a024272f3e335854515b41638bdf89c6d3146
  Author Name: Viktor Malik
  Author Email: vmalik@redhat.com
  Commit Date: 1714582427
  Commit Message:
    libbpf: support "module: Function" syntax for tracing programs

In some situations
  Parent Hashes: 9a1a2cb5a0e3531d68a2616663ddce49df85dfff
  Refs:  it is useful to explicitly specify a kernel module
to search for a tracing program target (e.g. when a function of the same
name exists in multiple modules or in vmlinux).

This patch enables that by allowing the "module:function" syntax for the
find_kernel_btf_id function. Thanks to this

- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': "The commit adds support for specifying a module for tracing programs using 'module:function' syntax in libbpf.", 'keywords': 'libbpf, tracing programs, module function', 'commit_classification': "It's a new feature.", 'commit_complexity': 'Moderate, requires some setup or understanding of the system. For example, a new map type or a new link type.', 'Major related component': 'The libbpf library', 'program_types_related': ['tracepoints like programs', 'kprobe/uprobe/ftrace like programs', 'It improves the overall eBPF infrastructure (e.g., verifier, runtime, etc.).']}
--------------------
--------------------
Processing Commit ID: e03c05ac9813410d15c9c39ccf02c84efe563533
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: e03c05ac9813410d15c9c39ccf02c84efe563533
  Author Name: Andrii Nakryiko
  Author Email: andrii@kernel.org
  Commit Date: 1714573128
  Commit Message:
    rethook: honor CONFIG_FTRACE_VALIDATE_RCU_IS_WATCHING in rethook_try_get()

Take into account CONFIG_FTRACE_VALIDATE_RCU_IS_WATCHING when validating
that RCU is watching when trying to setup rethooko on a function entry.

One notable exception when we force rcu_is_watching() check is
CONFIG_KPROBE_EVENTS_ON_NOTRACE=y case
  Parent Hashes: b0e28a4b5becea84ae6fca5cbd8a6b80a134e223
  Refs:  in which case kretprobes will use
old-style int3-based workflow instead of relying on ftrace

- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'The commit updates rethook to honor CONFIG_FTRACE_VALIDATE_RCU_IS_WATCHING during function entry validation.', 'keywords': 'rethook, ftrace, RCU', 'commit_classification': "It's a bug fix.", 'commit_complexity': 'Moderate, requires some setup or understanding of the system. For example, a new map type or a new link type.', 'Major related component': 'The attach events and bpf link. e.g. perf events, tracepoints, etc.', 'program_types_related': ['tracepoints like programs', 'kprobe/uprobe/ftrace like programs']}
--------------------
--------------------
Processing Commit ID: b0e28a4b5becea84ae6fca5cbd8a6b80a134e223
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: b0e28a4b5becea84ae6fca5cbd8a6b80a134e223
  Author Name: Andrii Nakryiko
  Author Email: andrii@kernel.org
  Commit Date: 1714573128
  Commit Message:
    ftrace: make extra rcu_is_watching() validation check optional

Introduce CONFIG_FTRACE_VALIDATE_RCU_IS_WATCHING config option to
control whether ftrace low-level code performs additional
rcu_is_watching()-based validation logic in an attempt to catch noinstr
violations.

This check is expected to never be true and is mostly useful for
low-level validation of ftrace subsystem invariants. For most users it
should probably be kept disabled to eliminate unnecessary runtime
overhead.

This improves BPF multi-kretprobe (relying on ftrace and rethook
infrastructure) runtime throughput by 2%
  Parent Hashes: 0dc715295d4143d1659879f7f50ad4e9a6f6a99c
  Refs:  according to BPF benchmarks ([0]).

  [0] https://lore.kernel.org/bpf/CAEf4BzauQ2WKMjZdc9s0rBWa01BYbgwHN6aNDXQSHYia47pQ-w@mail.gmail.com/

Link: https://lore.kernel.org/all/20240418190909.704286-1-andrii@kernel.org/

Cc: Steven Rostedt <rostedt@goodmis.org>
Cc: Masami Hiramatsu <mhiramat@kernel.org>
Cc: Paul E. McKenney <paulmck@kernel.org>
Acked-by: Masami Hiramatsu (Google) <mhiramat@kernel.org>
Signed-off-by: Andrii Nakryiko <andrii@kernel.org>
Signed-off-by: Masami Hiramatsu (Google) <mhiramat@kernel.org>


- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'Introduce optional CONFIG_FTRACE_VALIDATE_RCU_IS_WATCHING for ftrace rcu_is_watching validation to improve BPF multi-kretprobe performance by 2%.', 'keywords': 'ftrace, rcu_is_watching, BPF', 'commit_classification': "It's a performance optimization.", 'commit_complexity': 'Moderate, requires some setup or understanding of the system. For example, a new map type or a new link type.', 'Major related component': 'The attach events and bpf link. e.g. perf events, tracepoints, etc.', 'program_types_related': ['kprobe/uprobe/ftrace like programs']}
--------------------
--------------------
Processing Commit ID: 0dc715295d4143d1659879f7f50ad4e9a6f6a99c
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: 0dc715295d4143d1659879f7f50ad4e9a6f6a99c
  Author Name: Jonathan Haslam
  Author Email: jonathan.haslam@gmail.com
  Commit Date: 1714573127
  Commit Message:
    uprobes: reduce contention on uprobes_tree access

Active uprobes are stored in an RB tree and accesses to this tree are
dominated by read operations. Currently these accesses are serialized by
a spinlock but this leads to enormous contention when large numbers of
threads are executing active probes.

This patch converts the spinlock used to serialize access to the
uprobes_tree RB tree into a reader-writer spinlock. This lock type
aligns naturally with the overwhelmingly read-only nature of the tree
usage here. Although the addition of reader-writer spinlocks are
discouraged [0]
  Parent Hashes: 5120d167e21c674afd0630c65e7f6a00fa0667f1
  Refs:  this fix is proposed as an interim solution while an
RCU based approach is implemented (that work is in a nascent form). This
fix also has the benefit of being trivial

- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'Convert spinlock on uprobes_tree to reader-writer spinlock to reduce contention for read-heavy operations.', 'keywords': 'uprobes, contention, spinlock', 'commit_classification': "It's a performance optimization.", 'commit_complexity': 'Simple, can be used without much configuration. For example, a simple helper function.', 'Major related component': 'The attach events and bpf link. e.g. perf events, tracepoints, etc.', 'program_types_related': ['kprobe/uprobe/ftrace like programs']}
--------------------
--------------------
Processing Commit ID: 5120d167e21c674afd0630c65e7f6a00fa0667f1
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: 5120d167e21c674afd0630c65e7f6a00fa0667f1
  Author Name: Kui-Feng Lee
  Author Email: thinker.li@gmail.com
  Commit Date: 1714573127
  Commit Message:
    rethook: Remove warning messages printed for finding return address of a frame.

The function rethook_find_ret_addr() prints a warning message and returns 0
when the target task is running and is not the "current" task in order to
prevent the incorrect return address
  Parent Hashes: 73142cab3af1b99157837297f437b306d7a70bff
  Refs:  although it still may return an
incorrect address.

However

- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'The commit removes warning messages in rethook for finding the return address of a frame when the target task is not the current task.', 'keywords': 'rethook, warning, return address', 'commit_classification': "It's a bug fix.", 'commit_complexity': 'Simple, can be used without much configuration. For example, a simple helper function.', 'Major related component': 'Other component related to eBPF but not listed above.', 'program_types_related': ['other']}
--------------------
--------------------
Processing Commit ID: cdf355cc60e388d992bdd205b8ee70dc4d533461
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: cdf355cc60e388d992bdd205b8ee70dc4d533461
  Author Name: Andrii Nakryiko
  Author Email: andrii@kernel.org
  Commit Date: 1714573126
  Commit Message:
    uprobes: add speculative lockless system-wide uprobe filter check

It's very common with BPF-based uprobe/uretprobe use cases to have
a system-wide (not PID specific) probes used. In this case uprobe's
trace_uprobe_filter->nr_systemwide counter is bumped at registration
time
  Parent Hashes: 1b8f85defbc82e2eb8f27c5f6060ea507ad4d5a3
  Refs:  and actual filtering is short circuited at the time when
uprobe/uretprobe is triggered.

This is a great optimization

- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'Introduces speculative lockless system-wide filtering for BPF-based uprobes for performance optimization.', 'keywords': 'uprobes, system-wide, optimization', 'commit_classification': "It's a performance optimization.", 'commit_complexity': 'Moderate, requires some setup or understanding of the system. For example, a new map type or a new link type.', 'Major related component': 'The attach events and bpf link. e.g. perf events, tracepoints, etc.', 'program_types_related': ['kprobe/uprobe/ftrace like programs']}
--------------------
--------------------
Processing Commit ID: 1b8f85defbc82e2eb8f27c5f6060ea507ad4d5a3
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: 1b8f85defbc82e2eb8f27c5f6060ea507ad4d5a3
  Author Name: Andrii Nakryiko
  Author Email: andrii@kernel.org
  Commit Date: 1714573126
  Commit Message:
    uprobes: prepare uprobe args buffer lazily

uprobe_cpu_buffer and corresponding logic to store uprobe args into it
are used for uprobes/uretprobes that are created through tracefs or
perf events.

BPF is yet another user of uprobe/uretprobe infrastructure
  Parent Hashes: 3eaea21b4d27cff0017c20549aeb53034c58fc23
  Refs:  but doesn't
need uprobe_cpu_buffer and associated data. For BPF-only use cases this
buffer handling and preparation is a pure overhead. At the same time

- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'Lazily prepare uprobe args buffer to optimize BPF use cases.', 'keywords': 'uprobe,args,BPF', 'commit_classification': "It's a performance optimization.", 'commit_complexity': 'Moderate, requires some setup or understanding of the system. For example, a new map type or a new link type.', 'Major related component': 'The attach events and bpf link. e.g. perf events, tracepoints, etc.', 'program_types_related': ['kprobe/uprobe/ftrace like programs']}
--------------------
--------------------
Processing Commit ID: 02b670c1f88e78f42a6c5aee155c7b26960ca054
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: 02b670c1f88e78f42a6c5aee155c7b26960ca054
  Author Name: Linus Torvalds
  Author Email: torvalds@linux-foundation.org
  Commit Date: 1714549303
  Commit Message:
    x86/mm: Remove broken vsyscall emulation code from the page fault code

The syzbot-reported stack trace from hell in this discussion thread
actually has three nested page faults:

  https://lore.kernel.org/r/000000000000d5f4fc0616e816d4@google.com

... and I think that's actually the important thing here:

 - the first page fault is from user space
  Parent Hashes: 720a22fd6c1cdadf691281909950c0cbc5cdf17e
  Refs:  and triggers the vsyscall
   emulation.

 - the second page fault is from __do_sys_gettimeofday()

- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'The commit removes broken vsyscall emulation code from x86 page fault handling.', 'keywords': 'vsyscall, emulation, x86', 'commit_classification': "It's a bug fix.", 'commit_complexity': 'Moderate, requires some setup or understanding of the system. For example, a new map type or a new link type.', 'Major related component': 'Other component related to eBPF but not listed above.', 'program_types_related': ["It's not related to any of the above."]}
--------------------
--------------------
Processing Commit ID: 8405e6980f21e2b75f232e970edd76bc50cf1491
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: 8405e6980f21e2b75f232e970edd76bc50cf1491
  Author Name: Geliang Tang
  Author Email: tanggeliang@kylinos.cn
  Commit Date: 1714518090
  Commit Message:
    selftests/bpf: Drop start_server_proto helper

Protocol can be set by __start_server() helper directly now
  Parent Hashes: 044032ee6c4e786746058aaf5527be13e831cc5c
  Refs:  this makes
the heler start_server_proto() useless.

This patch drops it

- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'This commit removes the now redundant start_server_proto helper in bpf selftests.', 'keywords': 'remove,redundant,selftests', 'commit_classification': "It's a cleanup or refactoring in the code.", 'commit_complexity': 'Simple, can be used without much configuration. For example, a simple helper function.', 'Major related component': 'The test cases and makefiles', 'program_types_related': ["It's not related to any of the above."]}
--------------------
--------------------
Processing Commit ID: 044032ee6c4e786746058aaf5527be13e831cc5c
Survey Title: Commit Classification Survey


Description: A survey about the type, use cases and summary of commit in Linux eBPF.

Commit Details:
  Commit ID: 044032ee6c4e786746058aaf5527be13e831cc5c
  Author Name: Geliang Tang
  Author Email: tanggeliang@kylinos.cn
  Commit Date: 1714518090
  Commit Message:
    selftests/bpf: Make start_mptcp_server static

start_mptcp_server() shouldn't be a public helper
  Parent Hashes: 95b88500b97ca8bafc0b9c8e79e9716c2ddc40c6
  Refs:  it only be used in
MPTCP tests. This patch moves it into prog_tests/mptcp.c

- Please provide a summary of the commit in one short sentence not longer than 30 words. Only output one sentence.

- Please extract no more than 3 keywords from the commit. Only output 3 keywords, without any special characters.

- What may be the main type of the commit?

- What is the estimated complexity of implementing this commit?

- What major component that the commit is related to?

- What eBPF program(s) may the commit relate to and designed for?

{'summary': 'The commit makes start_mptcp_server a static function specific to MPTCP tests.', 'keywords': 'static,function,MPTCP', 'commit_classification': "It's a test case or test infrastructure change.", 'commit_complexity': 'Simple, can be used without much configuration. For example, a simple helper function.', 'Major related component': 'The test cases and makefiles', 'program_types_related': ["It's not related to any of the above."]}
--------------------
--------------------
Processing Commit ID: 95b88500b97ca8bafc0b9c8e79e9716c2ddc40c6
